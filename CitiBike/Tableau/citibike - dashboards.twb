<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook original-version='18.1' source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneFriendlyName />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='2013' inline='true' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2013' name='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t'>
            <connection class='textscan' directory='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/final_database' filename='2013.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='2013.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' />
            <column datatype='datetime' name='started_at' />
            <column datatype='datetime' name='ended_at' />
            <column datatype='real' name='start_station_id' />
            <column datatype='string' name='start_station_name' />
            <column datatype='real' name='start_lat' />
            <column datatype='real' name='start_lng' />
            <column datatype='real' name='end_station_id' />
            <column datatype='string' name='end_station_name' />
            <column datatype='real' name='end_lat' />
            <column datatype='real' name='end_lng' />
            <column datatype='string' name='member_casual' />
            <column datatype='integer' name='weekday' />
            <column datatype='integer' name='holiday' />
            <column datatype='integer' name='F1' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2013.csv' table='[2013#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='integer' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='integer' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2014.csv' table='[2014#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='integer' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='integer' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2015.csv' table='[2015#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='integer' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='integer' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2016.csv' table='[2016#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='integer' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='integer' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2017.csv' table='[2017#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='integer' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='integer' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2018.csv' table='[2018#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='real' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='real' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2019.csv' table='[2019#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='real' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='real' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2020.csv' table='[2020#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='integer' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='integer' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2021-2022.csv' table='[2021-2022#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='tripduration' ordinal='1' />
              <column datatype='datetime' name='started_at' ordinal='2' />
              <column datatype='datetime' name='ended_at' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_station_id' ordinal='5' />
              <column datatype='string' name='end_station_name' ordinal='6' />
              <column datatype='real' name='end_station_id' ordinal='7' />
              <column datatype='real' name='start_lat' ordinal='8' />
              <column datatype='real' name='start_lng' ordinal='9' />
              <column datatype='real' name='end_lat' ordinal='10' />
              <column datatype='real' name='end_lng' ordinal='11' />
              <column datatype='string' name='member_casual' ordinal='12' />
              <column datatype='integer' name='weekday' ordinal='13' />
              <column datatype='integer' name='holiday' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2021.csv' table='[2021#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='integer' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='integer' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='2013.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' />
            <column datatype='datetime' name='started_at' />
            <column datatype='datetime' name='ended_at' />
            <column datatype='real' name='start_station_id' />
            <column datatype='string' name='start_station_name' />
            <column datatype='real' name='start_lat' />
            <column datatype='real' name='start_lng' />
            <column datatype='real' name='end_station_id' />
            <column datatype='string' name='end_station_name' />
            <column datatype='real' name='end_lat' />
            <column datatype='real' name='end_lng' />
            <column datatype='string' name='member_casual' />
            <column datatype='integer' name='weekday' />
            <column datatype='integer' name='holiday' />
            <column datatype='integer' name='F1' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2013.csv' table='[2013#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='integer' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='integer' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2014.csv' table='[2014#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='integer' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='integer' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2015.csv' table='[2015#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='integer' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='integer' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2016.csv' table='[2016#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='integer' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='integer' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2017.csv' table='[2017#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='integer' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='integer' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2018.csv' table='[2018#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='real' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='real' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2019.csv' table='[2019#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='real' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='real' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2020.csv' table='[2020#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='integer' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='integer' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2021-2022.csv' table='[2021-2022#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='tripduration' ordinal='1' />
              <column datatype='datetime' name='started_at' ordinal='2' />
              <column datatype='datetime' name='ended_at' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_station_id' ordinal='5' />
              <column datatype='string' name='end_station_name' ordinal='6' />
              <column datatype='real' name='end_station_id' ordinal='7' />
              <column datatype='real' name='start_lat' ordinal='8' />
              <column datatype='real' name='start_lng' ordinal='9' />
              <column datatype='real' name='end_lat' ordinal='10' />
              <column datatype='real' name='end_lng' ordinal='11' />
              <column datatype='string' name='member_casual' ordinal='12' />
              <column datatype='integer' name='weekday' ordinal='13' />
              <column datatype='integer' name='holiday' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2021.csv' table='[2021#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='started_at' ordinal='1' />
              <column datatype='datetime' name='ended_at' ordinal='2' />
              <column datatype='integer' name='start_station_id' ordinal='3' />
              <column datatype='string' name='start_station_name' ordinal='4' />
              <column datatype='real' name='start_lat' ordinal='5' />
              <column datatype='real' name='start_lng' ordinal='6' />
              <column datatype='integer' name='end_station_id' ordinal='7' />
              <column datatype='string' name='end_station_name' ordinal='8' />
              <column datatype='real' name='end_lat' ordinal='9' />
              <column datatype='real' name='end_lng' ordinal='10' />
              <column datatype='string' name='member_casual' ordinal='11' />
              <column datatype='integer' name='weekday' ordinal='12' />
              <column datatype='integer' name='holiday' ordinal='13' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>started_at</remote-name>
            <remote-type>7</remote-type>
            <local-name>[started_at]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>started_at</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ended_at</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ended_at]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>ended_at</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start_station_id]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>start_station_id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start_station_name]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>start_station_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start_lat]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>start_lat</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start_lng]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>start_lng</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end_station_id]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>end_station_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end_station_name]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>end_station_name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end_lat]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>end_lat</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end_lng]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>end_lng</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>member_casual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[member_casual]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>member_casual</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekday]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>weekday</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[holiday]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>holiday</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[2013.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]&quot;' value='Trips' />
          <alias key='&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[ctd:start_station_name:qk]&quot;' value='Stations' />
        </aliases>
      </column>
      <column caption='Rank Stations' datatype='integer' name='[Calculation_1751900268825030658]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(COUNT([start_station_name]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='YOY - Growth' datatype='real' name='[Calculation_665969808291094529]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(COUNT([__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077])) - LOOKUP(ZN(COUNT([__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077])), -1)) / ABS(LOOKUP(ZN(COUNT([__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077])), -1))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='fix count by year' datatype='integer' name='[Calculation_665969808304349186]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [started_at] : COUNT([__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077])}' />
      </column>
      <column caption='Point_Start' datatype='spatial' name='[Calculation_741405102171062277]' role='measure' type='nominal'>
        <calculation class='tableau' formula='MAKEPOINT([start_lat],[start_lng])' />
      </column>
      <column caption='Point_End' datatype='spatial' name='[Calculation_741405102171275270]' role='measure' type='nominal'>
        <calculation class='tableau' formula='MAKEPOINT([end_lat],[end_lng])' />
      </column>
      <column caption='distance' datatype='spatial' name='[Calculation_741405102171418631]' role='measure' type='nominal'>
        <calculation class='tableau' formula='MAKELINE([Calculation_741405102171062277],[Calculation_741405102171275270])' />
      </column>
      <column caption='TEST1' datatype='string' name='[Calculation_741405102174445576]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([start_station_name])+&apos;, &apos;+STR([end_station_name])' />
      </column>
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[Table Name]' role='dimension' type='nominal' />
      <column caption='station growth' datatype='real' name='[YOY - Growth (copy)_741405102133182466]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(COUNT([start_station_id])) - LOOKUP(ZN(COUNT([start_station_id])), -1)) / ABS(LOOKUP(ZN(COUNT([start_station_id])), -1))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='2013.csv' datatype='table' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Lat' datatype='real' name='[end_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Lng' datatype='real' name='[end_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Id' datatype='real' name='[end_station_id]' role='dimension' type='ordinal' />
      <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
      <column caption='Ended At' datatype='datetime' name='[ended_at]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Holiday' datatype='integer' name='[holiday]' role='dimension' type='ordinal' />
      <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Start Lat' datatype='real' name='[start_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Lng' datatype='real' name='[start_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Id' datatype='real' name='[start_station_id]' role='dimension' type='ordinal' />
      <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
      <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Weekday' datatype='integer' name='[weekday]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[__tableau_internal_object_id__].[pcdf:cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_665969808304349186]' derivation='Count' name='[cnt:Calculation_665969808304349186:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start_station_id]' derivation='CountD' name='[ctd:start_station_id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start_station_name]' derivation='CountD' name='[ctd:start_station_name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_665969808304349186]' derivation='Count' name='[diff:cnt:Calculation_665969808304349186:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_665969808304349186]' derivation='Count' name='[diff:cnt:Calculation_665969808304349186:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_665969808304349186]' derivation='Count' name='[diff:cnt:Calculation_665969808304349186:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[started_at]' derivation='Day' name='[dy:started_at:ok]' pivot='key' type='ordinal' />
      <column-instance column='[ended_at]' derivation='Hour' name='[hr:ended_at:ok]' pivot='key' type='ordinal' />
      <column-instance column='[started_at]' derivation='Hour' name='[hr:started_at:ok]' pivot='key' type='ordinal' />
      <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:nk]' pivot='key' type='nominal' />
      <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[start_station_id]' derivation='CountD' name='[pcdf:ctd:start_station_id:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[start_station_name]' derivation='CountD' name='[pcdf:ctd:start_station_name:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[pcto:cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_665969808304349186]' derivation='Count' name='[pcto:cnt:Calculation_665969808304349186:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[wd:started_at:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_665969808304349186]' derivation='Count' name='[pcto:cnt:Calculation_665969808304349186:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_665969808304349186]' derivation='Count' name='[pcto:cnt:Calculation_665969808304349186:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_665969808304349186]' derivation='Sum' name='[sum:Calculation_665969808304349186:qk]' pivot='key' type='quantitative' />
      <column-instance column='[started_at]' derivation='Month-Trunc' name='[tmn:started_at:ok]' pivot='key' type='ordinal' />
      <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
      <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
      <group caption='Action (HOUR(Ended At))' hidden='true' name='[Action (HOUR(Ended At))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[hr:ended_at:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (HOUR(Started At))' hidden='true' name='[Action (HOUR(Started At))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[hr:started_at:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Member Casual,YEAR(Started At))' hidden='true' name='[Action (Member Casual,YEAR(Started At))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[member_casual]' />
          <groupfilter function='level-members' level='[yr:started_at:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Member Casual,YEAR(Started At),WEEKDAY(Started At))' hidden='true' name='[Action (Member Casual,YEAR(Started At),WEEKDAY(Started At))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[member_casual]' />
          <groupfilter function='level-members' level='[yr:started_at:ok]' />
          <groupfilter function='level-members' level='[wd:started_at:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Start Station Name,YEAR(Started At))' hidden='true' name='[Action (Start Station Name,YEAR(Started At))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[start_station_name]' />
          <groupfilter function='level-members' level='[yr:started_at:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Started At))' hidden='true' name='[Action (YEAR(Started At))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:started_at:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Started At),HOUR(Started At))' hidden='true' name='[Action (YEAR(Started At),HOUR(Started At))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:started_at:ok]' />
          <groupfilter function='level-members' level='[hr:started_at:ok]' />
        </groupfilter>
      </group>
      <group caption='Start Station &amp; End Station Name' name='[End Station Name &amp; Start Station Name (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[start_station_name]' />
          <groupfilter function='level-members' level='[end_station_name]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (End Station Name,YEAR(Started At))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:end_station_name:nk]' />
          <groupfilter function='level-members' level='[yr:started_at:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Start Station Name,YEAR(Started At))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:start_station_name:nk]' />
          <groupfilter function='level-members' level='[yr:started_at:ok]' />
        </groupfilter>
      </group>
      <group caption='MONTH(Started At) Set' name='[MONTH(Started At) Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[mn:started_at:ok]' member='3' />
          <groupfilter function='member' level='[mn:started_at:ok]' member='4' />
          <groupfilter function='member' level='[mn:started_at:ok]' member='5' />
        </groupfilter>
      </group>
      <group caption='2021 - TOP 10' name='[Start Station Name Set 3]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[start_station_name]' member='&quot;1 Ave &amp; E 68 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;12 Ave &amp; W 40 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;7 Ave &amp; Central Park South&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Broadway &amp; W 25 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Central Park S &amp; 6 Ave&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;E 17 St &amp; Broadway&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;West St &amp; Chambers St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;West St &amp; Liberty St&quot;' />
        </groupfilter>
      </group>
      <group caption='2021 - 0' name='[Start Station Name Set 4]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[start_station_name]' member='&quot;12 Ave &amp; W 40 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;7 Ave &amp; Central Park South&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Broadway &amp; W 25 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Carmine St &amp; 6 Ave&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Central Park S &amp; 6 Ave&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;E 17 St &amp; Broadway&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;West St &amp; Chambers St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;West St &amp; Liberty St&quot;' />
        </groupfilter>
      </group>
      <group caption='2021 - 1' name='[Start Station Name Set 5]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[start_station_name]' member='&quot;1 Ave &amp; E 68 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;7 Ave &amp; Central Park South&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Broadway &amp; W 25 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;E 17 St &amp; Broadway&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;E 33 St &amp; 1 Ave&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Pershing Square North&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;West St &amp; Chambers St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;West St &amp; Liberty St&quot;' />
        </groupfilter>
      </group>
      <group caption='2020 - 1' name='[Start Station Name Set 6]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[start_station_name]' member='&quot;1 Ave &amp; E 68 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;12 Ave &amp; W 40 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Broadway &amp; E 22 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Broadway &amp; W 60 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;E 13 St &amp; Avenue A&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;E 17 St &amp; Broadway&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Pershing Square North&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;West St &amp; Chambers St&quot;' />
        </groupfilter>
      </group>
      <group caption='2019 - 1' name='[Start Station Name Set 7]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[start_station_name]' member='&quot;8 Ave &amp; W 31 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;8 Ave &amp; W 33 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Broadway &amp; E 14 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Broadway &amp; E 22 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;E 17 St &amp; Broadway&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;E 47 St &amp; Park Ave&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Pershing Square North&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;West St &amp; Chambers St&quot;' />
        </groupfilter>
      </group>
      <group caption='2019 - 0' name='[Start Station Name Set 8]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[start_station_name]' member='&quot;12 Ave &amp; W 40 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Broadway &amp; E 14 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Broadway &amp; W 60 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Carmine St &amp; 6 Ave&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Central Park S &amp; 6 Ave&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;E 17 St &amp; Broadway&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Pier 40 - Hudson River Park&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;W 20 St &amp; 11 Ave&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;West St &amp; Chambers St&quot;' />
        </groupfilter>
      </group>
      <group caption='2020 - 0' name='[Start Station Name Set 9]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[start_station_name]' member='&quot;12 Ave &amp; W 40 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;5 Ave &amp; E 73 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Broadway &amp; W 60 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Central Park S &amp; 6 Ave&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;E 17 St &amp; Broadway&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Little West St &amp; 1 Pl&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;Pier 40 - Hudson River Park&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;S 5 Pl &amp; S 5 St&quot;' />
          <groupfilter function='member' level='[start_station_name]' member='&quot;West St &amp; Chambers St&quot;' />
        </groupfilter>
      </group>
      <group caption='YEAR - 2022' name='[YEAR(Started At) Set (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[yr:started_at:ok]' member='2013' />
          <groupfilter function='member' level='[yr:started_at:ok]' member='2014' />
          <groupfilter function='member' level='[yr:started_at:ok]' member='2015' />
          <groupfilter function='member' level='[yr:started_at:ok]' member='2016' />
          <groupfilter function='member' level='[yr:started_at:ok]' member='2017' />
          <groupfilter function='member' level='[yr:started_at:ok]' member='2018' />
          <groupfilter function='member' level='[yr:started_at:ok]' member='2019' />
          <groupfilter function='member' level='[yr:started_at:ok]' member='2020' />
          <groupfilter function='member' level='[yr:started_at:ok]' member='2021' />
        </groupfilter>
      </group>
      <group caption='YEAR(Started At) Set' name='[YEAR(Started At) Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[yr:started_at:ok]' member='2019' />
          <groupfilter function='member' level='[yr:started_at:ok]' member='2020' />
          <groupfilter function='member' level='[yr:started_at:ok]' member='2021' />
        </groupfilter>
      </group>
      <mapped-images>
        <mapped-image caption='Citi-Bike-Nueva-York-azul' expression='file:///C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/Citi-Bike-Nueva-York-azul.jpg' name='[MappedImage1]'>
          <mapping bottom='0' left='#2013-07-30#' right='#2021-12-31#' top='800000' x='[started_at]' y='[tripduration]' />
        </mapped-image>
      </mapped-images>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/2013-2021.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/15/2022 01:38:21 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='2013' increment-value='%null%' refresh-type='create' rows-inserted='140655561' timestamp-start='2022-03-15 01:25:08.958' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>tripduration</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tripduration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tripduration</remote-alias>
              <ordinal>0</ordinal>
              <family>2013.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5315</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>started_at</remote-name>
              <remote-type>135</remote-type>
              <local-name>[started_at]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>started_at</remote-alias>
              <ordinal>1</ordinal>
              <family>2013.csv+</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>115224730</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ended_at</remote-name>
              <remote-type>135</remote-type>
              <local-name>[ended_at]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ended_at</remote-alias>
              <ordinal>2</ordinal>
              <family>2013.csv+</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>114019922</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_station_id</remote-name>
              <remote-type>5</remote-type>
              <local-name>[start_station_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_station_id</remote-alias>
              <ordinal>3</ordinal>
              <family>2013.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3445</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_station_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[start_station_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_station_name</remote-alias>
              <ordinal>4</ordinal>
              <family>2013.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2034</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[start_lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_lat</remote-alias>
              <ordinal>5</ordinal>
              <family>2013.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4000</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_lng</remote-name>
              <remote-type>5</remote-type>
              <local-name>[start_lng]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_lng</remote-alias>
              <ordinal>6</ordinal>
              <family>2013.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3713</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end_station_id</remote-name>
              <remote-type>5</remote-type>
              <local-name>[end_station_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end_station_id</remote-alias>
              <ordinal>7</ordinal>
              <family>2013.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3711</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end_station_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[end_station_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end_station_name</remote-alias>
              <ordinal>8</ordinal>
              <family>2013.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2168</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end_lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[end_lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end_lat</remote-alias>
              <ordinal>9</ordinal>
              <family>2013.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3604</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end_lng</remote-name>
              <remote-type>5</remote-type>
              <local-name>[end_lng]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end_lng</remote-alias>
              <ordinal>10</ordinal>
              <family>2013.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3360</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>member_casual</remote-name>
              <remote-type>129</remote-type>
              <local-name>[member_casual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>member_casual</remote-alias>
              <ordinal>11</ordinal>
              <family>2013.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekday</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weekday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekday</remote-alias>
              <ordinal>12</ordinal>
              <family>2013.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>holiday</remote-name>
              <remote-type>20</remote-type>
              <local-name>[holiday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>holiday</remote-alias>
              <ordinal>13</ordinal>
              <family>2013.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>14</ordinal>
              <family>2013.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56986111</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Table Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Table Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Table Name</remote-alias>
              <ordinal>15</ordinal>
              <family>2013.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[dy:started_at:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2013</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2017</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2016</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>2021</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2019</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2022</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2018</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>2020</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[wd:started_at:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2013</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2017</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2016</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>2021</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2019</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2022</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2018</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>2020</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[pcdf:cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]&quot;</bucket>
            </map>
            <map to='#6e7a81'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]&quot;</bucket>
            </map>
            <map to='#acb0b1'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[ctd:start_station_name:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[ctd:start_station_id:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcdf:ctd:start_station_id:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcdf:ctd:start_station_name:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[pcto:cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[cnt:Calculation_665969808304349186:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[diff:cnt:Calculation_665969808304349186:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[diff:cnt:Calculation_665969808304349186:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[diff:cnt:Calculation_665969808304349186:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:Calculation_665969808304349186:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:Calculation_665969808304349186:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:Calculation_665969808304349186:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[sum:Calculation_665969808304349186:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:started_at:ok]' type='palette'>
            <map to='#499894'>
              <bucket>6</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2013</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2017</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2016</bucket>
            </map>
            <map to='#79706e'>
              <bucket>9</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>7</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>3</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>2021</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2019</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>4</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>12</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2022</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2018</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>5</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>8</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>2020</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[hr:started_at:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2013</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2017</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2016</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>2021</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2019</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2022</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2018</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>2020</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[End Station Name &amp; Start Station Name (Combined)]' type='palette'>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;1 Ave &amp; E 110 St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;27 St &amp; Hunter St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;44 Dr &amp; 21 St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;5 Ave &amp; E 63 St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;8 Ave &amp; W 33 St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Avenue D &amp; E 12 St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bond St &amp; Bergen St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; W 56 St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Carroll St &amp; Smith St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Clark St &amp; Henry St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Concord St &amp; Bridge St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Devoe St &amp; Lorimer St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 123 St &amp; Lexington Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 25 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 48 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 68 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 89 St &amp; York Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 9 St &amp; Avenue C&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Fulton St &amp; Adams St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Greene Av &amp; Myrtle Av&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Hudson St &amp; Reade St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lafayette St &amp; E 8 St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lexington Ave &amp; E 36 St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;McKibbin St &amp; Bogart St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;N 11 St &amp; Kent Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Pearl St &amp; Anchorage Pl&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Queens Plaza North &amp; Crescent St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Sigourney St &amp; Columbia St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Sterling Pl &amp; Bedford Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Vernon Blvd &amp; 50 Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 113 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 21 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 43 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 67 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Willoughby Ave &amp; Hall St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;2 Ave &amp; E 96 St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;27 St &amp; Hunter St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;34 St &amp; 35 Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;5 Ave &amp; E 88 St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;9 Ave &amp; W 28 St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Baltic St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; Battery Pl&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Bushwick Ave &amp; Powers St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Central Park S &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Clinton St &amp; Grand St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Dean St &amp; Franklin Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 110 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 19 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 2 St &amp; Avenue C&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 44 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 59 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 84 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Franklin St &amp; W Broadway&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Graham Ave &amp; Withers St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Henry St &amp; Poplar St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;LaGuardia Pl &amp; W 3 St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Little West St &amp; 1 Pl&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Montrose Ave &amp; Bushwick Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Park Pl &amp; Church St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Reade St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Smith St &amp; 3 St&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Stuyvesant Walk &amp; 1 Av Loop&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Vesey Pl &amp; River Terrace&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 116 St &amp; Amsterdam Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 22 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 44 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 74 St &amp; Columbus Ave&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Willoughby Ave &amp; Wyckoff Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;1 Ave &amp; E 16 St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;11 Ave &amp; W 59 St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;3 Ave &amp; Schermerhorn St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;31 St &amp; Thomson Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;6 Ave &amp; Spring St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Amsterdam Ave &amp; W 79 St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bergen St &amp; Flatbush Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; W 32 St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Canal St &amp; Rutgers St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Central Park West &amp; W 76 St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Columbia Heights &amp; Cranberry St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Dean St &amp; Hoyt St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 109 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 16 St &amp; Irving Pl&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 2 St &amp; Avenue A&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 43 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 58 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 82 St &amp; East End Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Franklin St &amp; W Broadway&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Graham Ave &amp; Withers St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Henry St &amp; Atlantic Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Kingston Ave &amp; Herkimer St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Leonard St &amp; Maujer St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Madison Ave &amp; E 120 St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Morningside Ave &amp; W 123 St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Old Fulton St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Plaza St West &amp; Flatbush Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;S 3 St &amp; Bedford Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;St Nicholas Ave &amp; Manhattan Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Union Ave &amp; Wallabout St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 16 St &amp; The High Line&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 35 St &amp; Dyer Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 52 St &amp; 11 Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 92 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Water - Whitehall Plaza&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;1 Ave &amp; E 62 St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;14 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;3 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;31 St &amp; Astoria Blvd&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;44 Dr &amp; 21 St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;7 Ave &amp; Central Park South&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Amsterdam Ave &amp; W 119 St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Berkeley Pl &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; W 41 St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Carroll St &amp; Franklin Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Clark St &amp; Henry St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Cooper Square &amp; Astor Pl&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Driggs Ave &amp; Lorimer St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 11 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 33 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 55 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 77 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 97 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Eastern Pkwy &amp; Washington Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Fulton St &amp; Waverly Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Greenwich St &amp; W Houston St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Kane St &amp; Clinton St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lexington Ave &amp; E 26 St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;McKibbin St &amp; Manhattan Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Nassau St &amp; Navy St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Pioneer St &amp; Richards St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;S 3 St &amp; Bedford Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Stagg St &amp; Morgan Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Van Brunt St &amp; Van Dyke St&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 100 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 17 St &amp; 9 Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 37 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 54 St &amp; 9 Ave&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Water - Whitehall Plaza&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;1 Ave &amp; E 62 St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;21 St &amp; 31 Dr&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;3 St &amp; Prospect Park West&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;35 Ave &amp; 37 St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;7 Ave &amp; Central Park South&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Atlantic Ave &amp; Furman St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Berkeley Pl &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; W 41 St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Carmine St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Centre St &amp; Chambers St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Columbus Ave &amp; W 72 St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;DeKalb Ave &amp; Hudson Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 115 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 20 St &amp; FDR Drive&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 47 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 5 St &amp; Avenue C&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 65 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 85 St &amp; York Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Front St &amp; Gold St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Grand St &amp; Elizabeth St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Henry St &amp; Poplar St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Kosciuszko St &amp; Tompkins Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lewis Ave &amp; Madison St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Marcus Garvey Blvd &amp; Macon St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Myrtle Ave &amp; Lewis Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Park Ave &amp; Marcus Garvey Blvd&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Prospect Pl &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;S Portland Ave &amp; Hanson Pl&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Stanton St &amp; Mangin St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;University Pl &amp; E 8 St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 106 St &amp; Amsterdam Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 18 St &amp; 9 Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 40 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 56 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;West End Ave &amp; W 107 St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;1 Ave &amp; E 110 St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;21 St &amp; Queens Plaza North&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;31 St &amp; Northern Blvd&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;47 Ave &amp; 31 St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;5 Ave &amp; E 29 St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;8 Ave &amp; W 33 St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Avenue C &amp; E 18 St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Bond St &amp; Bergen St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; W 56 St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Cedar St &amp; Myrtle Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Cliff St &amp; Fulton St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Crescent St &amp; 35 Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Duffield St &amp; Willoughby St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 103 St &amp; Lexington Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 15 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 39 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 58 St &amp; 1 Ave (NE Corner\)&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 81 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Forsyth St &amp; Broome St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;George St &amp; Wilson Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Henry St &amp; Atlantic Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lafayette Ave &amp; Fort Greene Pl&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lexington Ave &amp; E 111 St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Metropolitan Ave &amp; Bedford Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Old Fulton St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Powers St &amp; Olive St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Schermerhorn St &amp; Bond St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Stanton St &amp; Norfolk St&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Vernon Blvd &amp; 31 Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 106 St &amp; Central Park West&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 20 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 42 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 63 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;West End Ave &amp; W 107 St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;2 Ave &amp; E 96 St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;31 Ave &amp; 30 St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;5 Ave &amp; E 93 St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;9 Ave &amp; W 28 St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Banker St &amp; Meserole Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; Battery Pl&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bus Slip &amp; State St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Cedar St &amp; Myrtle Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Cleveland Pl &amp; Spring St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Court St &amp; State St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Douglass St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 11 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 31 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 53 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 75 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 97 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Eckford St &amp; Engert Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Fulton St &amp; Rockwell Pl&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Greenwich Ave &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Jackson Ave &amp; 46 Rd&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lawrence St &amp; Willoughby St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lispenard St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Meserole Ave &amp; Manhattan Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Nassau Ave &amp; Russell St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Pershing Square North&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Riverside Dr &amp; W 72 St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;South St &amp; Gouverneur Ln&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Sullivan St &amp; Washington Sq&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 11 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 25 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 45 St &amp; 6 Ave -&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 78 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W Broadway &amp; Spring Street&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Willoughby St &amp; Fleet St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;10 Hudson Yards&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;28 St &amp; 41 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;3 Ave &amp; E 62 St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;35 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;5 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Adelphi St &amp; Myrtle Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Barrow St &amp; Hudson St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; Moylan Pl&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Canal St &amp; Rutgers St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Central Park West &amp; W 76 St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Columbia St &amp; Kane St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;DeKalb Ave &amp; S Portland Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 116 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 23 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 47 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 6 St &amp; Avenue D&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 67 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 88 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Frederick Douglass Blvd &amp; W 129 St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Grand St &amp; Elizabeth St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Hudson St &amp; Reade St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lenox Ave &amp; W 117 St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Madison Ave &amp; E 82 St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Murray St &amp; West St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Peck Slip &amp; Front St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Riverside Dr &amp; W 78 St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;South St &amp; Whitehall St&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Suydam St &amp; Knickerbocker Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 13 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 26 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 46 St &amp; 11 Ave&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 84 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W Broadway &amp; Spring Street&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Wyckoff St &amp; Bond St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;28 St &amp; 36 Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;44 Dr &amp; Jackson Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;5 Ave &amp; E 73 St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;8 Ave &amp; W 52 St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Baltic St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bond St &amp; Fulton St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; W 60 St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Carroll St &amp; Washington Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Classon Ave &amp; St Marks Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Congress St &amp; Clinton St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Division Av &amp; Hooper St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 10 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 128 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 25 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 51 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 72 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 91 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Fulton St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Greene Ave &amp; Nostrand Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Humboldt St &amp; Varet St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lafayette St &amp; Jersey St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lexington Ave &amp; E 63 St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;McKibbin St &amp; Manhattan Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;N 12 St &amp; Bedford Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Pearl St &amp; Hanover Square&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Reade St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Smith St &amp; 3 St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Stockholm St &amp; Wilson Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Verona Pl &amp; Fulton St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 116 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 22 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 43 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 70 St &amp; Amsterdam Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Willoughby Ave &amp; Tompkins Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;2 Ave &amp; E 99 St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;28 Ave &amp; 35 St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;35 Ave &amp; 10 St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;5 Ave &amp; E 93 St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;9 Ave &amp; W 45 St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Bank St &amp; Hudson St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; Berry St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Cadman Plaza E &amp; Johnson St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Central Park W &amp; W 96 St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Clinton St &amp; Joralemon St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Dean St &amp; Hoyt St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 114 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 20 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 4 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 45 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 60 St &amp; York Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 84 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Frederick Douglass Blvd &amp; W 112 St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Grand Army Plaza &amp; Central Park S&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Hicks St &amp; Montague St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Laight St &amp; Hudson St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;MacDougal St &amp; Prince St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Morningside Ave &amp; W 123 St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Park Pl &amp; Vanderbilt Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Richardson St &amp; N Henry St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Smith St &amp; 9 St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Suffolk St &amp; Stanton St&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 116 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 24 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 4 St &amp; 7 Ave S&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 45 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 76 St &amp; Columbus Ave&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Willoughby St &amp; Fleet St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;1 Ave &amp; E 68 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;24 Ave &amp; 26 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;36 Ave &amp; 31 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;4 Ave &amp; 9 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;7 Ave &amp; Park Pl&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Avenue C &amp; E 18 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Berry St &amp; N 8 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; W 49 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Carroll St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Centre St &amp; Worth St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Columbus Ave &amp; W 95 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;DeKalb Ave &amp; S Portland Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 118 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 20 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 47 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 6 St &amp; Avenue B&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 66 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 88 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Front St &amp; Maiden Ln&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Grand St &amp; Greene St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Hicks St &amp; Montague St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lafayette Ave &amp; Classon Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lexington Ave &amp; Classon Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Marcy Ave &amp; Lafayette Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Myrtle Ave &amp; Marcy Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Park Pl &amp; Church St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Prospect Pl &amp; Underhill Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Schermerhorn St &amp; Bond St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Stanton St &amp; Norfolk St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;University Pl &amp; E 14 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 106 St &amp; Central Park West&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 20 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 41 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 59 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;West St &amp; Chambers St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;1 Pl &amp; Clinton St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;24 Ave &amp; 26 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;31 St &amp; Thomson Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;48 Ave &amp; 5 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;5 Ave &amp; E 63 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;8 Ave &amp; W 52 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Avenue D &amp; E 3 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Bond St &amp; Fulton St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; W 60 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Center Blvd &amp; 48 Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Cliff St &amp; Fulton St (Old\)&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Crescent St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 106 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 16 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 2 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 41 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 58 St &amp;  1 Ave (NW Corner\)&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 81 St &amp; York Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Forsyth St &amp; Canal St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Graham Ave &amp; Conselyea St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Henry St &amp; Degraw St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lafayette Ave &amp; St James Pl&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lexington Ave &amp; E 127 St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Metropolitan Ave &amp; Meeker Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Old Slip &amp; Front St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;President St &amp; Henry St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Schermerhorn St &amp; Court St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;State St &amp; Smith St&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Vernon Blvd &amp; 41 Rd&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 107 St &amp; Columbus Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 20 St &amp; 11 Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 42 St &amp; Dyer Ave&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 64 St &amp; Thelonious Monk Circle&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;West St &amp; Chambers St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;11 Ave &amp; W 27 St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;3 Ave &amp; E 95 St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;31 St &amp; Newtown Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;6 Ave &amp; Broome St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Amsterdam Ave &amp; W 66 St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bedford Ave &amp; Nassau Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; W 25 St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Cadman Plaza West &amp; Montague St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Central Park West &amp; W 68 St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Clinton St &amp; Grand St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Dean St &amp; 4 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Duffield St &amp; Willoughby St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 106 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 15 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 39 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 58 St &amp; 1 Ave (NE Corner\)&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 81 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Franklin Ave &amp; Empire Blvd&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Graham Ave &amp; Conselyea St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Harrison St &amp; Hudson St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Kent Ave &amp; N 7 St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Leonard St &amp; Boerum St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Madison Ave &amp; E 82 St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Monroe St &amp; Tompkins Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Nostrand Ave &amp; Myrtle Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Pioneer St &amp; Van Brunt St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Rivington St &amp; Ridge St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;St Marks Pl &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Union Ave &amp; Jackson St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 15 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 33 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 52 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 89 St &amp; Columbus Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Washington Pl &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;1 Ave &amp; E 30 St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;11 St &amp; 43 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;3 Ave &amp; Schermerhorn St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;31 St &amp; 23 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;40 Ave &amp; Crescent St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;6 Ave &amp; W 33 St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Amsterdam Ave &amp; W 79 St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Bergen St &amp; Smith St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; W 37 St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Carroll St &amp; Bond St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Cherry St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Concord St &amp; Bridge St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Douglass St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 11 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 128 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 31 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 53 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 75 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 93 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Fulton St &amp; Grand Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Greenwich Ave &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;John St &amp; William St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Leonard St &amp; Nassau Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Market St &amp; Cherry St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Nassau Ave &amp; Newell St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Pike St &amp; E Broadway&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Roebling St &amp; N 4 St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;St Nicholas Ave &amp; Manhattan Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;University Pl &amp; E 8 St&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 16 St &amp; The High Line&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 35 St &amp; Dyer Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 52 St &amp; 11 Ave&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 92 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Washington Pl &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;1 Ave &amp; E 18 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;12 Ave &amp; W 40 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;3 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;34 Ave &amp; 21 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;6 Ave &amp; W 33 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Amsterdam Ave &amp; W 82 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bergen St &amp; Smith St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; W 36 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Carlton Ave &amp; Dean St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Central Park West &amp; W 85 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Columbia St &amp; Degraw St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Degraw St &amp; Hoyt St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 110 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 17 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 2 St &amp; Avenue B&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 43 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 58 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 84 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Frederick Douglass Blvd &amp; W 112 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Grand Army Plaza &amp; Central Park S&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Henry St &amp; Degraw St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Knickerbocker Ave &amp; George St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Leonard St &amp; Nassau Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Madison St &amp; Clinton St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Mott St &amp; Prince St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Old Slip &amp; Front St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Pleasant Ave &amp; E 116 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;S 4 St &amp; Rodney St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;St. Nicholas Ave &amp; W 126 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Union St &amp; 4 Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 17 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 37 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 53 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 95 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Watts St &amp; Greenwich St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;1 Ave &amp; E 68 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;19 St &amp; 24 Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;3 St &amp; Hoyt St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;31 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;44 Dr &amp; Jackson Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;7 Ave &amp; Park Pl&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Amsterdam Ave &amp; W 125 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Berry St &amp; N 8 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; W 49 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Carroll St &amp; Smith St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Clermont Ave &amp; Lafayette Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Court St &amp; State St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Driggs Ave &amp; N 9 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 12 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 33 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 55 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 78 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 98 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Eckford St &amp; Engert Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Fulton St &amp; William St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Halsey St &amp; Tompkins Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Kent Ave &amp; N 7 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lexington Ave &amp; E 29 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Mercer St &amp; Bleecker St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Newton Rd &amp; 44 St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Pitt St &amp; Stanton St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;S 4 St &amp; Rodney St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Stagg St &amp; Union Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Van Brunt St &amp; Wolcott St&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 100 St &amp; Manhattan Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 18 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 38 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 55 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Watts St &amp; Greenwich St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;10 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;3 Ave &amp; E 71 St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;31 St &amp; 23 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;6 Ave &amp; 9 St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Allen St &amp; Rivington St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bayard St &amp; Leonard St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; Moylan Pl&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Cadman Plaza E &amp; Johnson St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Central Park S &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Clinton Ave &amp; Myrtle Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Crown St &amp; Bedford Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Driggs Ave &amp; N Henry St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 102 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 12 St &amp; 4 Av&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 35 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 55 St &amp; Lexington Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 81 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Forsyth St &amp; Broome St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Garfield Pl &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Hancock St &amp; Bedford Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;John St &amp; William St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lenox Ave &amp; W 126 St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;MacDougal St &amp; Washington Sq&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Monroe St &amp; Bedford Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Norfolk St &amp; Broome St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Pike St &amp; E Broadway&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Riverside Dr &amp; W 104 St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;St James Pl &amp; Pearl St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Underhill Ave &amp; Lincoln Pl&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 15 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 27 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 49 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 87 St &amp; Amsterdam Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Washington Park&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;1 Ave &amp; E 16 St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;11 Ave &amp; W 59 St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;3 Ave &amp; E 100 St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;31 Ave &amp; Crescent St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;37 St &amp; 24 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;6 Ave &amp; Canal St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Amsterdam Ave &amp; W 66 St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Bedford Ave &amp; S 9 St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; W 32 St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Carroll St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Centre St &amp; Chambers St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Columbus Ave &amp; W 103 St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Division Av &amp; Hooper St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 10 St &amp; Avenue A&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 118 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 27 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 51 St &amp; Lexington Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 72 St &amp; York Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 91 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Fulton St &amp; Adams St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Greene Ave &amp; Throop Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Jay St &amp; Tech Pl&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Leonard St &amp; Church St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Madison St &amp; Montgomery St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;N 11 St &amp; Kent Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Pier 40 - Hudson River Park&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Rivington St &amp; Chrystie St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;St Marks Pl &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Union Ave &amp; N 12 St&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 15 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 33 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 52 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 89 St &amp; Columbus Ave&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Washington Park&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;1 Ave &amp; E 78 St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;24 Ave &amp; 29 St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;5 Ave &amp; 3 St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;7 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Avenue D &amp; E 3 St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bialystoker Pl &amp; Delancey St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; W 51 St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Carroll St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Cherry St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Columbus Ave &amp; W 103 St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;DeKalb Ave &amp; Skillman St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 118 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 23 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 47 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 6 St &amp; Avenue D&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 67 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 88 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Front St &amp; Washington St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Grand St &amp; Havemeyer St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Hope St &amp; Union Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lafayette Ave &amp; Fort Greene Pl&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lexington Ave &amp; E 26 St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Market St &amp; Cherry St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Myrtle Ave &amp; St Edwards St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Park Pl &amp; Franklin Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Putnam Ave &amp; Nostrand Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Schermerhorn St &amp; Court St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;State St &amp; Smith St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Van Brunt St &amp; Wolcott St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 107 St &amp; Columbus Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 20 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 42 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 63 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;West Thames St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;2 Ave &amp; E 31 St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;24 Ave &amp; 29 St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;34 Ave &amp; 21 St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;48 Ave &amp; 30 Pl&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;5 Ave &amp; E 73 St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;9 Ave &amp; W 18 St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Avenue D &amp; E 8 St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broad St &amp; Bridge St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; W 122 St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Center Blvd &amp; 51 Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Clinton Ave &amp; Myrtle Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Cumberland St &amp; Lafayette Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 106 St &amp; Lexington Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 16 St &amp; Irving Pl&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 2 St &amp; Avenue A&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 43 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 58 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 82 St &amp; East End Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Franklin Ave &amp; Myrtle Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Graham Ave &amp; Grand St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Henry St &amp; Grand St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lafayette St &amp; E 8 St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Liberty St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Milton St &amp; Franklin St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Pacific St &amp; Nevins St&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Putnam Ave &amp; Throop Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Scholes St &amp; Manhattan Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Steinway St &amp; 23 Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Vernon Blvd &amp; 47 Rd&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 110 St &amp; Amsterdam Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 21 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 43 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 67 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;West Thames St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;2 Ave &amp; E 99 St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;31 Ave &amp; 34 St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;5 Ave &amp; E 103 St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;9 Ave &amp; W 45 St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Adelphi St &amp; Myrtle Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Barclay St &amp; Church St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; Berry St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bushwick Ave &amp; McKibbin St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Center Blvd &amp; 51 Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Cliff St &amp; Fulton St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Crescent St &amp; 30 Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Douglass St &amp; 4 Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 11 St &amp; Avenue B&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 32 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 53 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 76 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 97 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Emerson Pl &amp; Myrtle Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Fulton St &amp; Waverly Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Greenwich Ave &amp; Charles St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Jackson St &amp; Leonard St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lenox Ave &amp; W 111 St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Little West St &amp; 1 Pl&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Metropolitan Ave &amp; Bedford Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Nassau St &amp; Navy St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Pershing Square South&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Riverside Dr &amp; W 78 St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;South St &amp; Whitehall St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Suydam St &amp; Knickerbocker Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 12 St &amp; W 4 St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 26 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 45 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 82 St &amp; Central Park West&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Warren St &amp; Court St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Wyckoff Av &amp; Jefferson St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;10 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;3 Ave &amp; E 71 St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;31 Ave &amp; 14 St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;36 Ave &amp; 10 St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;5 St &amp; 51 Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Allen St &amp; Hester St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Bayard St &amp; Baxter St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; Roebling St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Carlton Ave &amp; Dean St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Central Park West &amp; W 85 St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Columbia St &amp; Rivington St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 118 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 24 St &amp; Park Ave S&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 48 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 68 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 7 St &amp; Avenue A&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 88 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Front St &amp; Gold St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Grand St &amp; Greene St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Humboldt St &amp; Varet St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lenox Ave &amp; W 126 St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Madison Ave &amp; E 99 St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Myrtle Ave &amp; Lewis Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Perry St &amp; Bleecker St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Riverside Dr &amp; W 82 St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Spruce St &amp; Nassau St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Tompkins Ave &amp; Hopkins St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 13 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 27 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 47 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 84 St &amp; Columbus Ave&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Warren St &amp; Court St&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Wythe Ave &amp; Metropolitan Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;10 Ave &amp; W 28 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;3 Ave &amp; 14 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;31 Ave &amp; Crescent St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;5 Ave &amp; E 126 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Albany Ave &amp; Fulton St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Barrow St &amp; Hudson St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; E 14 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bushwick Ave &amp; Powers St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Central Ave &amp; Starr Street&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Cliff St &amp; Fulton St (Old\)&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Crescent St &amp; 34 Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Driggs Ave &amp; Lorimer St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 11 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 33 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 55 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 77 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 98 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;FDR Drive &amp; E 35 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Fulton St &amp; William St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Greenwich St &amp; W Houston St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Jay St &amp; Tech Pl&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lenox Ave &amp; W 115 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lorimer St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Metropolitan Ave &amp; Meeker Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Newton Rd &amp; 44 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Pier 40 - Hudson River Park&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Riverside Dr &amp; W 82 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Spruce St &amp; Nassau St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Throop Ave &amp; Myrtle Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 13 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 26 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 46 St &amp; 11 Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 84 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Washington Ave &amp; Greene Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Wyckoff St &amp; Bond St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;11 Ave &amp; W 27 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;3 Ave &amp; E 72 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;31 Ave &amp; 30 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;36 Ave &amp; 31 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;6 Ave &amp; 9 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Allen St &amp; Rivington St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Bayard St &amp; Leonard St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; W 25 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Carlton Ave &amp; Flushing Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Central Park West &amp; W 100 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Columbus Ave &amp; W 72 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Devoe St &amp; Lorimer St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 118 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 25 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 48 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 68 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 89 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 9 St &amp; Avenue C&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Front St &amp; Maiden Ln&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Grand St &amp; Havemeyer St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;India St &amp; Manhattan Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lenox Ave &amp; W 130 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Madison Ave &amp; E 120 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Myrtle Ave &amp; St Edwards St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Pershing Square North&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Riverside Dr &amp; W 91 St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;St James Pl &amp; Oliver St&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Underhill Ave &amp; Lincoln Pl&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 15 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 27 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 49 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 87 St &amp; Amsterdam Ave&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Washington Ave &amp; Greene Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;10 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;3 Ave &amp; E 72 St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;31 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;6 Ave &amp; 12 St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Allen St &amp; Stanton St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bedford Ave &amp; Bergen St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; Roebling St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Cadman Plaza E &amp; Red Cross Pl&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Central Park W &amp; W 96 St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Clinton St &amp; 4 Place&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Cumberland St &amp; Lafayette Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Duane St &amp; Greenwich St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 103 St &amp; Lexington Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 13 St &amp; Avenue A&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 39 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 58 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 81 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Forsyth St &amp; Canal St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;George St &amp; Wilson Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Hanson Pl &amp; Ashland Pl&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Johnson St &amp; Gold St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lenox Ave &amp; W 130 St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Macon St &amp; Nostrand Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Monroe St &amp; Classon Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;North Moore St &amp; Greenwich St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Pike St &amp; Monroe St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Rivington St &amp; Chrystie St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;St Johns Pl &amp; Washington Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Underhill Ave &amp; Pacific St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 15 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 31 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 50 St &amp; 9 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 88 St &amp; West End Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Washington Pl &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;1 Ave &amp; E 18 St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;11 St &amp; 35 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;3 Ave &amp; E 112 St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;31 Ave &amp; Steinway St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;40 Ave &amp; 9 St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;6 Ave &amp; Spring St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Amsterdam Ave &amp; W 73 St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Bergen St &amp; Flatbush Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; W 36 St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Carroll St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Centre St &amp; Worth St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Commerce St &amp; Van Brunt St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Division St &amp; Bowery&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 11 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 123 St &amp; Lexington Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 30 St &amp; Park Ave S&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 52 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 74 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 91 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Fulton St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Greenpoint Ave &amp; Manhattan Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Jay St &amp; York St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Leonard St &amp; Maujer St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Maiden Ln &amp; Pearl St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;N 12 St &amp; Bedford Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Pierrepont St &amp; Monroe Pl&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Rivington St &amp; Ridge St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;St Marks Pl &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Union St &amp; Nevins St&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 16 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 34 St &amp; 11 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 52 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 90 St &amp; Amsterdam Ave&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Washington Pl &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;11 Ave &amp; W 41 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;3 Ave &amp; E 100 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;31 St &amp; Northern Blvd&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;6 Ave &amp; Canal St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Amsterdam Ave &amp; W 73 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bedford Ave &amp; S 9 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; W 29 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Cambridge Pl &amp; Gates Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Central Park West &amp; W 72 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Clinton St &amp; Joralemon St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Dean St &amp; Franklin Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 106 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 16 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 2 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 41 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 58 St &amp;  1 Ave (NW Corner\)&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 81 St &amp; York Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Franklin Ave &amp; St Marks Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Graham Ave &amp; Grand St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Hart St &amp; Wyckoff Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Kent Ave &amp; S 11 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Leonard St &amp; Church St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Madison Ave &amp; E 99 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Montrose Ave &amp; Bushwick Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;NYCBS DEPOT - DELANCEY&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Pitt St &amp; Stanton St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Roebling St &amp; N 4 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;St Marks Pl &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Union Ave &amp; N 12 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 16 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 34 St &amp; 11 Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 52 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 90 St &amp; Amsterdam Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Washington St &amp; Gansevoort St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;1 Ave &amp; E 44 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;12 Ave &amp; W 40 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;3 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;31 St &amp; 35 Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;43 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;6 Ave &amp; W 34 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Amsterdam Ave &amp; W 82 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Berkeley Pl &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; W 38 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Carroll St &amp; Columbia St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Christopher St &amp; Greenwich St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Congress St &amp; Clinton St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Douglass St &amp; 4 Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 11 St &amp; Avenue B&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 32 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 53 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 76 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 97 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;East End Ave &amp; E 86 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Fulton St &amp; Rockwell Pl&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Greenwich Ave &amp; Charles St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Johnson St &amp; Gold St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lewis Ave &amp; Kosciuszko St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;McGuinness Blvd &amp; Eagle St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Nassau Ave &amp; Russell St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Pike St &amp; Monroe St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Rogers Ave &amp; Sterling St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;St. Nicholas Ave &amp; W 126 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;University Pl &amp; E 14 St&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 17 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 37 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 53 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 95 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Washington St &amp; Gansevoort St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;2 Ave &amp; E 31 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;28 St &amp; 38 Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;5 Ave &amp; E 78 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;9 Ave &amp; W 18 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bank St &amp; Hudson St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broad St &amp; Bridge St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; W 122 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Cathedral Pkwy &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Clermont Ave &amp; Lafayette Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Cooper Square &amp; Astor Pl&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Division Ave &amp; Marcy Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 10 St &amp; Avenue A&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 27 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 51 St &amp; Lexington Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 72 St &amp; York Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 91 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;East End Ave &amp; E 86 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Fulton St &amp; Clermont Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Greene Ave &amp; Throop Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Huron St &amp; Franklin St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;LaGuardia Pl &amp; W 3 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lexington Ave &amp; E 111 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Mercer St &amp; Bleecker St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;N 15 St &amp; Wythe Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Peck Slip &amp; Front St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Richardson St &amp; N Henry St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Smith St &amp; 9 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Stuyvesant Walk &amp; 1 Av Loop&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Vesey Pl &amp; River Terrace&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 120 St &amp; Claremont Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 22 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 44 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 74 St &amp; Columbus Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Willoughby Ave &amp; Walworth St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;2 Ave &amp; E 104 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;28 St &amp; 36 Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;35 Ave &amp; 37 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;5 Ave &amp; E 103 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;9 St &amp; 44 Rd&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Bank St &amp; Washington St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; E 14 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Cadman Plaza E &amp; Red Cross Pl&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Central Park West &amp; W 68 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Clinton St &amp; Union St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Degraw St &amp; Hoyt St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 115 St &amp; Lexington Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 20 St &amp; FDR Drive&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 47 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 5 St &amp; Avenue C&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 65 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 85 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Frederick Douglass Blvd &amp; W 115 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Grand Army Plaza &amp; Plaza St West&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Hope St &amp; Union Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lawrence St &amp; Willoughby St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;MacDougal St &amp; Washington Sq&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Mott St &amp; Prince St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Pearl St &amp; Anchorage Pl&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Riverside Blvd &amp; W 67 St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;South End Ave &amp; Liberty St&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Sullivan Pl &amp; Bedford Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 11 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 120 St &amp; Claremont Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 25 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 45 St &amp; 6 Ave -&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 78 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Wyckoff Av &amp; Jefferson St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;1 Ave &amp; E 94 St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;24 St &amp; 41 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;40 Ave &amp; Crescent St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;5 Ave &amp; E 29 St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;8 Ave &amp; W 31 St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Avenue D &amp; E 8 St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Boerum St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; W 53 St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Carroll St &amp; Bond St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Christopher St &amp; Greenwich St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Commerce St &amp; Van Brunt St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 118 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 24 St &amp; Park Ave S&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 48 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 68 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 7 St &amp; Avenue A&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 89 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Frost St &amp; Meeker Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Great Jones St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Howard St &amp; Centre St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lafayette Ave &amp; St James Pl&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lexington Ave &amp; E 29 St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;McGuinness Blvd &amp; Eagle St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;N 6 St &amp; Bedford Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Park Pl &amp; Vanderbilt Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Putnam Ave &amp; Throop Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Scholes St &amp; Manhattan Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Steinway St &amp; 28 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Vernon Blvd &amp; 31 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 110 St &amp; Amsterdam Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 20 St &amp; 11 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 42 St &amp; Dyer Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 64 St &amp; Thelonious Monk Circle&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;William St &amp; Pine St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;2 Ave &amp; E 72 St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;24 St &amp; 41 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;34 Ave &amp; 38 St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;49 Ave &amp; 21 St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;5 Ave &amp; E 78 St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;9 Ave &amp; W 22 St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Avenue D &amp; E 12 St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; 12 St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Bus Slip &amp; State St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Clinton St &amp; 4 Place&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Dean St &amp; 4 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 109 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 17 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 2 St &amp; Avenue B&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 43 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 58 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 84 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Franklin St &amp; Dupont St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Graham Ave &amp; Herbert St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Henry St &amp; Middagh St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lafayette St &amp; Jersey St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lispenard St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Monroe St &amp; Bedford Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Park Ave &amp; E 124 St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Queens Plaza North &amp; Crescent St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Sharon St &amp; Olive St&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Steinway St &amp; 28 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Vernon Blvd &amp; 50 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 113 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 22 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 43 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 70 St &amp; Amsterdam Ave&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;William St &amp; Pine St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;1 Ave &amp; E 30 St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;12 St &amp; 4 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;3 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;34 Ave &amp; 38 St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;6 Ave &amp; W 34 St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Amsterdam Ave &amp; W 125 St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bergen St &amp; Vanderbilt Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; W 37 St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Carlton Ave &amp; Flushing Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Central Park West &amp; W 100 St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Columbia St &amp; Kane St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Degraw St &amp; Smith St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 114 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 19 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 2 St &amp; Avenue C&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 44 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 59 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 84 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Frederick Douglass Blvd &amp; W 115 St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Grand Army Plaza &amp; Plaza St West&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Henry St &amp; Grand St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Knickerbocker Ave &amp; Thames St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lewis Ave &amp; Decatur St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Madison St &amp; Montgomery St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Murray St &amp; Greenwich St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Pacific St &amp; Classon Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Powers St &amp; Olive St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;S 4 St &amp; Wythe Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Stagg St &amp; Union Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Union St &amp; Bedford Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 100 St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 17 St &amp; 9 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 37 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 54 St &amp; 9 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;West Drive &amp; Prospect Park West&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;1 Ave &amp; E 78 St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;21 St &amp; 31 Dr&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;31 St &amp; Hoyt Ave N&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;4 Ave &amp; 9 St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;45 Rd &amp; 11 St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;7 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Atlantic Ave &amp; Fort Greene Pl&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Bialystoker Pl &amp; Delancey St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; W 51 St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Cathedral Pkwy &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Clermont Ave &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Crescent St &amp; 30 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Driggs Ave &amp; N Henry St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 102 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 12 St &amp; 4 Av&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 35 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 55 St &amp; Lexington Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 81 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Emerson Pl &amp; Myrtle Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Gansevoort St &amp; Hudson St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Hanson Pl &amp; Ashland Pl&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Kent Ave &amp; S 11 St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lexington Ave &amp; E 36 St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Mercer St &amp; Spring St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Norfolk St &amp; Broome St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Plaza St West &amp; Flatbush Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;S 4 St &amp; Wythe Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Stanton St &amp; Chrystie St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Vernon Blvd &amp; 10 St&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 104 St &amp; Amsterdam Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 18 St &amp; 9 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 40 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 56 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;West Drive &amp; Prospect Park West&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;10 Hudson Yards&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;3 Ave &amp; E 62 St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;31 Ave &amp; Steinway St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;5 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Allen St &amp; Hester St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bayard St &amp; Baxter St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; E 22 St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Butler St &amp; Court St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Clinton Ave &amp; Flushing Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Crescent St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Driggs Ave &amp; N 9 St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 102 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 12 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 33 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 55 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 78 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Flushing Ave &amp; Vanderbilt Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Gansevoort St &amp; Hudson St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Halsey St &amp; Tompkins Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Jay St &amp; York St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lenox Ave &amp; W 117 St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;MacDougal St &amp; Prince St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Milton St &amp; Franklin St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Newtown Ave &amp; 23 St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Pierrepont St &amp; Monroe Pl&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Riverside Dr &amp; W 91 St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;St James Pl &amp; Oliver St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Tompkins Ave &amp; Hopkins St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 13 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 27 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 47 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 84 St &amp; Columbus Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Washington Ave &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Wythe Ave &amp; Metropolitan Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;11 Ave &amp; W 41 St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;3 Ave &amp; E 95 St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;31 Ave &amp; 34 St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;37 Ave &amp; 35 St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;6 Ave &amp; Broome St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Allen St &amp; Stanton St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Bedford Ave &amp; Nassau Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; W 29 St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Carmine St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Central Park West &amp; W 102 St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Columbus Ave &amp; W 95 St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Ditmars Blvd &amp; 19 St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 10 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 118 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 25 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 51 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 72 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 89 St &amp; York Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Front St &amp; Washington St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Great Jones St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Jackson Ave &amp; 46 Rd&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Leonard St &amp; Boerum St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Madison St &amp; Clinton St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;N 6 St &amp; Bedford Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Pershing Square South&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Riverside Dr &amp; W 104 St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;St James Pl &amp; Pearl St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Union Ave &amp; Jackson St&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 15 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 31 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 50 St &amp; 9 Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 88 St &amp; West End Ave&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Washington Ave &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;2 Ave &amp; E 72 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;28 St &amp; 41 Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;5 Ave &amp; E 88 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;9 Ave &amp; W 22 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Bank St &amp; Washington St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; 12 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; Whipple St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Catherine St &amp; Monroe St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Clermont Ave &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Court St &amp; Nelson St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Division St &amp; Bowery&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 11 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 30 St &amp; Park Ave S&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 52 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 74 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 93 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Eastern Pkwy &amp; Franklin Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Fulton St &amp; Grand Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Greenpoint Ave &amp; Manhattan Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;India St &amp; West St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Laight St &amp; Hudson St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Liberty St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Mercer St &amp; Spring St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Nassau Ave &amp; Newell St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Perry St &amp; Bleecker St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Riverside Blvd &amp; W 67 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;South End Ave &amp; Liberty St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Suffolk St &amp; Stanton St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 129 St &amp; Convent Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 24 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 4 St &amp; 7 Ave S&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 45 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 76 St &amp; Columbus Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Willoughby Ave &amp; Wyckoff Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;10 Ave &amp; W 28 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;2 Ave &amp; E 122 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;28 St &amp; 38 Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;35 St &amp; 34 Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;5 Ave &amp; E 126 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Barclay St &amp; Church St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; E 22 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Cadman Plaza West &amp; Montague St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Central Park West &amp; W 72 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Columbia Heights &amp; Cranberry St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Degraw St &amp; Smith St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 115 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 20 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 47 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 6 St &amp; Avenue B&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 66 St &amp; Madison Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 85 St &amp; York Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Frederick Douglass Blvd &amp; W 117 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Grand Ave &amp; Bergen St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Howard St &amp; Centre St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lenox Ave &amp; W 111 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Macon St &amp; Nostrand Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Murray St &amp; Greenwich St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Pearl St &amp; Hanover Square&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Riverside Dr &amp; W 72 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;South St &amp; Gouverneur Ln&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Sullivan St &amp; Washington Sq&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 12 St &amp; W 4 St&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 129 St &amp; Convent Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 26 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 45 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 82 St &amp; Central Park West&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Wyckoff St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;1 Ave &amp; E 44 St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;14 St &amp; 5 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;3 St &amp; Hoyt St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;34 St &amp; 35 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;6 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Atlantic Ave &amp; Fort Greene Pl&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Berkeley Pl &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Broadway &amp; W 38 St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Carlton Ave &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Central Park West &amp; W 102 St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Columbia St &amp; Rivington St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;DeKalb Ave &amp; Franklin Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 115 St &amp; Lexington Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 20 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 4 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 45 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 60 St &amp; York Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;E 84 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Frederick Douglass Blvd &amp; W 117 St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Grand Ave &amp; Bergen St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Henry St &amp; Middagh St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Kosciuszko St &amp; Nostrand Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Lewis Ave &amp; Kosciuszko St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Maiden Ln &amp; Pearl St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Murray St &amp; West St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Pacific St &amp; Nevins St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;President St &amp; Henry St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;S 5 Pl &amp; S 5 St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Stanton St &amp; Chrystie St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;Union St &amp; Nevins St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 104 St &amp; Amsterdam Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 18 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 38 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;W 55 St &amp; 6 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;E 17 St &amp; Broadway&quot;,&quot;West End Ave &amp; W 94 St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;1 Ave &amp; E 94 St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;21 St &amp; 43 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;31 St &amp; Newtown Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;46 Ave &amp; 5 St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;5 Ave &amp; 3 St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;8 Ave &amp; W 31 St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Atlantic Ave &amp; Furman St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Boerum St &amp; Broadway&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Broadway &amp; W 53 St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Catherine St &amp; Monroe St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Cleveland Pl &amp; Spring St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Crescent St &amp; 34 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Duane St &amp; Greenwich St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 102 St &amp; Park Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 13 St &amp; Avenue A&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 39 St &amp; 2 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 58 St &amp; 1 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;E 81 St &amp; 3 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;FDR Drive &amp; E 35 St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Garfield Pl &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Harrison St &amp; Hudson St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lafayette Ave &amp; Classon Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Lexington Ave &amp; E 63 St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Meserole Ave &amp; Manhattan Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;North Moore St &amp; Greenwich St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Pleasant Ave &amp; E 116 St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;S 5 Pl &amp; S 5 St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Stanton St &amp; Mangin St&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;Vernon Blvd &amp; 30 Rd&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 106 St &amp; Amsterdam Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 20 St &amp; 7 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 41 St &amp; 8 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;W 59 St &amp; 10 Ave&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Pershing Square North&quot;,&quot;West End Ave &amp; W 94 St&quot;)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tmn:started_at:ok]' type='palette'>
            <map to='#59a14f'>
              <bucket>#2013-07-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2013-08-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2013-09-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2013-10-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2013-11-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2013-12-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2014-01-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2014-02-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2014-03-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2014-04-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2014-05-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2014-06-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2014-07-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2014-08-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2014-09-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2014-10-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2014-11-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2014-12-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2015-01-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2015-02-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2015-03-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2015-04-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2015-05-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2015-06-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2015-07-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2015-08-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2015-09-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2015-10-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2015-11-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2015-12-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2016-01-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2016-02-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2016-03-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2016-04-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2016-05-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2016-06-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2016-07-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2016-08-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2016-09-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2016-10-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2016-11-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2016-12-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2017-01-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2017-02-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2017-03-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2017-04-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2017-05-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2017-06-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2017-07-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2017-08-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2017-09-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2017-10-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2017-11-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2017-12-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-01-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-02-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-03-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-04-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-05-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-06-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-07-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-08-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-09-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-10-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-11-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-12-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2019-01-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2019-02-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2019-03-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2019-04-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2019-05-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2019-06-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2019-07-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2019-08-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2019-09-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2019-10-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2019-11-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2019-12-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-01-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-02-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-03-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-04-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-05-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-06-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-07-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-08-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-09-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-10-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-11-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-12-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-01-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-02-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-03-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-04-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-05-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-06-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-07-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-08-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-09-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-10-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-11-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-12-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:started_at:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2013</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2017</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2021</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2016</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2022</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2020</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2018</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2019</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2014</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[YEAR(Started At) Set]' type='palette'>
            <map to='#59a14f'>
              <bucket>(2021)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(2020)</bucket>
            </map>
            <map to='#edc948'>
              <bucket>(2019)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:member_casual:nk]' type='palette'>
            <map to='#305d8a'>
              <bucket>&quot;casual&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;member&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brazil&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2013.csv' id='2013.csv_D516ED04798B4F7F8C7D6F623E1E6077'>
            <properties context=''>
              <relation all='true' name='2013.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='tripduration' />
                  <column datatype='datetime' name='started_at' />
                  <column datatype='datetime' name='ended_at' />
                  <column datatype='real' name='start_station_id' />
                  <column datatype='string' name='start_station_name' />
                  <column datatype='real' name='start_lat' />
                  <column datatype='real' name='start_lng' />
                  <column datatype='real' name='end_station_id' />
                  <column datatype='string' name='end_station_name' />
                  <column datatype='real' name='end_lat' />
                  <column datatype='real' name='end_lng' />
                  <column datatype='string' name='member_casual' />
                  <column datatype='integer' name='weekday' />
                  <column datatype='integer' name='holiday' />
                  <column datatype='integer' name='F1' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2013.csv' table='[2013#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='started_at' ordinal='1' />
                    <column datatype='datetime' name='ended_at' ordinal='2' />
                    <column datatype='integer' name='start_station_id' ordinal='3' />
                    <column datatype='string' name='start_station_name' ordinal='4' />
                    <column datatype='real' name='start_lat' ordinal='5' />
                    <column datatype='real' name='start_lng' ordinal='6' />
                    <column datatype='integer' name='end_station_id' ordinal='7' />
                    <column datatype='string' name='end_station_name' ordinal='8' />
                    <column datatype='real' name='end_lat' ordinal='9' />
                    <column datatype='real' name='end_lng' ordinal='10' />
                    <column datatype='string' name='member_casual' ordinal='11' />
                    <column datatype='integer' name='weekday' ordinal='12' />
                    <column datatype='integer' name='holiday' ordinal='13' />
                  </columns>
                </relation>
                <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2014.csv' table='[2014#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='started_at' ordinal='1' />
                    <column datatype='datetime' name='ended_at' ordinal='2' />
                    <column datatype='integer' name='start_station_id' ordinal='3' />
                    <column datatype='string' name='start_station_name' ordinal='4' />
                    <column datatype='real' name='start_lat' ordinal='5' />
                    <column datatype='real' name='start_lng' ordinal='6' />
                    <column datatype='integer' name='end_station_id' ordinal='7' />
                    <column datatype='string' name='end_station_name' ordinal='8' />
                    <column datatype='real' name='end_lat' ordinal='9' />
                    <column datatype='real' name='end_lng' ordinal='10' />
                    <column datatype='string' name='member_casual' ordinal='11' />
                    <column datatype='integer' name='weekday' ordinal='12' />
                    <column datatype='integer' name='holiday' ordinal='13' />
                  </columns>
                </relation>
                <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2015.csv' table='[2015#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='started_at' ordinal='1' />
                    <column datatype='datetime' name='ended_at' ordinal='2' />
                    <column datatype='integer' name='start_station_id' ordinal='3' />
                    <column datatype='string' name='start_station_name' ordinal='4' />
                    <column datatype='real' name='start_lat' ordinal='5' />
                    <column datatype='real' name='start_lng' ordinal='6' />
                    <column datatype='integer' name='end_station_id' ordinal='7' />
                    <column datatype='string' name='end_station_name' ordinal='8' />
                    <column datatype='real' name='end_lat' ordinal='9' />
                    <column datatype='real' name='end_lng' ordinal='10' />
                    <column datatype='string' name='member_casual' ordinal='11' />
                    <column datatype='integer' name='weekday' ordinal='12' />
                    <column datatype='integer' name='holiday' ordinal='13' />
                  </columns>
                </relation>
                <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2016.csv' table='[2016#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='started_at' ordinal='1' />
                    <column datatype='datetime' name='ended_at' ordinal='2' />
                    <column datatype='integer' name='start_station_id' ordinal='3' />
                    <column datatype='string' name='start_station_name' ordinal='4' />
                    <column datatype='real' name='start_lat' ordinal='5' />
                    <column datatype='real' name='start_lng' ordinal='6' />
                    <column datatype='integer' name='end_station_id' ordinal='7' />
                    <column datatype='string' name='end_station_name' ordinal='8' />
                    <column datatype='real' name='end_lat' ordinal='9' />
                    <column datatype='real' name='end_lng' ordinal='10' />
                    <column datatype='string' name='member_casual' ordinal='11' />
                    <column datatype='integer' name='weekday' ordinal='12' />
                    <column datatype='integer' name='holiday' ordinal='13' />
                  </columns>
                </relation>
                <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2017.csv' table='[2017#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='started_at' ordinal='1' />
                    <column datatype='datetime' name='ended_at' ordinal='2' />
                    <column datatype='integer' name='start_station_id' ordinal='3' />
                    <column datatype='string' name='start_station_name' ordinal='4' />
                    <column datatype='real' name='start_lat' ordinal='5' />
                    <column datatype='real' name='start_lng' ordinal='6' />
                    <column datatype='integer' name='end_station_id' ordinal='7' />
                    <column datatype='string' name='end_station_name' ordinal='8' />
                    <column datatype='real' name='end_lat' ordinal='9' />
                    <column datatype='real' name='end_lng' ordinal='10' />
                    <column datatype='string' name='member_casual' ordinal='11' />
                    <column datatype='integer' name='weekday' ordinal='12' />
                    <column datatype='integer' name='holiday' ordinal='13' />
                  </columns>
                </relation>
                <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2018.csv' table='[2018#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='started_at' ordinal='1' />
                    <column datatype='datetime' name='ended_at' ordinal='2' />
                    <column datatype='real' name='start_station_id' ordinal='3' />
                    <column datatype='string' name='start_station_name' ordinal='4' />
                    <column datatype='real' name='start_lat' ordinal='5' />
                    <column datatype='real' name='start_lng' ordinal='6' />
                    <column datatype='real' name='end_station_id' ordinal='7' />
                    <column datatype='string' name='end_station_name' ordinal='8' />
                    <column datatype='real' name='end_lat' ordinal='9' />
                    <column datatype='real' name='end_lng' ordinal='10' />
                    <column datatype='string' name='member_casual' ordinal='11' />
                    <column datatype='integer' name='weekday' ordinal='12' />
                    <column datatype='integer' name='holiday' ordinal='13' />
                  </columns>
                </relation>
                <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2019.csv' table='[2019#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='started_at' ordinal='1' />
                    <column datatype='datetime' name='ended_at' ordinal='2' />
                    <column datatype='real' name='start_station_id' ordinal='3' />
                    <column datatype='string' name='start_station_name' ordinal='4' />
                    <column datatype='real' name='start_lat' ordinal='5' />
                    <column datatype='real' name='start_lng' ordinal='6' />
                    <column datatype='real' name='end_station_id' ordinal='7' />
                    <column datatype='string' name='end_station_name' ordinal='8' />
                    <column datatype='real' name='end_lat' ordinal='9' />
                    <column datatype='real' name='end_lng' ordinal='10' />
                    <column datatype='string' name='member_casual' ordinal='11' />
                    <column datatype='integer' name='weekday' ordinal='12' />
                    <column datatype='integer' name='holiday' ordinal='13' />
                  </columns>
                </relation>
                <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2020.csv' table='[2020#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='started_at' ordinal='1' />
                    <column datatype='datetime' name='ended_at' ordinal='2' />
                    <column datatype='integer' name='start_station_id' ordinal='3' />
                    <column datatype='string' name='start_station_name' ordinal='4' />
                    <column datatype='real' name='start_lat' ordinal='5' />
                    <column datatype='real' name='start_lng' ordinal='6' />
                    <column datatype='integer' name='end_station_id' ordinal='7' />
                    <column datatype='string' name='end_station_name' ordinal='8' />
                    <column datatype='real' name='end_lat' ordinal='9' />
                    <column datatype='real' name='end_lng' ordinal='10' />
                    <column datatype='string' name='member_casual' ordinal='11' />
                    <column datatype='integer' name='weekday' ordinal='12' />
                    <column datatype='integer' name='holiday' ordinal='13' />
                  </columns>
                </relation>
                <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2021-2022.csv' table='[2021-2022#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='integer' name='tripduration' ordinal='1' />
                    <column datatype='datetime' name='started_at' ordinal='2' />
                    <column datatype='datetime' name='ended_at' ordinal='3' />
                    <column datatype='string' name='start_station_name' ordinal='4' />
                    <column datatype='real' name='start_station_id' ordinal='5' />
                    <column datatype='string' name='end_station_name' ordinal='6' />
                    <column datatype='real' name='end_station_id' ordinal='7' />
                    <column datatype='real' name='start_lat' ordinal='8' />
                    <column datatype='real' name='start_lng' ordinal='9' />
                    <column datatype='real' name='end_lat' ordinal='10' />
                    <column datatype='real' name='end_lng' ordinal='11' />
                    <column datatype='string' name='member_casual' ordinal='12' />
                    <column datatype='integer' name='weekday' ordinal='13' />
                    <column datatype='integer' name='holiday' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.0wfh2p71kz0l7n1dt0goi01cgz3t' name='2021.csv' table='[2021#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='started_at' ordinal='1' />
                    <column datatype='datetime' name='ended_at' ordinal='2' />
                    <column datatype='integer' name='start_station_id' ordinal='3' />
                    <column datatype='string' name='start_station_name' ordinal='4' />
                    <column datatype='real' name='start_lat' ordinal='5' />
                    <column datatype='real' name='start_lng' ordinal='6' />
                    <column datatype='integer' name='end_station_id' ordinal='7' />
                    <column datatype='string' name='end_station_name' ordinal='8' />
                    <column datatype='real' name='end_lat' ordinal='9' />
                    <column datatype='real' name='end_lng' ordinal='10' />
                    <column datatype='string' name='member_casual' ordinal='11' />
                    <column datatype='integer' name='weekday' ordinal='12' />
                    <column datatype='integer' name='holiday' ordinal='13' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 3 (generated)' name='[Action3_6110A18C10DF4BEB92C8B30C1B12DB2B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='trip duration' type='sheet' worksheet='start hours by year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='trip duration' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_68FAD1B29BB346D19469A317E9536EE7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='trip duration' type='sheet' worksheet='tripduration' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='trip duration' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action4_EDAFE22F75114E51B3002D14EBF64D1F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='year' type='sheet' worksheet='member_casual count year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='year' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_4BFB64FBB8C7482396873BBB44E69B65]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='year' type='sheet' worksheet='member weekday' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='year' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='create_stations_set'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <_.fcp.ObjectModelTableType.false...column caption='2013.csv' datatype='integer' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column caption='Rank Stations' datatype='integer' name='[Calculation_1751900268825030658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(COUNT([start_station_name]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='2013.csv' datatype='table' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekday]' derivation='None' name='[none:weekday:ok]' pivot='key' type='ordinal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1751900268825030658]' derivation='User' name='[usr:Calculation_1751900268825030658:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column aggregation='Sum' caption='Weekday' datatype='integer' name='[weekday]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[usr:Calculation_1751900268825030658:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[mn:started_at:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:started_at:ok]' member='2' />
              <groupfilter function='member' level='[mn:started_at:ok]' member='3' />
              <groupfilter function='member' level='[mn:started_at:ok]' member='4' />
              <groupfilter function='member' level='[mn:started_at:ok]' member='5' />
              <groupfilter function='member' level='[mn:started_at:ok]' member='6' />
              <groupfilter function='member' level='[mn:started_at:ok]' member='7' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]'>
            <groupfilter function='member' level='[none:weekday:ok]' member='0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]'>
            <groupfilter function='member' level='[yr:started_at:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[mn:started_at:ok]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[:Measure Names]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Multiple Values]' />
              <lod column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]</rows>
        <cols>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1950BA1C-885C-4B2D-989D-2109A2E448C6}' />
    </worksheet>
    <worksheet name='hours_week_year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Trips by Hour and Weekday - February to June</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <_.fcp.ObjectModelTableType.false...column caption='2013.csv' datatype='integer' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column caption='fix count by year' datatype='integer' name='[Calculation_665969808304349186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [started_at] : COUNT([__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077])}' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='2013.csv' datatype='table' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column-instance column='[started_at]' derivation='Hour' name='[hr:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_665969808304349186]' derivation='Count' name='[pcto:cnt:Calculation_665969808304349186:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[mn:started_at:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:started_at:ok]' member='3' />
              <groupfilter function='member' level='[mn:started_at:ok]' member='4' />
              <groupfilter function='member' level='[mn:started_at:ok]' member='5' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:started_at:ok]' member='2019' />
              <groupfilter function='member' level='[yr:started_at:ok]' member='2020' />
              <groupfilter function='member' level='[yr:started_at:ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[mn:started_at:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[hr:started_at:ok]' value='ih a' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[hr:started_at:ok]' value='ih a' />
            <format attr='text-orientation' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[hr:started_at:ok]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:Calculation_665969808304349186:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:Calculation_665969808304349186:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok] / [federated.1grv25w1kfb80c1gx685q0tu9dn1].[wd:started_at:ok])</rows>
        <cols>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[hr:started_at:ok]</cols>
      </table>
      <simple-id uuid='{94559F07-93EF-4F0A-8384-CAACF5B40D25}' />
    </worksheet>
    <worksheet name='map 2019 0'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000'>Weekend</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <_.fcp.ObjectModelTableType.true...column caption='2013.csv' datatype='table' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lat]' derivation='Avg' name='[avg:start_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lng]' derivation='Avg' name='[avg:start_lng:qk]' pivot='key' type='quantitative' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Lat' datatype='real' name='[start_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Lng' datatype='real' name='[start_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='2013.csv' datatype='integer' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]' />
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 8]' />
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]'>
            <groupfilter function='member' level='[yr:started_at:ok]' member='2019' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 8]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lng:qk]' field-type='quantitative' max='-8230040.3087533042' min='-8245870.6861289339' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lat:qk]' field-type='quantitative' max='4979081.4251570869' min='4968051.8147080084' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' />
              <size column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' />
              <lod column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Station Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Trips:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1' />
                <format attr='mark-transparency' value='255' />
                <format attr='shape' value='Bike/bici_pequena.png' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lat:qk]</rows>
        <cols>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lng:qk]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{F59C82B0-95E8-4795-B9E2-967FE2CE880A}' />
    </worksheet>
    <worksheet name='map 2019 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000'>Weekday</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <_.fcp.ObjectModelTableType.true...column caption='2013.csv' datatype='table' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lat]' derivation='Avg' name='[avg:start_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lng]' derivation='Avg' name='[avg:start_lng:qk]' pivot='key' type='quantitative' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Lat' datatype='real' name='[start_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Lng' datatype='real' name='[start_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='2013.csv' datatype='integer' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]' />
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 7]' />
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]'>
            <groupfilter function='member' level='[yr:started_at:ok]' member='2019' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 7]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lng:qk]' field-type='quantitative' max='-8228815.7966048913' min='-8245102.7471194165' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lat:qk]' field-type='quantitative' max='4979470.4461945975' min='4968153.985313124' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' />
              <size column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' />
              <lod column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Station Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Trips:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1' />
                <format attr='shape' value='Bike/bici_pequena.png' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lat:qk]</rows>
        <cols>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lng:qk]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{8DC5DBC8-1EF7-4AD6-BCF4-B38167CE8615}' />
    </worksheet>
    <worksheet name='map 2020 0'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000'>Start Station - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <_.fcp.ObjectModelTableType.true...column caption='2013.csv' datatype='table' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lat]' derivation='Avg' name='[avg:start_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lng]' derivation='Avg' name='[avg:start_lng:qk]' pivot='key' type='quantitative' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Lat' datatype='real' name='[start_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Lng' datatype='real' name='[start_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='2013.csv' datatype='integer' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]' />
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 9]' />
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]'>
            <groupfilter function='member' level='[yr:started_at:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 9]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lng:qk]' field-type='quantitative' max='-8228132.0331611596' min='-8245322.1637343355' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lat:qk]' field-type='quantitative' max='4979982.7504188493' min='4968491.0056031058' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' />
              <size column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' />
              <lod column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Station Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Trips:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1' />
                <format attr='mark-transparency' value='255' />
                <format attr='shape' value='Bike/bici_pequena.png' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lat:qk]</rows>
        <cols>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lng:qk]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{7D1A1CCD-E14C-45B7-B9AF-375BA2AAD282}' />
    </worksheet>
    <worksheet name='map 2020 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000'>Weekday</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <_.fcp.ObjectModelTableType.true...column caption='2013.csv' datatype='table' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lat]' derivation='Avg' name='[avg:start_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lng]' derivation='Avg' name='[avg:start_lng:qk]' pivot='key' type='quantitative' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Lat' datatype='real' name='[start_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Lng' datatype='real' name='[start_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='2013.csv' datatype='integer' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]' />
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 6]' />
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]'>
            <groupfilter function='member' level='[yr:started_at:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 6]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lng:qk]' field-type='quantitative' max='-8227854.1286274213' min='-8245098.9435930531' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lat:qk]' field-type='quantitative' max='4979449.7785697505' min='4967953.2349167047' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='left' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' />
              <size column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' />
              <lod column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Station Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Trips:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1' />
                <format attr='shape' value='Bike/bici_pequena.png' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lat:qk]</rows>
        <cols>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lng:qk]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{1E0629F8-CCC6-455F-B81F-F29F6AD61097}' />
    </worksheet>
    <worksheet name='map 2021 0'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000'>Start Station - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <_.fcp.ObjectModelTableType.true...column caption='2013.csv' datatype='table' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lat]' derivation='Avg' name='[avg:start_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lng]' derivation='Avg' name='[avg:start_lng:qk]' pivot='key' type='quantitative' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Lat' datatype='real' name='[start_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Lng' datatype='real' name='[start_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='2013.csv' datatype='integer' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]' />
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 4]' />
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]'>
            <groupfilter function='member' level='[yr:started_at:ok]' member='2021' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 4]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lng:qk]' field-type='quantitative' max='-8225361.9250135068' min='-8242999.8107252317' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lat:qk]' field-type='quantitative' max='4979741.8722202145' min='4968100.8671879033' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' />
              <size column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' />
              <lod column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Station Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Trips:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1' />
                <format attr='mark-transparency' value='255' />
                <format attr='shape' value='Bike/bici_pequena.png' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lat:qk]</rows>
        <cols>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lng:qk]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{061D0948-B769-4190-8459-ECAEB7FCA52F}' />
    </worksheet>
    <worksheet name='map 2021 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000'>Start Station - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <_.fcp.ObjectModelTableType.true...column caption='2013.csv' datatype='table' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lat]' derivation='Avg' name='[avg:start_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lng]' derivation='Avg' name='[avg:start_lng:qk]' pivot='key' type='quantitative' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Lat' datatype='real' name='[start_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Lng' datatype='real' name='[start_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='2013.csv' datatype='integer' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]' />
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 5]' />
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]'>
            <groupfilter function='member' level='[yr:started_at:ok]' member='2021' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 5]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lng:qk]' field-type='quantitative' max='-8226317.2290641954' min='-8245010.2319979053' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lat:qk]' field-type='quantitative' max='4979844.3989176005' min='4967541.0037367558' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' />
              <size column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' />
              <lod column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Station Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Trips:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1' />
                <format attr='mark-transparency' value='255' />
                <format attr='shape' value='Bike/bici_pequena.png' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lat:qk]</rows>
        <cols>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lng:qk]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{BC9219DB-9DC9-4CC7-8EFC-AF68B35343A9}' />
    </worksheet>
    <worksheet name='member weekday'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Users Type (%)</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <_.fcp.ObjectModelTableType.true...column caption='2013.csv' datatype='table' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Holiday' datatype='integer' name='[holiday]' role='dimension' type='ordinal' />
            <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
            <column-instance column='[holiday]' derivation='None' name='[none:holiday:ok]' pivot='key' type='ordinal' />
            <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekday]' derivation='None' name='[none:weekday:ok]' pivot='key' type='ordinal' />
            <column-instance column='[member_casual]' derivation='Count' name='[pcto:cnt:member_casual:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Weekday' datatype='integer' name='[weekday]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='2013.csv' datatype='integer' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (YEAR(Started At))]'>
            <groupfilter function='level-members' level='[yr:started_at:ok]' user:ui-action-filter='[Action4_EDAFE22F75114E51B3002D14EBF64D1F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set (copy)]' />
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:holiday:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:holiday:ok]' member='0' />
              <groupfilter function='member' level='[none:holiday:ok]' member='1' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:member_casual:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;casual&quot;</bucket>
              <bucket>&quot;member&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]'>
            <groupfilter function='level-members' level='[none:weekday:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set (copy)]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:holiday:ok]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (YEAR(Started At))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:member_casual:qk:2]' scope='rows' value='' />
            <format attr='display' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:member_casual:qk:2]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c3e6f0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:member_casual:nk]' />
              <tooltip column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' />
              <text column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:member_casual:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>User Type:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:member_casual:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:member_casual:qk:2]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Trips</run>
                <run fontcolor='#000000'><![CDATA[:	<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:member_casual:qk:2]</rows>
        <cols>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{87556749-7335-4F47-A769-79DE35460C07}' />
    </worksheet>
    <worksheet name='member_casual count year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total of Trips - YoY %</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <_.fcp.ObjectModelTableType.false...column caption='2013.csv' datatype='integer' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column caption='YOY - Growth' datatype='real' name='[Calculation_665969808291094529]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN(COUNT([__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077])) - LOOKUP(ZN(COUNT([__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077])), -1)) / ABS(LOOKUP(ZN(COUNT([__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077])), -1))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='2013.csv' datatype='table' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_station_name]' derivation='CountD' name='[ctd:start_station_name:qk]' pivot='key' type='quantitative' />
            <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
            <column-instance column='[start_station_name]' derivation='CountD' name='[pcdf:ctd:start_station_name:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_665969808291094529]' derivation='User' name='[usr:Calculation_665969808291094529:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (Member Casual,YEAR(Started At))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_4BFB64FBB8C7482396873BBB44E69B65]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[member_casual]' />
              <groupfilter function='level-members' level='[yr:started_at:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set (copy)]' />
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set (copy)]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (Member Casual,YEAR(Started At))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[usr:Calculation_665969808291094529:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c3e6f0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#ffffff44' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dashed' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#cbcbcb56' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_8' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <tooltip column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[ctd:start_station_name:qk]' />
              <text column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[usr:Calculation_665969808291094529:qk]' />
              <text column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcdf:ctd:start_station_name:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Count of Trips:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Trips YOY - Growth:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[usr:Calculation_665969808291094529:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Stations:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[ctd:start_station_name:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Station YOY - Growth:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcdf:ctd:start_station_name:qk:2]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-color' value='#666666' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='193' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]</rows>
        <cols>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</cols>
      </table>
      <simple-id uuid='{60AABBDD-B601-49EF-B517-7DCAE4062A60}' />
    </worksheet>
    <worksheet name='start hours by year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Amount of Trips by Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <_.fcp.ObjectModelTableType.true...column caption='2013.csv' datatype='table' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[started_at]' derivation='Hour' name='[hr:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[started_at]' derivation='Hour' name='[hr:started_at:qk]' pivot='key' type='quantitative' />
            <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='2013.csv' datatype='integer' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (Member Casual,YEAR(Started At),WEEKDAY(Started At))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_68FAD1B29BB346D19469A317E9536EE7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[member_casual]' />
              <groupfilter function='level-members' level='[yr:started_at:ok]' />
              <groupfilter function='level-members' level='[wd:started_at:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]' filter-group='4'>
            <groupfilter function='member' level='[mn:started_at:ok]' member='5' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]' />
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[mn:started_at:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:started_at:ok]' member='3' />
              <groupfilter function='member' level='[mn:started_at:ok]' member='4' />
              <groupfilter function='member' level='[mn:started_at:ok]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[mn:started_at:ok]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (Member Casual,YEAR(Started At),WEEKDAY(Started At))]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[hr:started_at:qk]' scope='cols' value='Trip Started Time' />
            <encoding attr='space' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[hr:started_at:qk]' field-type='quantitative' major-origin='0' major-spacing='2' max='23' min='0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[hr:started_at:ok]' value='ih a' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[hr:started_at:ok]' value='ih a' />
            <format attr='text-orientation' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[hr:started_at:ok]' value='0' />
            <format attr='text-align' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[hr:started_at:ok]' value='center' />
            <format attr='vertical-align' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[hr:started_at:ok]' value='center' />
            <format attr='wrap' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[hr:started_at:ok]' value='auto' />
            <format attr='text-format' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[hr:started_at:qk]' value='ih a' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c3e6f0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Hour:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[hr:started_at:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Trips:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]</rows>
        <cols>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[hr:started_at:qk]</cols>
      </table>
      <simple-id uuid='{7A9F9009-7206-4C30-815B-958AE7D94350}' />
    </worksheet>
    <worksheet name='station_start_map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000'>Start Station - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <_.fcp.ObjectModelTableType.true...column caption='2013.csv' datatype='table' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_station_name]' derivation='Attribute' name='[attr:start_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_lat]' derivation='Avg' name='[avg:start_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lng]' derivation='Avg' name='[avg:start_lng:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekday]' derivation='None' name='[none:weekday:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Start Lat' datatype='real' name='[start_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Lng' datatype='real' name='[start_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Weekday' datatype='integer' name='[weekday]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='2013.csv' datatype='integer' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Exclusions (Start Station Name,YEAR(Started At))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:start_station_name:nk]' />
                <groupfilter function='level-members' level='[yr:started_at:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;NYCBS Depot - SSP&quot;' />
                <groupfilter function='member' level='[yr:started_at:ok]' member='2016' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' included-values='in-range'>
            <min>200</min>
            <max>146114</max>
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start_station_name:nk]' />
              <groupfilter function='member' level='[none:start_station_name:nk]' member='&quot;Clinton St &amp; Newark St&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]'>
            <groupfilter function='level-members' level='[none:weekday:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]'>
            <groupfilter from='2013' function='range' level='[yr:started_at:ok]' to='2021' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Exclusions (Start Station Name,YEAR(Started At))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lng:qk]' field-type='quantitative' max='-8211146.5631900048' min='-8254487.4892250141' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lat:qk]' field-type='quantitative' max='4995743.4759883909' min='4957673.7431017868' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' value='Amount of Trips&#10;'>
              <formatted-text>
                <run fontcolor='#333333' fontname='Tableau Light'>Amount of Trips</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Year'>
              <formatted-text>
                <run>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' />
              <lod column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]' />
              <tooltip column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[attr:start_station_name:nk]' />
              <geometry column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Start Station Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Started At:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Trips:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.91154694557189941' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lat:qk]</rows>
        <cols>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:start_lng:qk]</cols>
        <pages>
          <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{5502A02B-3BF3-45E2-A65F-728EDB2D7EB6}' />
    </worksheet>
    <worksheet name='station_total'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total of Stations - Growth %&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <column-instance column='[start_station_name]' derivation='CountD' name='[ctd:start_station_name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_station_name]' derivation='CountD' name='[pcdf:ctd:start_station_name:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (Start Station Name,YEAR(Started At))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_666FF2C7B4C249B69683C41C247F65C7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[start_station_name]' />
              <groupfilter function='level-members' level='[yr:started_at:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]'>
            <groupfilter from='2013' function='range' level='[yr:started_at:ok]' to='2021' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (Start Station Name,YEAR(Started At))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[ctd:start_station_name:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c3e6f0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#ffffff44' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dashed' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#cbcbcb56' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_8' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcdf:ctd:start_station_name:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year of Started At:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[Total of Stations:	<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[ctd:start_station_name:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'> Table (Across):&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcdf:ctd:start_station_name:qk:2]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#edc948' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[ctd:start_station_name:qk]</rows>
        <cols>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</cols>
      </table>
      <simple-id uuid='{3ADA0CD8-2A29-4B5C-8822-DA8369B1EFB2}' />
    </worksheet>
    <worksheet name='tripduration'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[Average Trip Duration (min) - % YoY difference - <]]></run>
            <run>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[mn:started_at:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:nk]' pivot='key' type='nominal' />
            <column-instance column='[tripduration]' derivation='Avg' name='[pcdf:avg:tripduration:qk:6]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
            <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]' filter-group='4'>
            <groupfilter function='member' level='[mn:started_at:ok]' member='5' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]' />
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:tripduration:qk]' scope='rows' value='' />
            <format attr='width' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:tripduration:qk]' value='28' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:member_casual:nk]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c3e6f0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:member_casual:nk]' />
              <text column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcdf:avg:tripduration:qk:6]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>User Type:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:member_casual:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Tripduration:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:tripduration:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.22988949716091156' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok] * [federated.1grv25w1kfb80c1gx685q0tu9dn1].[avg:tripduration:qk])</rows>
        <cols>([federated.1grv25w1kfb80c1gx685q0tu9dn1].[wd:started_at:ok] / [federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:member_casual:nk])</cols>
        <pages>
          <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]</column>
        </pages>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{F2844713-D759-4BE0-B553-1A2E66B0F279}' />
    </worksheet>
    <worksheet name='trips'>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column-instance column='[started_at]' derivation='Month' name='[mn:started_at:ok]' pivot='key' type='ordinal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[mn:started_at:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:started_at:ok]' member='2' />
              <groupfilter function='member' level='[mn:started_at:ok]' member='3' />
              <groupfilter function='member' level='[mn:started_at:ok]' member='4' />
              <groupfilter function='member' level='[mn:started_at:ok]' member='5' />
              <groupfilter function='member' level='[mn:started_at:ok]' member='6' />
              <groupfilter function='member' level='[mn:started_at:ok]' member='7' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]'>
            <groupfilter function='member' level='[yr:started_at:ok]' member='2021' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[mn:started_at:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[End Station Name &amp; Start Station Name (Combined)]</rows>
        <cols />
      </table>
      <simple-id uuid='{A0F7DDE3-C819-447A-9814-E5FFCCB9095D}' />
    </worksheet>
    <worksheet name='trips by week'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000'>Trips by Week since 2013</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <_.fcp.ObjectModelTableType.true...column caption='2013.csv' datatype='table' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' pivot='key' type='quantitative' />
            <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Week-Trunc' name='[twk:started_at:qk]' pivot='key' type='quantitative' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='2013.csv' datatype='integer' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (Member Casual,YEAR(Started At))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_4BFB64FBB8C7482396873BBB44E69B65]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[member_casual]' />
              <groupfilter function='level-members' level='[yr:started_at:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (YEAR(Started At))]'>
            <groupfilter function='level-members' level='[yr:started_at:ok]' user:ui-action-filter='[Action4_EDAFE22F75114E51B3002D14EBF64D1F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set (copy)]' />
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set (copy)]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (Member Casual,YEAR(Started At))]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (YEAR(Started At))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[twk:started_at:qk]' value='53' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[twk:started_at:qk]' value='*d mmmm, yyyy' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' palette='red_green_gold_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c3e6f0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#ffffff44' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dashed' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#cbcbcb56' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_8' value='#00000000' />
            <format attr='line-end-size' id='annotation_8' value='medium' />
            <format attr='line-visibility' id='annotation_8' value='on' />
            <format attr='line-pattern-only' id='annotation_8' value='dotted' />
            <format attr='stroke-size' id='annotation_8' value='4' />
            <format attr='stroke-color' id='annotation_8' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[twk:started_at:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Trips:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#666666' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]</rows>
        <cols>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[twk:started_at:qk]</cols>
        <annotations>
          <annotation class='point' id='8' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Times New Roman'>March 16: </run>
              <run fontalignment='0' fontcolor='#666666' fontname='Times New Roman'>first covid resctrictions</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[twk:started_at:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]</field>
                      <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[twk:started_at:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>380759</value>
                    <value>#2020-03-08 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-1' y='-219' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{A73F90C2-1356-40BC-AACA-00D0F672D723}' />
    </worksheet>
    <worksheet name='week_year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Trips by Day </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
          </datasources>
          <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1'>
            <_.fcp.ObjectModelTableType.false...column caption='2013.csv' datatype='integer' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column caption='fix count by year' datatype='integer' name='[Calculation_665969808304349186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [started_at] : COUNT([__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077])}' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='2013.csv' datatype='table' name='[__tableau_internal_object_id__].[2013.csv_D516ED04798B4F7F8C7D6F623E1E6077]' role='measure' type='quantitative' />
            <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_665969808304349186]' derivation='Count' name='[pcto:cnt:Calculation_665969808304349186:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[wd:started_at:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[started_at]' derivation='Weekday' name='[wd:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[started_at]' derivation='Year' name='[yr:started_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (Member Casual,YEAR(Started At))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_4BFB64FBB8C7482396873BBB44E69B65]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[member_casual]' />
              <groupfilter function='level-members' level='[yr:started_at:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (YEAR(Started At))]'>
            <groupfilter function='level-members' level='[yr:started_at:ok]' user:ui-action-filter='[Action4_EDAFE22F75114E51B3002D14EBF64D1F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set (copy)]' />
          <slices>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set (copy)]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (Member Casual,YEAR(Started At))]</column>
            <column>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Action (YEAR(Started At))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:Calculation_665969808304349186:qk:1]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:Calculation_665969808304349186:qk:1]' value='p0.0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:Calculation_665969808304349186:qk:1]' palette='gray_warm_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c3e6f0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:Calculation_665969808304349186:qk:1]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Day:</run>
                <run fontcolor='#000000'>Æ &#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[wd:started_at:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Trips:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:Calculation_665969808304349186:qk:1]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</rows>
        <cols>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[wd:started_at:ok]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{A4B3FE5D-C2E5-4356-A7D1-53DCEA3AC5BB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Final' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='background-color' id='story-description_6' value='#ffffffbe' />
          <format attr='background-color' id='story-description_7' value='#ffffff' />
          <format attr='font-style' id='story-description_8' value='normal' />
          <format attr='font-weight' id='story-description_8' value='normal' />
          <format attr='text-decoration' id='story-description_8' value='none' />
          <format attr='font-style' id='story-description_9' value='normal' />
          <format attr='font-weight' id='story-description_9' value='normal' />
          <format attr='text-decoration' id='story-description_9' value='none' />
          <format attr='background-color' id='story-description_9' value='#00000000' />
          <format attr='border-width' id='story-description_8' value='0' />
          <format attr='border-style' id='story-description_8' value='none' />
          <format attr='border-width' id='story-description_9' value='0' />
          <format attr='border-style' id='story-description_9' value='none' />
          <format attr='background-color' id='story-description_8' value='#00000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='1' param='vert' removable='false' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='4935' id='3' type-v2='title' w='99034' x='483' y='940' />
            <zone h='11868' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99034' x='483' y='5875' />
            <zone h='81317' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99034' x='483' y='17743'>
              <flipboard active-id='10' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Intro' captured-sheet='intro' id='2' />
                  <story-point caption='Data Set' captured-sheet='first' id='3'>
                    <capturedDeltas>
                      <dashboard name='first'>
                        <zone id='5'>
                          <formatted-text>
                            <run fontsize='18'>- CitiBike NYC</run>
                            <run>Æ&#10;</run>
                            <run fontsize='18'>- 104 excel files - merged in 10 files (1 per year)</run>
                            <run>Æ&#10;</run>
                            <run fontsize='18'>- around 140 millions of rows</run>
                            <run>Æ&#10;</run>
                            <run fontsize='18'>- tools used: trello, pythond and tableau</run>
                            <run>Æ&#10;</run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Overall' captured-sheet='year' id='9'>
                    <capturedDeltas>
                      <worksheet name='trips by week'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='height' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[tdy:started_at:qk]' value='53' />
                            <format attr='height' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[thr:started_at:qk]' value='53' />
                            <format attr='height' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[tmi:started_at:qk]' value='53' />
                            <format attr='height' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[tmn:started_at:qk]' value='53' />
                            <format attr='height' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[tqr:started_at:qk]' value='53' />
                            <format attr='height' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[tsc:started_at:qk]' value='53' />
                          </style-rule>
                        </style>
                        <style delta-type='removed'>
                          <style-rule element='label'>
                            <format attr='text-format' field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[twk:started_at:qk]' value='*d mmmm, yyyy' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Station Growth' captured-sheet='station' id='5'>
                    <capturedDeltas>
                      <worksheet name='station_start_map'>
                        <current-page>
                          <multibucket>
                            <bucket>2021</bucket>
                          </multibucket>
                        </current-page>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Trip Duration' captured-sheet='trip duration' id='6'>
                    <capturedDeltas>
                      <worksheet name='start hours by year'>
                        <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]'>
                          <groupfilter function='member' level='[mn:started_at:ok]' member='3' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='tripduration'>
                        <filter class='categorical' column='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]'>
                          <groupfilter function='member' level='[mn:started_at:ok]' member='3' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='TOP 10' captured-sheet='popular stations' id='7' />
                  <story-point caption='Conclusion' captured-sheet='conclusion' id='10'>
                    <capturedDeltas>
                      <dashboard name='conclusion'>
                        <zone id='9'>
                          <formatted-text>
                            <run fontsize='18'>- Covid affected 2020 in: amount of trips, average trip duration, popular days and popular stations;</run>
                            <run>Æ&#10;&#10;</run>
                            <run fontsize='18'>- Will these changes be temporary or has the behavior of the users changed?</run>
                            <run>Æ&#10;</run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='11046' hidden='true' id='8' story-point-id='2' type-v2='text' w='97586' x='1448' y='19976'>
          <formatted-text>
            <run bold='true' fontsize='24'>Exploratory Data Analysis</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='7521' hidden='true' id='9' story-point-id='2' type-v2='text' w='27399' x='61557' y='78496'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#000000'>THIAGO COSTA FERREIRA</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{5E5751D5-D717-4240-8D22-12BB7E4CE618}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='conclusion'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='22'>Conclusion</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone fixed-size='53' h='7168' id='8' is-fixed='true' type-v2='title' w='99034' x='483' y='940'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#438bff' />
              </zone-style>
            </zone>
            <zone h='90952' id='5' type-v2='layout-basic' w='99034' x='483' y='8108' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='61927' id='3' is-centered='0' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/conclusion.jpg' type-v2='bitmap' w='65661' x='30597' y='37720' />
        <zone forceUpdate='true' h='38375' id='9' type-v2='text' w='83300' x='1800' y='9875'>
          <formatted-text>
            <run fontsize='18'>- Covid affected 2020 in (amount of trips, average trip duration, popular days and popular stations)</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='18'>- Will these changes be temporary or has the behavior of the users changed?</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='22'>Conclusion</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='33' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='32' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='53' h='7168' id='8' type-v2='title' w='99034' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#438bff' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='38375' id='9' type-v2='text' w='83300' x='1800' y='9875'>
                  <formatted-text>
                    <run fontsize='18'>- Covid affected 2020 in (amount of trips, average trip duration, popular days and popular stations)</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='18'>- Will these changes be temporary or has the behavior of the users changed?</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61927' id='3' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/conclusion.jpg' type-v2='bitmap' w='65661' x='30597' y='37720'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A03082D6-67F0-4922-8607-CE0C401E3617}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='first'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='9' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone fixed-size='46' h='6345' id='10' is-fixed='true' type-v2='title' w='99034' x='483' y='940'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91775' id='7' type-v2='layout-basic' w='99034' x='483' y='7285' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='38425' id='5' type-v2='text' w='83283' x='3681' y='20329'>
          <formatted-text>
            <run fontsize='18'>- CitiBike in New York City</run>
            <run>Æ&#10;</run>
            <run fontsize='18'>- input 104 excel files - output 10 files </run>
            <run>Æ&#10;</run>
            <run fontsize='18'>- around 140 millions of rows</run>
            <run>Æ&#10;</run>
            <run fontsize='18'>- pythond and tableau</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone h='57344' id='3' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/Citi-Bike-Nueva-York-azul.jpg' type-v2='bitmap' w='58057' x='43392' y='40658' />
        <zone h='10106' id='6' is-centered='0' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/citibike_logo.png' type-v2='bitmap' w='19191' x='3802' y='6463' />
        <zone h='38543' id='49' is-centered='0' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/GitHub/ironhack_final_project/SS/price.png' type-v2='bitmap' w='35908' x='7182' y='53231' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text />
            </title>
          </layout-options>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='65' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='64' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='46' h='6345' id='10' type-v2='title' w='99034' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='81' h='10106' id='6' is-centered='0' is-fixed='true' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/citibike_logo.png' type-v2='bitmap' w='19191' x='3802' y='6463'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='38425' id='5' type-v2='text' w='83283' x='3681' y='20329'>
                  <formatted-text>
                    <run fontsize='18'>- CitiBike in New York City</run>
                    <run>Æ&#10;</run>
                    <run fontsize='18'>- input 104 excel files - output 10 files </run>
                    <run>Æ&#10;</run>
                    <run fontsize='18'>- around 140 millions of rows</run>
                    <run>Æ&#10;</run>
                    <run fontsize='18'>- pythond and tableau</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57344' id='3' is-fixed='true' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/Citi-Bike-Nueva-York-azul.jpg' type-v2='bitmap' w='58057' x='43392' y='40658'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38543' id='49' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/GitHub/ironhack_final_project/SS/price.png' type-v2='bitmap' w='35908' x='7182' y='53231'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{36C3461F-4D3B-4FC5-8039-4518C522C34F}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='intro'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='99034' x='483' y='940' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='55347' id='3' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/Citi_Bike_logo.jpg' type-v2='bitmap' w='59203' x='19614' y='19506' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='61' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='60' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='55347' id='3' is-fixed='true' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/Citi_Bike_logo.jpg' type-v2='bitmap' w='59203' x='19614' y='19506'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{139C6202-4DD2-4FE8-9D18-8DE3FF8453D3}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='popular stations'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='20'>  TOP 10 Stations                                                    </run>
            <run bold='true' fontname=' ' fontsize='20'>Æ                      </run>
            <run bold='true' fontsize='20'> Weekdays</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='19' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone fixed-size='38' h='5405' id='20' is-fixed='true' type-v2='title' w='99034' x='483' y='940'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
            <zone h='92715' id='5' param='horz' type-v2='layout-flow' w='99034' x='483' y='6345'>
              <zone h='92715' id='3' type-v2='layout-basic' w='99034' x='483' y='6345'>
                <zone h='43538' id='1' name='map 2019 1' show-title='false' w='32003' x='483' y='6345'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43538' id='8' name='map 2020 1' show-title='false' w='33312' x='32486' y='6345'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43538' id='10' name='map 2021 1' show-title='false' w='33719' x='65798' y='6345'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43753' id='12' name='map 2019 0' show-title='false' w='32003' x='483' y='55307'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43753' id='14' name='map 2020 0' show-title='false' w='33312' x='32486' y='55307'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43753' id='16' name='map 2021 0' show-title='false' w='33719' x='65798' y='55307'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5424' id='24' type-v2='text' w='99034' x='483' y='49883'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>Weekends</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#438bff' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='4230' id='21' type-v2='text' w='5130' x='845' y='49706'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='20'>2019</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='3878' id='22' type-v2='text' w='5190' x='32891' y='49941'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='20'>2020</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='4113' id='23' type-v2='text' w='5552' x='66144' y='49941'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='20'>2021</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontsize='20'>  TOP 10 Stations                                                    </run>
                <run bold='true' fontname=' ' fontsize='20'>Æ                      </run>
                <run bold='true' fontsize='20'> Weekdays</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2100' minheight='2100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='72' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='71' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='38' h='5405' id='20' type-v2='title' w='99034' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43538' id='1' is-fixed='true' name='map 2019 1' show-title='false' w='32003' x='483' y='6345'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43538' id='8' is-fixed='true' name='map 2020 1' show-title='false' w='33312' x='32486' y='6345'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43538' id='10' is-fixed='true' name='map 2021 1' show-title='false' w='33719' x='65798' y='6345'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='4230' id='21' type-v2='text' w='5130' x='845' y='49706'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='20'>2019</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5424' id='24' type-v2='text' w='99034' x='483' y='49883'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>Weekends</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3878' id='22' type-v2='text' w='5190' x='32891' y='49941'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='20'>2020</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='4113' id='23' type-v2='text' w='5552' x='66144' y='49941'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='20'>2021</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43753' id='12' is-fixed='true' name='map 2019 0' show-title='false' w='32003' x='483' y='55307'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43753' id='14' is-fixed='true' name='map 2020 0' show-title='false' w='33312' x='32486' y='55307'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43753' id='16' is-fixed='true' name='map 2021 0' show-title='false' w='33719' x='65798' y='55307'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#438bff' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3771DA3A-7774-4D29-8657-010FFE80E28E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='station'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='24'>Interactive Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone friendly-name='Year' h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='137' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='20' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
              <zone fixed-size='87' h='11163' id='21' is-fixed='true' type-v2='title' w='99034' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='86957' id='18' param='horz' type-v2='layout-flow' w='99034' x='483' y='12103'>
                <zone h='86957' id='6' type-v2='layout-basic' w='99034' x='483' y='12103' />
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#3d99ce' />
          </zone-style>
        </zone>
        <zone h='15864' id='68' is-centered='0' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/bici_pequena.png' type-v2='bitmap' w='8630' x='90284' y='70858' />
        <zone h='9166' id='67' is-centered='0' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/citibike_logo.png' type-v2='bitmap' w='10199' x='724' y='1998' />
        <zone h='86486' id='135' name='station_start_map' w='43090' x='724' y='11986'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='86486' id='141' name='station_total' w='45564' x='44116' y='11986'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone fixed-size='160' h='33255' id='136' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89740' y='11868'>
          <zone h='13983' id='140' name='station_start_map' synchronized='1' type-v2='currpage' w='9656' x='89740' y='11868'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='8578' id='139' name='station_start_map' pane-specification-id='2' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' type-v2='color' w='9656' x='89740' y='25851'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='24'>Interactive Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='203' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='202' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='87' h='11163' id='21' type-v2='title' w='99034' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='73' h='9166' id='67' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/citibike_logo.png' type-v2='bitmap' w='10199' x='724' y='1998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='86486' id='135' is-fixed='true' name='station_start_map' w='43090' x='724' y='11986'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='8578' id='139' name='station_start_map' pane-specification-id='2' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' type-v2='color' w='9656' x='89740' y='25851'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='86486' id='141' is-fixed='true' name='station_total' w='45564' x='44116' y='11986'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='127' h='15864' id='68' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/bici_pequena.png' type-v2='bitmap' w='8630' x='90284' y='70858'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13983' id='140' name='station_start_map' synchronized='1' type-v2='currpage' w='9656' x='89740' y='11868'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#3d99ce' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1F1E5BBF-CA03-4466-B944-B5F346EF2C65}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='trip duration'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='24'>Interactive Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='2013' name='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
      </datasources>
      <datasource-dependencies datasource='federated.1grv25w1kfb80c1gx685q0tu9dn1' />
      <zones>
        <zone friendly-name='Year' h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='113' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='20' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
              <zone fixed-size='87' h='11163' id='21' is-fixed='true' type-v2='title' w='99034' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='86957' id='18' param='horz' type-v2='layout-flow' w='99034' x='483' y='12103'>
                <zone h='86957' id='6' type-v2='layout-basic' w='99034' x='483' y='12103' />
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#3d99ce' />
          </zone-style>
        </zone>
        <zone h='11868' id='68' is-centered='0' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/bici_pequena.png' type-v2='bitmap' w='14424' x='92637' y='-470' />
        <zone h='9166' id='67' is-centered='0' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/citibike_logo.png' type-v2='bitmap' w='10199' x='724' y='1998' />
        <zone h='86486' id='103' name='start hours by year' w='40314' x='58962' y='12103'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='86445' id='109' name='tripduration' w='57965' x='727' y='12247'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone fixed-size='126' h='4230' id='114' is-fixed='true' mode='slider' name='tripduration' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]' show-all='false' show-filter-state='false' show-title='false' type-v2='filter' values='database' w='12794' x='45564' y='12808'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7491' id='115' name='start hours by year' pane-specification-id='6' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]' show-title='false' type-v2='color' w='10478' x='61962' y='20095' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='24'>Interactive Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='196' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='195' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='87' h='11163' id='21' type-v2='title' w='99034' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='95' h='11868' id='68' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/bici_pequena.png' type-v2='bitmap' w='14424' x='92637' y='-470'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='73' h='9166' id='67' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/citibike_logo.png' type-v2='bitmap' w='10199' x='724' y='1998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='86486' id='103' is-fixed='true' name='start hours by year' w='40314' x='58962' y='12103'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='7491' id='115' name='start hours by year' pane-specification-id='6' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]' show-title='false' type-v2='color' w='10478' x='61962' y='20095'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='126' h='4230' id='114' mode='slider' name='tripduration' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]' show-all='false' show-filter-state='false' show-title='false' type-v2='filter' values='database' w='12794' x='45564' y='12808'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='86445' id='109' is-fixed='true' name='tripduration' w='57965' x='727' y='12247'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#3d99ce' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1BE43F18-64E1-4164-9640-8AF79139A3D3}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='year'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='24'>Exploratory Analysis - CitiBike</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone friendly-name='Year' h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='118' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='20' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
              <zone fixed-size='87' h='11163' id='21' is-fixed='true' type-v2='title' w='99034' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='86957' id='18' param='horz' type-v2='layout-flow' w='99034' x='483' y='12103'>
                <zone h='86957' id='6' type-v2='layout-basic' w='99034' x='483' y='12103'>
                  <zone h='43405' id='3' name='trips by week' w='99034' x='483' y='12103'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#ffffff' />
                    </zone-style>
                  </zone>
                  <zone h='43552' id='5' name='member_casual count year' w='30214' x='483' y='55508'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#ffffff' />
                    </zone-style>
                  </zone>
                  <zone h='43552' id='61' name='week_year' w='38189' x='30697' y='55508'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#ffffff' />
                    </zone-style>
                  </zone>
                  <zone h='43552' id='66' name='member weekday' w='30631' x='68886' y='55508'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#ffffff' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#3d99ce' />
          </zone-style>
        </zone>
        <zone h='11868' id='68' is-centered='0' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/bici_pequena.png' type-v2='bitmap' w='14424' x='92637' y='-588' />
        <zone h='9166' id='67' is-centered='0' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/citibike_logo.png' type-v2='bitmap' w='10199' x='724' y='1998' />
        <zone h='8000' id='11' name='member_casual count year' pane-specification-id='1' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:member_casual:nk]' show-title='false' type-v2='color' w='14000' x='89600' y='51375' />
        <zone h='7521' id='81' name='member weekday' pane-specification-id='0' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:member_casual:nk]' show-title='false' type-v2='color' w='6337' x='93422' y='56052' />
        <zone h='4935' id='84' name='week_year' pane-specification-id='0' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:Calculation_665969808304349186:qk:1]' show-title='false' type-v2='color' w='9596' x='58902' y='56169' />
        <zone h='7521' id='119' leg-item-order='reversed' name='member_casual count year' pane-specification-id='8' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[:Measure Names]' show-title='false' type-v2='color' w='7242' x='5613' y='60165' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='24'>Exploratory Analysis - CitiBike</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='185' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='184' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='87' h='11163' id='21' type-v2='title' w='99034' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='95' h='11868' id='68' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/bici_pequena.png' type-v2='bitmap' w='14424' x='92637' y='-588'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='73' h='9166' id='67' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/Final Project Data Set/Citibike/citibike_logo.png' type-v2='bitmap' w='10199' x='724' y='1998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43405' id='3' is-fixed='true' name='trips by week' w='99034' x='483' y='12103'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43552' id='5' is-fixed='true' name='member_casual count year' w='30214' x='483' y='55508'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='8000' id='11' name='member_casual count year' pane-specification-id='1' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:member_casual:nk]' show-title='false' type-v2='color' w='14000' x='89600' y='51375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7521' id='119' leg-item-order='reversed' name='member_casual count year' pane-specification-id='8' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[:Measure Names]' show-title='false' type-v2='color' w='7242' x='5613' y='60165'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43552' id='61' is-fixed='true' name='week_year' w='38189' x='30697' y='55508'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='4935' id='84' name='week_year' pane-specification-id='0' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:Calculation_665969808304349186:qk:1]' show-title='false' type-v2='color' w='9596' x='58902' y='56169'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43552' id='66' is-fixed='true' name='member weekday' w='30631' x='68886' y='55508'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='7521' id='81' name='member weekday' pane-specification-id='0' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:member_casual:nk]' show-title='false' type-v2='color' w='6337' x='93422' y='56052'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#3d99ce' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B5C8661D-B5EE-43E0-9FBA-35BFD752F2C9}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='create_stations_set'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]' type='filter' />
            <card mode='slider' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;S 5 Pl &amp; S 5 St&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10B8FA80-3643-4775-A8DF-8F5CA5656C46}' />
    </window>
    <window class='worksheet' name='hours_week_year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[mn:started_at:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:Calculation_665969808304349186:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{FBFF4A87-6C6F-4CC1-8EBA-1F7C7E9B5E17}' />
    </window>
    <window class='worksheet' name='trips'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[mn:started_at:ok]' type='filter' />
            <card param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[End Station Name &amp; Start Station Name (Combined)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F39A5751-4BB3-43A2-A9DD-D8FD7BDD6EDF}' />
    </window>
    <window class='dashboard' name='year'>
      <viewpoints>
        <viewpoint name='member weekday'>
          <zoom type='entire-view' />
          <highlight field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:member_casual:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='member_casual count year'>
          <zoom type='entire-view' />
          <highlight field='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='trips by week'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='week_year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{2CF5D666-B93E-4CF6-8178-5A2018A1B7CB}' />
    </window>
    <window class='dashboard' name='station'>
      <viewpoints>
        <viewpoint name='station_start_map'>
          <current-page>
            <multibucket>
              <bucket>2013</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='station_total'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9B42B20A-4A21-405B-83E5-BB3C564CC442}' />
    </window>
    <window class='dashboard' name='trip duration'>
      <viewpoints>
        <viewpoint name='start hours by year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='tripduration'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='114' />
      <simple-id uuid='{FE740740-3CF4-490E-950B-740454C072AC}' />
    </window>
    <window class='dashboard' name='popular stations'>
      <viewpoints>
        <viewpoint name='map 2019 0'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='map 2019 1'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='map 2020 0'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='map 2020 1'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='map 2021 0'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='map 2021 1'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{CD8CEC9E-8A45-42A2-BCB2-C9B375E690CD}' />
    </window>
    <window class='dashboard' name='intro'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{AAA4D138-144B-4810-95EF-00B75B1A4055}' />
    </window>
    <window class='dashboard' name='first'>
      <viewpoints />
      <active id='49' />
      <simple-id uuid='{DB013A92-88A1-4055-9E69-419B5E4BE2C9}' />
    </window>
    <window class='dashboard' name='conclusion'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F1B819F2-E753-41BB-94C3-FF8308DE4D3A}' />
    </window>
    <window class='dashboard' maximized='true' name='Final'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{41D52B60-E938-49F4-9A04-00AA079C5661}' />
    </window>
    <window class='worksheet' hidden='true' name='map 2019 0'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]' type='filter' />
            <card pane-specification-id='2' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 2]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 3]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 4]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 8]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 9]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{1A6CE266-9856-496D-8499-77D1DF05ED48}' />
    </window>
    <window class='worksheet' hidden='true' name='map 2019 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]' type='filter' />
            <card pane-specification-id='2' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 2]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 3]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 4]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 7]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 8]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 9]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{87A10D0B-CD90-4DE4-B947-2F0E6D4B7960}' />
    </window>
    <window class='worksheet' hidden='true' name='map 2020 0'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]' type='filter' />
            <card pane-specification-id='2' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 2]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 3]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 4]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 9]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{6EC6563C-BCFB-4BD7-BCAC-F1F6B166000B}' />
    </window>
    <window class='worksheet' hidden='true' name='map 2020 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]' type='filter' />
            <card pane-specification-id='2' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 2]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 3]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 4]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 6]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 9]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2743F7B3-74C0-4372-BC0F-C566BBE93225}' />
    </window>
    <window class='worksheet' hidden='true' name='map 2021 0'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]' type='filter' />
            <card pane-specification-id='2' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 2]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 3]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 4]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 9]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9C13A83C-2102-44A7-A2F4-F37AD5479606}' />
    </window>
    <window class='worksheet' hidden='true' name='map 2021 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]' show-title='false' type='filter' />
            <card pane-specification-id='2' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 2]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 3]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set 5]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[Start Station Name Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[yr:started_at:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{AA7313B7-D622-411A-BDA6-ED5BBFCC59FE}' />
    </window>
    <window class='worksheet' hidden='true' name='member weekday'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:member_casual:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set (copy)]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:holiday:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED35BED3-7287-40DD-86C1-556D13DFF005}' />
    </window>
    <window class='worksheet' hidden='true' name='member_casual count year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set (copy)]</field>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:start_station_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF746D81-8802-44AA-B0CA-8743524DC816}' />
    </window>
    <window class='worksheet' hidden='true' name='start hours by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[mn:started_at:ok]' type='filter' />
            <card pane-specification-id='6' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B1B245DE-84E1-47A3-A6DC-9ED1FAD66F02}' />
    </window>
    <window class='worksheet' hidden='true' name='station_start_map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:weekday:ok]' type='filter' />
            <card type='currpage' />
            <card pane-specification-id='2' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[__tableau_internal_object_id__].[cnt:2013.csv_D516ED04798B4F7F8C7D6F623E1E6077:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2021</bucket>
          </multibucket>
        </current-page>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3BB6F19D-270A-4408-839E-B80AD24C53B8}' />
    </window>
    <window class='worksheet' hidden='true' name='station_total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D3415965-9440-44A5-BF37-A61B4BFC7E97}' />
    </window>
    <window class='worksheet' hidden='true' name='tripduration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[MONTH(Started At) Set]' type='filter' />
            <card pane-specification-id='0' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[none:member_casual:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>(5)</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{2FAC292E-AF38-4EDE-851E-97E86B5756E0}' />
    </window>
    <window class='worksheet' hidden='true' name='trips by week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set (copy)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{27B1ECD8-1BDE-47F8-8BE7-1298971D1E40}' />
    </window>
    <window class='worksheet' hidden='true' name='week_year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1grv25w1kfb80c1gx685q0tu9dn1].[pcto:cnt:Calculation_665969808304349186:qk:1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1grv25w1kfb80c1gx685q0tu9dn1].[YEAR(Started At) Set (copy)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E05C4A7-DAC3-4964-B4E1-6E05315303B9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Final' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='conclusion' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='create_stations_set' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z3hd53Xn+9t7n94LcNArCYIAARLsTaxqlixZsmVZcpN949hxPJP4SSY3
      1zNPcu/MJJnJOOXe5Oam2E5sy5KtYksUqUKKvfcOkmhEx0E5OL2Xvff9cEACoEgRlEWLkfB/
      HnzAPu9+237XW9b6r/UKqqqqzGIWn0AIgiCIH3UlZjGLjxKzAjCLTzRmBWAWn2jMCsAsPtGY
      FYBZfKIxKwCz+ERjVgBm8YmG5qOuwCzuHuL+AXoGA8iAIOooLK+iyGm641kvG/fR78tSXl6K
      /jc0YsLDXfSOxac8EbAUlFFV4kYzpQFKLsNQdzfGshoKzPo7Lmd2BfgYo/Pg8/zl//sS585f
      4PT+N/j7f/oZ7WOpO84n2Pkuf/sPr+JL3IVK3gKR0R5aW1vZ+oO/5K//9Q3OtF6m1xsgd4PZ
      NhMb58d/9qfsujr2gcqZXQE+5iisX8UzX/oMOjXBC//9D3j3xGrmPtJAfHyE0UAUGQmHp5xi
      txk5FcQ7msRqVBn3RxAtBVSVFU7JTSUTC+D1ZyipKEF/F6fPipYH+XILHIxeJKPbyDNfXo8J
      SIdG6Evq8FhVBseSlBa7ePYPvoexyo2cDDMwHMFgVggHkxjsHkqLnGiRCY+P4B2PIGgNFJdX
      Yjfmh/6sAHwiICBqjVhNGnyyTDYe5NiBHQxFRZTwAJ2xEr793d/GNLKf//4ne3joi5uRA1c5
      fi7EV/7zn1I1kYuSjbNvyw85Ky7k21+9uwJwK3iP/IL/ddbKJscQbw+4+ZPfeZwdP/03Cr/x
      PR7VXOIv/vwN1nzpIaSRQVrbQzzxnf9Ai26AH/3oVxgrqjGoWWw1m3h88zxgVgA+9kiGRrna
      2U7ae5ojoWI+3zIPg1nL8nUPURdLk0t7Gfz/fsGVgThLtaB3FLF07UPUFowx+p3/Qc9ogioB
      MvEgZ7b/hNOhGn7nWw9i/8hGjkqgqwPl61/mr75Ui01MTvtVo3Wz4sHHaZAyvPvD/8augx3U
      LwnRGdHw3Yc+TZnDjKBKaK+l/803YBa/SUSG2tnywjkOnI3xB3/7f7OiykxyvJPXf/oCIVMx
      dkOWYCaNrCgAiFo9Rp0GURQQEFBVFQSI+/o5dsJLwYbfo8CsvU2pdxMqxsoF3L+8GY9JJBe7
      4UwjaNHpNYioFBS5CHcHcdYs4ek1Xt54/keoOhtrHn2W+xqNwOwh+GOPogXr+b0/+i/8zkPl
      7H1rP8PRNP7hC3QEPXz5a9/guS8+QZ3beNt8nNWL+Oq3vknk8C841DbC1LNoMjSCdyxEVlFJ
      hMfoHwnevQYhYjSa0GhuMXRVBUVWkVNxurvHKK4pRpYsLH/wC3znd7/Jk03w8ovvMJq+ltss
      PvbQWct58pvfpjK0l//nX94kZ6rAnuvi5Z+/yBtv76U3lJ5RPvayRTz7YCVbfvYKvVHl+vOL
      v/pzvvfXrzCalDm95W/5rT97+W415bbIpod4++c/4Yf/8o+cTdXz2H1zCQ208sbLz/Pqr7ay
      7/wYVfW1mKV8emHWH+Dji0RohEDaQKnHgSjk/x8JqZSWukn4hxmPZrG43GjTMXSuUkxClBFf
      mqJSDzopy1j/CNqCUixEGAnmKCr2oMlGGRoN4iipwKoTAIiPD+BLGyktcZMJehlO6KmrKPhQ
      2hAbHyIi2Cl2WxCBdHiM0aSWUo8TjQiqnGN8eBiNuwipZw9//D/38ex//S1KZBGnpxS33YiQ
      SxPwjeKPJBEkPZ7yCuxGDaIgCLMCMIuPDSKXt/N/fP84f/iT/4u6GaQXbiUAuVwORVFu9s4s
      ZnHPQk6G6PfGKJlTjmEG6fV6vXBTLdCFviH6fYEPuXqzuCsQoNBq/ahrcU9hvKt/xmlvKgBj
      isRV+aNUdc3iTmCxF33UVfh3i1kt0Cw+0ZixIUxVZHKxMboP7UdTu4Ga+SWIqGSC/fQdO8zY
      SBDJWkbN+vvxeKwIU9/NjNK29U0CYhHNDz6Ezar7wBVWlQwjx9+it20I0VHDnPWbcLtMCNcK
      TPZxcftRijZ8AY9LINV/kvOHWynb8CxlpUay3vNcOh1k/uObMN6Q7+iR12lrjVL96SeorihE
      yUbo27cN72AYY8Ui6lavwDrFCKTKKUZObqe3bQhFY8E5fwXzFtejERSyWQVJp0MU+NhDVRWy
      kREu79lCrvErLKu33eYFhWx8nK79WwiUPcHaliJARcnG6Nz7OufO92AoaWblY5+myK6f/LZA
      JjrIhe1v0tUzgqJ1MG/TZ2hZWIukphhtPcSpg8cJpzRUrHmcNasaGT/2PLsOXL1WMEouR+PT
      /5ll9flt44xXgEjnIc69/Qbdp88RjVwzP8cZOnESzZwNrPzqN6mrTHNx626m2+ZUUoPtjMSs
      GDN9+HyhmRZ5U6S7dnLpkkrjF79NdXGQS7uPkp1KETTayI31MD48jqpmCff2kssmGR8YQUUh
      MthOKCMyjTirKiR7j3O1W4tZ8hOPp0FN49v/C/rjNSz58jdxpc5ydu+pKQagHKGTr9Lapaf5
      md9h1ecewyZlyCoqDB9jz49eJDjdSv+xRXLoHPu3vcP46ACBSPa26TPjHRzetpWhgX7GwxM2
      CCVNz85X6de18Nk//BNWzddwaOtbxNLytHflZBR70+M89Z/+lKe/8XlSJ16mdShNevwyHb0i
      q7/2R3zxP34Dc/tWzvWnKV7zHF/53n/L//2n7zK/shpXsfl6fjMWAH1hHY2PfY6iaVZDA2Xr
      Hqd6XhmSpEFvtkAyztQuUNUsoYEejGW1FDq1jPeNowLZ4dOc3XGQRFoFNYvv+GtcuTiMIifp
      3/sSR37yD5x8ew+hSJqpiipVUVHVHCoiOpsVSblRiWXHVWwk5vMh51KEIxKe+TWoY6Pksmli
      YwGsxWXTGq5kE/Sfb8Pd0ozh2g+pMQa7gpQtX4ZRp8HTtJRMbxuTYzpHwh9AV1CGUS8hGl2U
      L16EJualde8uYt5LnHvxHzi77wK3HxL/vqGxlLD8s1+lpaliRulFvZNFj32FFcvrkK7N7tkw
      /QknS5fOQydJFC5YiVuJEIxPn0WMngbqGsrQiCKS2Y3brQNFQO9ewJrHNuO26hD0TjzlRtLJ
      KcKjqkT6rhB01lNpn/z6MxYAg6sUs0XP9BVdg86kR1AzhNqOcP7QJYruu4+pC6CaTuLrD+Oe
      U4GjqppoVytpFURHIameM4SDcdSEl95TnRg8DgKHfs6QvJBlX/ldKp1jXNh9lKmKWuO8jRRL
      7bS+9QbdlyJUrGpBq51aKxF7ZRmJMS/paIKEAK7iGgTVSzqaIhpUcJQ7pqRXiHbuIyDXUllb
      OlnvRIx4SsRg1QECWoMZKRYicV07bKCwZTV0b+f0OzsZ6R0inVXQOCto2vQAltIFtHz5P7J4
      40I+7uoEnaMEh1nHTHd7GlsRTqthenpJj1UOMjgSRFZBQUYXSxPL3jh95Aj1XuT8zq3sffEn
      +IoeoalKh6DRo5FAyUToPvA6F0NNLKk3XX9LVXP0tHdStaB52r7/1ybDqbkEI6feoaM1SMXG
      L1Ixp2x6ddMjhCICxRYzJorRxs/jDymUWj243BJ+XwBneoSovpwmR4Sujn5C6QTH+/cgJwIE
      teLECiCAqhDrOkVMLCQ3cIrM4q9TZh3j0rsd1N6/BtOEeVvnqUA810M66kfAiMFagCCppGIh
      EqpEiWVyFVNjg1w93k3Rg/8beq0KqoqqKpNbnfcxE+rKlrHiqQL8gwMM7H+ZTsdSVn56HXfu
      lzQLNDYa1rVweNsLXPhVHGNBAYo/i+M9CQVErQ69xYbVGSc40E0004BDC2pihFNvbiHmXMya
      RxZjvD69q8jRdkb8blaVOacX++vVWsF3/FUutupZ+aWvYre+99Mnr54hEovR/vbziEAu58d7
      uY+SNVV46spp7eom4BrAXL0Io6CiKlD+wG/RNN/83hklNUbXgaO4Hvguc209HH91G8d6jBSt
      e/b64AfQWSrQq2cJjPaCvhy9zYRVFAmOtSHjwWCaFIBUOAgmDSO7f8awkiPSP4SQfh3bw49g
      MSgkI2mw68gmY8hWJ+YpnaoqAgZPLeVFtZTOqeT48y8y5F9J7a/XqZ9QiJhLl/DQ7ywBQIkP
      c+DN/bgNN5q0JGxl9djK6gHwHf0Jx04M8OBSI6e3voVp6edYMe8GtbCSpGvnPoo2fwu7fvqo
      +jXVoEEGzw3gWbIKq+Vm814c39Vhyh94jrVf/w5rv/4dlm9aSLi3jWRWwFo6B0a6GRyL4q4u
      Ap2TojnFDB3bSTiSyXsodXSjXtvnS1p0eonoyAjYailwJhjtjWO2Tt9kSAYjVr3KaFcfmsJC
      JEmHxaYQbOsFZym6KZ4cxrJFLHk2X7c1X/ltKqrKqbz/KSrnVFNe72boxHHiyTQjF06hr2mY
      YmFMMHJ0D0MDfmRFJRkcJqlYMRtFsNjQZSIkI0kUWX6/RWQWUxAd6sTnj6LIKXpO7idrq8Jp
      mS4A/ksH6egeJacoyIlRejuGsNispIYvELK1UD/H855806NtdGfnML/svdrHm1IhtncOcmls
      qrYmQfe2nzPkS4KigiAgmd3UrlmB78geQvE013RVWksl8z/zGRwGID1Cx55jONc8QaE9/3su
      2sWlvV3UbLofqyXN0O63GM64adh4PxZTXh05dPAN+rvHEIyFFC25j5q6UgRBAFVFiXm5susd
      gmGZwkUPUlmeof9inMrNSyfVmmoG/7m9XO0Yp/qBZ/G4RdJD57lw6CzuJZ+mps5z0/2qmkvT
      v+8thIYNVJa5UeUkgwe3MtAbwFSzjLqVSzAbri01CmlfD52H9hMOJZAsxZSt2EhZpRsRlUDr
      TjpOd2GYu4mm+xrvquPFouqq2ye6a0hx9Z0XOHp+AFQFFQFR0rDsuf+T+uKbpc8wePBXHDjS
      hqKqqCoIgkDz03/MfMcgR7a8gdefpmTxp1i5cRkmjUqyYyc7jos89NyDSOOdnNmxnb4hP+gc
      zN3wJEtbqgiefY23d5zPjxNA0Opp/uzvs7DGyPD5Y8Stc5k7Z/rK8GC57eZcoPcKwCzuZXy0
      AnB3oWYjXD60H9O8DdSU3ca+cId4sNx2cy7QLGZxz0BjpWH9owji3SEtzArALO5pCIKAIEm3
      T/gBMcsFmsUnGrMCMItPNGYFYBafaMzsDJDy0nm8Dc/STdgtApmRVjou9lOy9AHcLh1ZXzs9
      nUmq1rR8CFZQFSUdZvT8cYYH/IhGB6VL1lFQbH0faVWRI166jx8lGgd3031UzC1+T3olm2D8
      0lG8vWOI1jIqly3HmOqj92qc2jVLPxzKQi7G8JnDqBUbKC2ZiV/Sv3+ocoaB0zu4crkfxVDK
      go33U1n8/hobNRdn4NRuQu77WFjnuv48Heyndd8uhkMKRQvX09JSh1aaxi0mFxumdd9uBkbj
      uOetY/m6BWhRkeNjXD64m96hMI6a1azc3IJWVfB3HObC8YtkLVUs2rCJYvckRWJmK4BOIHD+
      OL7RcJ7c1nEBX28XIwM+VGQi3WcZGo7c0YlaySQ4/8Lf0tfvn94xqkr/zp/RPWpk3uaHqW2u
      Inq1mwwQ7tzBoZd2kstNd9dU0wE6336dpHMhdcvn4N3zCkPeGzipuRh9777A1UENVWsfoLLK
      QTqVIRPoZ6C1g9wd1P39G5YicOUE/kDmw8rxnsfYqdfpDBXQ8qnPs6TZxvEt23k/IqwcHeDI
      qz/l/JEDdA9Frz9XkwMcfWM72nkbWfvIQxRYJFR5+rfOxUc5se1N1IpVrHv8capsAilATgU5
      /eYWUgWLWff4Z6h1aUkByf49HDnoo27zZ2mslDnwyhvEpnDkZjZmRQ8uj0R0fBy1CkIBLSWN
      VaTGxsjlHERGx7GWrkQCMqE+ek+cIpHVUrBgFSWVHoSMn6GzJ/CPxdAXVFO1vIHw8X14u/sI
      KFsJV9ZRu2wlFkt+Dg4ODeNa9znMTjeC042tAghd5cLh0/gHVc5vC+NsWEl1fQWiAGouQyKS
      wOwuwFpaiEmzk1QiDVPsthnvefr6RZqeW4fTLEJhPuZlNACqmiHYdoSrXV50JQuoWliPJhtk
      uPUU48MhBK2NstWbcDv0hC8fwi/bwHeVaFJH6dLlyIPnGR3LULhwFaUThsjUWDttA73kDKVU
      LluB1aJFTYzRd/I44XAGa+1SqhdUo8R66bswTkljOaOnLmBdugpTop/+i22kVQOu+cupqC2a
      MdHso4Cj+XE2m0z5OhYqFO7YSQS4VbShXDJD9QNfpanvNQ4mrrVMxn/2ALmGT9G8oBIBcN7E
      kBYbaiVpX8yy5jp0Ijg8ee5ZfLSVkL6J9YsbMEjXniv0nL9I+cO/R0W5BkrvJ3z572jz5lhW
      kR/6MzwDSNhLPUTHRslEY0Q1WgqKy1HTI+TiCaJBAUeZHTU5RNvbuxArllLdVIN3/1ZGx/z4
      z++ib1hP7ep1FDjThHwqzoYlOFxWihauZk5LM0bjNVkUKJxTxeDBHQxd7SMWjufJcJZSyhtq
      MLprmbNmfV6wJt4QjQVUL6lhcPc79J48RtLaTHHFVD/ZHFFvPzl3LS7ze5usREfI6CqoaFnI
      +Mk3GRsNIyeTCLYyaldvoMQdoXXbLmIZiHQdp+vCAK6mVbg1/ZzfeRSptJlCZ4zOQ6fIyXm7
      YjajoXTpfRhjF7iw9xiZeICuXW+RtMyldsViEpfeovPKKNmEl4FTJ+g9uIMRfxo5FaZj77to
      KhZR21JPzjd6z9Op9SYTAipyMkjHgUPkFszn/YKi6D1zKCu03uAslGS4K0Fu5ADb/v7P+Pnf
      fJ+9e8+QzE73B4gNthPwdfLuP/4PXvz+X/Du9qMksirxgSv4g/3s+cH/5MXv/zlvb91PPCOg
      NUA8ECGnqCiKFleJnvGRyPX8ZrxrMZZVoPb5SEVsSBojJnsRqtBPKhomIegosxlIDZzGO+zH
      YztFXMmS8A3j98cp1WjI+vvw+yoorl2J0ahFyYhotVr0Nhdmh/16OYIApeu/hKHkAkMX9tAT
      ylG68lGqG8swWk1IegGzqwCtdnIgK5k40UgWHV4u7A+z5re+RLrjBImiJoo8FkBFUWQQpZtK
      vGSrpKi2Al06hlZIks3m0BY70Y/003+qDTkTJBMMkEnlu8xSVoXDU4qh3IMmUYKjrIRMphSx
      P8g17ra1fA62Qhvapavpf/sscZ+d4e4eTDkTPcMSyWAYZcBLqRvkWAhd7ROsaiqDVIhRIU2w
      twdHwTKqljm5e1rwDwmqSsrXwZl9h5ALF7Jyw5IPUGeZbCqJqWEdmx79ElJ6hKOvvEFvXS0N
      U+jrmWQCnWct9z/7BfREuLjlec51zKcymUDnXsaGBz+PUYrTvu3HnLzSxNolD3Fpy89594IB
      nd6MOD6KunRyWzVjAdDbKpAyBwj7TUi6InQ2CyZZJRjoQZHcGPUGcpkUkrGAsqVrMYpQs3Iz
      OrsLnfAwi109DF86xslDb1PxyDeoLL75oq6qIGgtFCxYi2veEpI9+zi0czuO8m/ccrmKe0/T
      2yvR8uSXGdm/ld5Tx1EjYeoqF19vpslVgHB5hFhWxaK93YZCIXBxN5cvZml8cDVadYBI39mZ
      dtUNkBAkUJU0OcFOyaKV2Cx6WH4fGrMD4mcQrSV4KgsRAVVvY/5jX8Pf3Ubvu89zxdTMys/d
      /5FEYp4psrFBTuw+RMHSTzFvbimaD+QHasBepCdlcqHTigjaImoqbYwkp5+lLJ5yDBEDOp0G
      UXBRtXAOZ0YDmD3l6Lx69AYtouCgqqWevqt+pIUNbPiCh1g0CaLI6P5eEkWTlOgZd6vWbMci
      ZBju7UdT6EHSGbGbM4xf6UV0lqHRixiLK9GnxglFBcwFHvRSlnQqRXx8DMFRy/xHn6GmQmCk
      awBVENHqRBKxZJ5/f52SlGD4zAlCoQSCpEGVZSRJjySBpDWjpkNkZAVVUa47yqg5GTmTAYOb
      yiX1jB3fS9ZUiclyTa8jYK5cRIG2n86THWSyMpmAl3D4Vjc+KKRDfqSCSlyFLpRIkDs90ipy
      DkVJ4W87i8ZWhdFRit2QYNyfxlRYhNGoJZuIowKCKF4ncSnZKNFAGnfTBhZ/ahMMXSaUhGjX
      EbrOtZPJKUS6T3LlVNsd1uhuIcfo0e1ICz/L/HllH3DwA+gpW1zP0KGdjASSZGMj9A5ncFqn
      a9IsFY1k2/YzMBZFSQfobx3AWl6IqbIZqXMfPd4QSiZE37kebJVFkPQRTupxlpQhRrvoTTTQ
      UDW5Ps14BRCMVgoqrHT0RqlcW4CAFltFIfEOL8WNZWhEEN0NND8Spu3gSxw5ZMDoqaVm7Wp0
      2SA97+4hGkshGguZ+3A1kkZH1ap1XDm+lRN982jYuBmbVQtoEbNjdL71PKmMjKS1Mf/xx7GZ
      QC1fRE31IGd+/m8ULn2Aec21CAKYq5YzZ967XHzlh0iWIpq+8DUyfe2M+eKUF+fPAoKpmPmP
      fZ6eo/s5+cIuRHMx1RsexKYzYbJnEMmb3Q12F1qtDtf8ZXh37uPYKx0UNpVhc9iRRNBYHBhM
      eWWvoLNgtOQ9mwSNEaM1C6KEvrSR3NW3OHo6jGSvomHjKowOHY2PfppLe3dx9OIudM4yKldu
      wK43YLRP7ocFRJKDp+k8+DZyDiyL7sNlhKD3MsO+akoa5pAYbmegr4iGZfM/4GD7MBFlpHeU
      tpN/R8+2/BNBmsOn/vfncN80/SQbNJsIElfaeOGIjuan/5hFNWtYs2wXJ57/axKYqV37GBWF
      FrJDJ9hzOMF9X9iIqbCBFRv9nHz17zmc1lG18lMsr7GhE0yseGiMk2/8IyeSGsoW38/qOjtq
      MkrH2z9j11gUU2kTLQ8/gGWKjM6yQT8G+FizQXMxOg7sQK3ZzPwa5+1fuAPMskFnce9DNFC+
      /EH0prsT/W5WAGZxT0MQNZitH64fwFTcw7qFWczi7mNWAGbxicasAMziE40ZnwGiPacZHc4T
      lwRRh6WsjoLyQqQPk6SSDjPc0YO1vgXLBw8fehuoZAIDDHf1IAtm3HULsDmMk1ybXJSx9nb0
      VUuxWwTkmI+RzjYMVStxu3QoiQAjXcO4mxvRTwlamY2OMNZ1lVQajCVzKK4oQhQhMdzOaN8o
      grGAwnn1mIyaKbweldTYVUa6h8ihwVRcQ2F5Mdpb3X91jyIbG6HnfCvheArJ7KGqaSFu+/sz
      YVU5xXjneeK2RqpLrx1wI3TtO4o/PWF1sVWwaGkTBt0Nw1TNEeq9QiDnprKuFA352LXhwcv0
      dg6gmIuZ09yE3awjzy6OMHTlPMNjMQwFc2lcMu/6wJ9xTwfO7WVwMIrR6UYvhWh/55d4vbEP
      N+RHYoyuXdvvakxNNTlE2ztvEZEtiKkeWnfuI56YwjgUkowe2U5fbwhVVUl4L9N94C0620ZQ
      UUmNdXD5yMlp0erUzAiXt7zGeBiMFj0xnw9FVsiNX+LC9r2kJBuZwWNc3H+STPZaWSoZ7znO
      v7OHlNaGyawj0N5KJJqA1DBtW19kZDpR9h6FyvjlE/gyOmxuD2K0gz1b97wvf0nNhji35ccc
      eO0FznVMuYci1s2FC2NYPcU4PcU4nXZEYfoMq2QitL/7Ijvf3Err0fbr5SRHTnNkxxkEixNl
      9Ax73z5MVgVVztKxbwudgynsbif4RolOye8OtEAajEXVFDc0IzGfaMf3CQz7KXLE8A8kcJU7
      CHb1Y57XgFlK4e/uJBbNYiiqpaiyCEHNERtqJzASQkGDqawOT6krzyMZ72W834uc8JNKZYEs
      sd42EqZaPB4zydEORn0iFY1zkIgyemUAa20DQuQqvkEfsiyg91RTVFFAavgqUbWQogo3gpwm
      1NuJ6pqD05nnJsqhYfzjIgs+uxhnzsrA5V2kk2ks14JlSW48NU46+vrILbARHw9TsGg54b5u
      UqsqSPj70LirmYyvlCN4cjsR5ypWbVjCdZaFmmTw1AHkio3UL29EDjoYf2kbgXAzJQUWIEeo
      p5WoqZ4VSxcjAKXNeWZr4MoZBlvPE9FXkSp0U7Kk4R6ONidQsuIzlEz8p2ZKGP+HPYSAwlu8
      kRruxbLyWR6o2jqFDQpZ7wBS02oaF8+9ZWmZdABNyUYeWODl7O5rlHcF78kDlDz8XRZVakFu
      QP3Xf6Hdt5566RJ940WsfeYhLDcZ7Xew1qqoioycSRJuO4Qv5qKw0kM22M6VPQfpP7iFS4fO
      Eo0GGTz4Blc7/Wh0GQb3vUZPlx8llyU02IeiMSAkBrny5laCKVCSg7S+sZVAVEGr106EIhRI
      9R7myokucioEruzm0tZ9RHIyqr+NS/tPk1IEIgNdZNAhKVG6t7/GsD9JbqyVy3uPk1JUcokA
      nft2EU1M3oKoKZhLSVGcvpOXCHZeQiyoxzgtop2EvbSMlG+QdEYhFo9hrmzEkOsjlYDUaAhT
      sQeubWTUBMGBMdS0lwu/+CcOv/gCvVdHULJJYv4QlsK8Y45Gb8aozRCOZq6XY3J7ULyn6e4c
      JpeTJ+7kFZD0BkRJRGO0oDMZ7vmDmqqqKLkMqcgwF3fsRWls5P1MVsbKFurKne8JHR/2jzK0
      90e88Jf/ldd//At6RyIoN9hpDdZq5iysQjONbSegqgqimL/XWBVtlNZoGR+OkepvJaikOPaT
      7/PiX/0lu/ddQJ6S5x2sACl8p7Zzsv8oKlpcTcuxmTWQASU0QK7oOTY9UknWf5ljnXGanlmP
      22XEpQtz/PgxiisfobBuAf6hUbImM1LkDMFxkLx7iNqWsGb9OgzhTroPnwc0uBsXkvvlJWKp
      eqIBqKoXGPOmEMba0VQ1YTMLqPMWo/QNklG1aJUR/MNZyhtXYD7xEsMDGyhSu8iYailwT+qR
      5UwWvbuA/iM/Y6xgNZu/upJEXydUzsM0Ma1rKusx7N1PMhIjHU3gdM4h5TpMMhojFIrgqiu4
      Pv7Jpkgkkujn1tO8+hFyo2c5+frL6J9+ipycux4wTAAEIYecvdb5Ipb5D7Ja68tTfEAAACAA
      SURBVKDj2Ot4D0k4F6xj7qJ52MtrMJvNOOe2UDoZr/fehZzlytv/zIX2IPbqJdTOL/1ADNaC
      1b/Nd1YDyIS6jrL7lZfQP/dVShy3u8dYoGzRana98zzpuZXoRIVA5xiqSyYVC5IRSln6zHex
      62K0vvovHLxUzcam/Ji4g8nFiGfFp1n13LdZ/fSTCL37uHp5EAUQLOWU1eVnOkWOoChGNJoJ
      hwOTAZIRMuEBLm3dRiCUQtLp0Ej5olORIBqLFemGmggF87BKwyR8XSQzdZQvKCLk7SM4EMJV
      U4NGCdL55i8ZGgojaLRoNBOHS0MpZVU2xnt6CPV3Y6ycj/4alVLNEri4h8FQKcuf+SwOxhm5
      dIL2s51M9TgRdaUYTXHiwS7SiVL0Fg1Gi4NkpJdERMJit08m1+gxmoxIRitajYSxsAqXNUbA
      r6LT6lHlHCoTs6SsR3c9YquKqgpYalew5NnfpmXjCsInt9E/cDcvmb47EDQ6Fnzm93n2D/8L
      a1aVMbR7ByOp2783HWp+9lYBJBy1C6mx6AmlZpaRsWo16x5agcWoR28vxuU0YrZZMNoLsBZV
      YbfoEfVuGjcuI9yTH7fwQdSgAogaHYIqk8tk82xGjRZxInCR1liOyRAk4AuiyklCXf3oSuei
      SfcTUzxULVuNp7Lk+k3fpsJSsqODJJNZspkkcm7COVEswO3RMXJ8H+mqeuy1DWhaj9IbsFFS
      bYbkCAG/hvKV6ymZW41ed23O0eBuWUGuZw/9bSlKGuZMaqrUHMlQAMHkxFq9gvomidOv7sPZ
      3IJRNykBgmTEaTfju3iKTEktRq2A2WkjduUECc0czI4pWybRRklLA+ELhwjF0mSjAWIpK/ZC
      J555tQSvnCKRyhEbuUpYcFDouOaPKpMY7Sc8HkEVtJgKijDqRXKyDJIWSRLIJBN51usdf6Tf
      JFIE+gaIJTMgajA7C9BmA8TuWAAy+LvaGPOFkRWVVGCY8ayMWTszT20lE0NyzmH+ijWUu5KM
      xhfRMEeHYe5SdK3v0jsWQ80lGG3rw1hacH3g38EWKMnYibc42nsIQc6imhtoXFCJFBuelkoy
      e5i3ehHth3+F96AChmLmP9iE0RDAJh7m7Es/xjWn5PqtLuZ56yi8+AvO/GwAZ7GDdHbyc1tL
      3LRtPc281R4EnYo2d4mYeTNWrQakcjxFSS69/ANcNRXkMsr1g6LeWYVd+xZe3ToKnFMWY1GP
      p+U+xt7Zx9HnT6K3uVn06XXErpwiVF3OxDkZQZSwFNvo2HGc8me/ggQY7XbCV9+B+q9jnKai
      FTDPXU9N3zZaX/khiBKWxnUUuUxorBspHfgVp1/8AQICxSsfwWqafFmOeOk6uYOMLKMqKtri
      ZVSUu0CvUrloHq3b/4WQp5mmpx/AzL0KhWjPKU5vu0ImJSPozLjr1lNpv1X6DEOHt3DoWDvp
      QA9juTaiJ0ws+NzvUy6HOLdtB+OhCEhWSpfdT7HdhBpq5/AhP4sfW0Pu8ju8/fYpcslx/CMK
      3sAp6tY9zcLqJMdf28Z4NI3WWkbj5k9jF0E1zWHhmiucefnvOJ4TMZc0s2HdZADdGbNBVUVG
      mYjSLACIIoIgAgqqok7htOeXMVWR8wfa6+lUUCZ4/6IIqoogSvnnaj6P6/tlUUIQyM9+ioIg
      SQiCMLGdEBFEYcrvKlzLXxARRQElNU7blpeRFj/DvPqC6feVqVPqIeTzUhXlepkTqfI30Uwt
      W83XBUHKl39Dn6mqknfgFoSJMH4CgqBOqePEc+Hau9f6SZnwAiKftzDRtqn5SdL7+gR/tGzQ
      fF8pSj4KtkC+vjeqL6ellxVkVZl294IoaSa+6YQyABFREkFJ0b3/DSIlm2hpKAJFRp7qKC+A
      KF4bHzIKKoIgIk4bj/kyFUAUxeu7lTtigwqi9J59+kTVEW44kQsCCNKNWQtw0w8pTAyqm5Up
      TosJKUiaae8L4k3eC13l7I69ZM3zaa5yvKc8QXhvPd4bek/ID/KpZQsiws07YPL39xiwhJvX
      8dpvws3Kfr/87kXk+0qacezOvIBobnFMvnHcqAg4GjdQ4S6cmHglNOIt3tVobrKnF/KTika8
      6X7/48cGtVWz6LNfRZAmzyWz+PcLQTLgLi65fcIPiI+fAIgSGt0970Y+i3sEs1PkLD7RmBWA
      WXyiMeMtUMo/QDScV+4KGiOWomIMeg2ZoJeEYsbmsn+wW9FVlWw8QHQ8gGQrweqyIKoK2aif
      sD8EGhO2khJ0MzgQJn0DyIZCzBNXcOaiY8TSemzumdVNSfgJRwVsha5bHPg/GHIxH+HxEIqS
      93DSOz2YbSZEIUvUO4poL8Jsvmv0198Y1GwEb88YtrIKrOb3Zy+pSpa4b4i0ofi9zFE5wWjv
      EFp3GU6H6b2KE1UhERghIZtxeeyIQGLsKmP+ySgfgiBhL6/DblKJjAwSiSRQBC3mwlLcLutk
      ULWZNm70wM85u+cwvr5OBo+9xYVdh4hnwHfsFc7sP8sNAbxmDFWV8R57k/O//CfOHe5ERiUb
      7OXy1l8y0NXJwKEtXD7eTka5fV4Du39K5+Wh69q1WOu7nNl/hswM65btO8SJdw6R/NAChU7U
      o30Xx7e8w2jfVUZaj3D+jTcJhFOAn7ZXfkpX5/iHW+BHApmxk6+z7YVXaO+5TXvkBJ17fsnu
      H/8NB8+M3vCjQqhtL7teeYEzp3u58bMruST9x99k18s/5tD2M1xjeSXH+xjoaJv4u8jJl39I
      x2gOOdzJ6T1H6Llymb6Lxzj6y5fxTqGD3sEhWI+9binz1jchpPs49aNXGBlaQvmyJ9BmLGjE
      /AV3Cf8YqWQWjcmBxeVEUFPE/GGMdgeZoA+shZivzw4qmeGTeMecVMyvYEgFVPC3HiBsbmLt
      /fdBspMj//Y243OqKSk2vq8+/JZQZVLBMWStC7NFj5IOE4vkMLvciEKWZMBHMpFGDkQBG6gq
      uUSYeDCErIhobW4sdnM+n8AoyXga0WjH4nQgiTJJ/xiq3o6SCJDNSZgKPOgN2ml11RfOp27T
      Q2gzQbq2/BvdrcMU3FdO3ROfR3A6kRMB4kkRi9OBKCqkA6PkdC5M77mc/B6EqhLvP80Zr5vl
      K7W35QEl+1tJFC9n+Zoop29oXXq8m7NXUixc3UjgJhNXOj5IJFPB4s0W2o9PPnc3bmZdI4BK
      dryV3XEbjdUGJOaw5qk6dAYtgppl6N1/oL0nQtnCO+YC5SEIApLehCQqyFmZROchWo9fIidn
      Cbcd4fL+Q4y0XaDj3dfp7/WTjQ9y5tWXGDq7hxMvvUj/lGjQamqc7oNnca/egPX6Rb8q0UEf
      looSREFAMs/BagoRCf4aYVrkBIN7XuDKxfxskxo6xqk3dpJIyUSvHuXctrcYarvEuDfPTVeV
      LP37X6Xt+AlGrpyl6/gFsqik+o5z7q13GLzSSteuX9F+oQ8yAbq2/pBzB88w1tVG955XaD3R
      jnKLFUvUaNHqNBNRj9MMHdxCb2+Q9Og5zryxg3hShlyQzq3P09sf/+Bt/g1CycVpP3OZ2qUr
      MWpuL67GmhW0NM3Far5RuHP0nz2Cfe4q3LabO9QY7XU0rV+Mw268+eBVcgxc7sTduACLJCBI
      BgxGHYKSxd91hg6fnbqqyQgTd7ACyGTCPkKDPSS6T5Aw1TKn3A4Tq52SDNN75gLmho2UFNmJ
      deyn79wlCjaVQsaH39fCkue+jclqAfJbH/+lI/j181lZZSfYM1lSNpVCkIQJk7OEqObIZSdd
      LNKhERLxDJLejrnAPjnj5KIMHXyV2KV8GVn/ENROv7l+KtRMgv7jp7Au/RwLmqvIXNnKwAlA
      kYn4fNia1lNTX4EAaDI+Ovbsx7bmOzTMs5HoOcKJ3Qeonv8QANbKZmoWOLDrRmjtHUNRmHaO
      UJJBwkP9KONdDPmM1K6efmWnrrABs3iZSCSGkV78SQ/Ntc5/B7N/Fv+FPcQ8a2iucNDZ8UHz
      kYl2HKBfbWRtUymhix8sm1xinKHRGPMWlk88kRm9sINDbx0la6+kfuU6iqyTvXoHApAj7u1i
      SB9DZ65k0VNLsJtErnEX5WyaxPgAyd42FJ8ecFI6rwxJUAEbJctasLsmCSJqNkzfkSOkbQ1c
      2f4aiV4v0cxRetsL0RqNJGU1byoXZBRBg34KKSrhvcJQfwS9q56qqQKgsVK27mkWrZyDCISO
      vsAZ761bpMhZ4rEkxS4b4gQFAUCQdFQtX0PvpeNc6DqJqXIJjQ16whGByhI7ogh6qwspFCA+
      QQ/R6I2IopCnc9yEvZYND9K//5cMdkVo+MLvUuyxwhTfJMlop8Ctwzc4jl7tRiqfj8Nwzw9/
      cv4ODrx5BGmun729BxnvvoxsG0fSf5HmuveLET0dcnyUY2/vIWSv4MArF4mPtONPtqN1GFmz
      tGaGuagE2/cie9bjdlwbLxJFCx/lc80PExvuon3fTs5YillVnw+4e0dnAGfDahZsaL7pHk/S
      6jCanWjqVtLYVImg5shlZZT0IOj0aG8w+QsaK/Of+X1yE/u8QLaTeLIeT5mL1LgHb+8g8uJa
      iLcTTbgock1GCHY2bsLZOPOaI+TN4YosoyoyuXR6IianhF6rIRFLoKoO5EwW0KEKKqaKpSyo
      XkbKe5Gz23bim/9FHHaVsDdEmdVOKuwjZ3djmaHqS1/cTNNTqync+3N6zp+guPRh7FPC3Qii
      gcK5lfSfa0WnD1PQuBYRkBMhEmkBk92GmoqQTKqY3Y57Rn8t2qrZ9M3fzZMb1RzdYopM0XIq
      i+8skJVocLPiS98ilc7vHcfbVHrDVdTVvvfm91tBSfRx+bxAw5cqrw9sORkhpeoxGnVYimuZ
      N9fC9t5xVty5ANymAUY71auXc/HQVs4PVKHTSRhL6im+xQ5EELWYPZM/pq1GNKILk9WIacF6
      XP3bObc9AEEvtuUPU1D4AQ/AAKIOe0U1/ef3ciVTiZAcRsGOqDNRsbSR1kPvkBuqRh8dASpR
      5TiDh3cQV/QI2QiCqxyjuZDazZs4d+CXXOgtIBv0UbziQYx3QLcQ9FbK1z9FcutPOPeugaWP
      LZ/aIZgr6zHseIkBZwnLivKRNSPnXuXwBR3rvvJlUhe2cuKAwgPf+9otL5/4TUPUmXGVTnBV
      lRx+l4uMpwy79VZq0CzjrYe5eGWA1NB5+jNR9ozYqV73NLUllVzbI6h+N+NSCS6nGTU2QGtr
      hLpVC5B7T3D8RDvp6ABDXTmyvxyjsnkD8+YVMHruPMxvocgw+U2Sg2c5dLwHrU5CUHMkYhmW
      P151fQKZMRs0Exojq7FiskwfiLl4gGRWi9luRVDzGpV0KougMWB0uNBqFeKBMEaHG4321vqB
      bNRHWjFjtpsQVIVcPEQ0HAXJgKXQc8M9UTdHKjiConNinDhcTdbNAtkEMX8ARdCiN+nIZQRM
      LgeikiYe8JPNCeiNWnKKDrPTihwLkIwlUFQBrdWN2WYCVSEdHCOZSCMabJidDiQhRyo4DuYi
      jAYxX2ZGi8Vhvb6lkhNBEikJs8uGqKrkEiESsRxGt5NcxA8GF0aTNu+vMD5GRjBicTmQRIFc
      bJx4SsTidKKkgiRiKtYi97QV4J6JDaqqpKJBFK0Fk/FWdg2FVGCUQCg27amluBabaXJ8ZBMh
      0rIBs0XEe/h1ropLWLOmDjU6hs8XnvKmiNFVgsNuIB0Jo+rNGA2TZau5FGHfGMlUGlXQYLAX
      4nRaEMizQWeD434McM8IwF2Amovj7R/BVVqN0fDhcrxmg+PO4p6HoDFTVjvnruV/r5ylZjGL
      jwSzAjCLTzRmBWAWn2jM/AygqqhK3iKrqvnIEJJWRE5nEDR6pNtoaZRcGlkR0Wi13NJd9NeA
      KmfJ5VQ0et2vaT1VUeXcZMQLSYtGq7l+h9et3lGyaXK5vG+xpNXdxG/4WmCxLMqED7Wo1U34
      rv5aFf7Ioao5MonUJHFN1GI03oYNqirImTSqqL9+4+c1G00uT5tFqzMgSdP7R1XzaWRZQUVE
      o9ej0UigKuTSqYnnAhqdIa91VFVy6cT162tBQGc0X7fSz1gAcokxBo7sY9QXRxBFjAULmPdA
      Ka3//DMcj/8H5ta+v+EjePR5TveWsvaZT3Mz5q+aGsN7NYC7bj6GD8AMTnft4tDuOCu/83l+
      nbtE5Pg4/Ye3MzSaQasREUweataup9CqMtLZg2XeovcE7lXiXlq3vkFM1qHmFApXfJq5DWXT
      PpycCjN8ci9Dg35QRQRRj2PBamoX1DID+sw9jWzoFC//xRaMVW4EQKxYzeeevO/WLyhpvOcO
      0rr/TZItf8CTm6oAlVjfSY7sPUEsnkIVJMxVK1j/0GrM+slhmhy7yNE3DxJOpFBUAXPpAlY/
      9gjGxBUOv76HUDL/3FAwlzWffRKHlOLov36PvnQlRi0IooPVX/8m10wXMxQAleC5XQwEHCx+
      8nNYDJAOxdAwwb9WFeRsBhUBUaNBREXOyXkHZyWHKkhYGx9kUaUevSYfKUGR5XwwBFFClARy
      4U4u7zpPS1ENWocGUSOBIl9PJ2omZmFVRpEBIR+NQJA0eQrCtb6Vc+RkZSLf/OyhyPl8EMR8
      PoAq50CUQJVRVRFJIwEK8b7TdPZJrHvu6xi0KsmgH8GoQ4l20/HuW1QWz8dgl5A00vVVIXH1
      MD55LquffYBk62tcPHOR6roSdNfvMlYJXdjF1UGJhY9+GYfNkLdQpkFERcndUBdJRFEm6yxp
      brcCfbRQxkZwPfItHr2/dkZ76mTvGXojBqrqqumYsnPQOWtZ+flmbBYTSmqYIy+8w0h4EXM8
      kyZznaWcxU98HbvLAtkoV7b+gI6B9SwtL6blM1/D7rYg5BJ0vvnPXO6JsaomjmhdzqPfeA73
      Tfh1MxSAMAOtfRRvfBiLKU/zNbicQAI1lybYcZzYmX78wyHKH/oq9RVRTvz4JdzrniB4bDu6
      hU9SZ7nI+XN61j79ELGz2+ho86LRGtDa5jJ/XQ29B44QHRvl0tafUjB3LfPW1eDd9Tre4Qgo
      ApriBpofWAedb7L3nWEqFrqJ9A+j2Oax5DMPIgG55CiDR7cT6+ommitg2TNPYWWcjj07CUbS
      oKg4mh+grsFD12s/JDFnI4buvQzrV/LAU+vyTRUlSIeJRhLoCyyY3EWoikzf7rcJjo+Q2fpT
      hp1zWPLE5usBcg2eGsTQSYLjqyCSwOypmSaUEGbgfCeetd/AYc8bEjUmOxYTkA5x6eUfkZm/
      GW3HbkYt97F+Yymde/cQjGcQciquJY8yt6mSezVIRKC/k7hPx7m93RjdFVTMm4PFcOuhZaxd
      zdpaiJ6+Std1wquA3uFBj4qSSxPxDpKyFWC/waCmMRfgMoOaSxMe7SMkO6koMCIZzbiMoMoZ
      ImP9+NNWSj0m1PQVhnvDaI++y6DRQfHcRooKLJP5zayJUTJxDTrjTegIgoSxdAENTWsZ2v4T
      BvrHqa/Qo2aTjPeNULb+SQrKyxF68/Q+Vc7gu9pHwaqnqZ9XSMoXRuP00LB5PSPDZ2l+6lu4
      7ZAd3EdXF7R85bdwSD4uv/Rz+voWUwVIRhfl6z6HLTvM+ZdeZHBoLVWAqDHjWfQA9c3jnH7+
      JcLJKNmu/URMi1j2aDM53yXO7DpEovJxQCV69TKWhodZWnnNkCRiqVrK/AWjXHz5B5jL66nb
      8AAuh57qdU8w0PUq1U99i4ppQZ9UJE8TJc4dXHjpn3FUtzB/43xEIR/6MD9xx8jERWwmE2oy
      yNV9rzHsTWNvWMf8lop8XbqvULzgEZZUlDB+ficJx2JWPN5EbuwMZ3YcpLjmWRzWe9PZ3974
      KE0DQUDG37qLzr4Ajz2++gNpWPr2/ogDR66iL2ph6YP343yPZ1magSNvcmTfOVRnNYseeJRy
      hwhk8Z56h8PvniBnr6Rp86NUuUSEdBUtD6XJAOlQFwdfuszGb36NgmtxYGdWLT2SVkHOThwM
      p/wiSBoMVlv+sCKJ+UBPgCoaKGxaS2Vt3qXtWsh/QaOnpLmB9iNvcOZqBa7qJiqL3kt4iva2
      IZUuw27To6EAV7Ge7j4vVSUgakxoDRokgwOnU4dvJARuELUWDFYDQkTMb3NySULeQcb7vJwc
      Opov31GLJKpAFkPNKuqX1E0rVzS6qNz0ZcrvSxK8fJAzP/47qh/7OnW34mTJSby7X8BvXsUc
      exfjGidq/16OdlpZ/OQG8tZ9LZJGJZfNIhidzH3kGxQce4HTgz7mLaoAshhr1zBvcQ1kYrR5
      rzIyMki670j+I3nqkAQFPlDI2bsPc9kCFlyjdS2dw66/epvhx1dzayL6rVG16Zt8ZV2G0Sv7
      ObFjG4annqXMbZqSQk/Fmqf4wsrH8Hee4vTeLYjWr1NfbKR02Wf4/JJPEbx6htN7tiDavsGC
      Mg91q659PJWy3X/DqfNBPrXCBcxYANy4yzSM9fdTVeOY0VIsSiJ64038OQUN7oUPsXxugNDV
      c1ze8xr6kj+i+IZkBpuDXE+YrAJaMqRjaYye6fH21HSaeDyLyWnhppAktHojtsb1rHlk0WRd
      MlFAh95846ZQvR5pTtSacDVvprb9Aj5fkLr/n733jK4jS89zn6qTc8A5OAAOciZAEgQJ5tyB
      nXtGmqgZ9YxGki1Llq2ra2tZtpZ1x3+kJS9Z19KyxtfLntH09PTMdM6JTXaTBHMAA4icczg4
      ASenqro/DkgAbJANznSru4d418IP1Km9a1fV/vauvb/3e7/82zyqZJCpQT+eJ75DpaOB6LP/
      h3N9+Wz6xlMsUluc5BXrmBwapKJy8wq8piVtEUU0eiOOpkPsvq9x5Wt+rpAlkxbQLJWiUat+
      JVMV1FoK1u+lvu8ZJuZitxjAwjkqHa763WwJDXCuZ5ragoqcuJ6oxVmzgx2RAd7vnKDWXYZa
      u3xnULVEW32VBqDCu+8JQm++T+epCHaLQDqkouhA8ccXvQVyJsHw6TfIGsvRChIagxmVCgRz
      OQ5dK+OXWpGq6nCuf5D8tp/Rd0yNRQwymShmw3o3DEEmMsHU1UsoU53MqepoqbDAyAoXE4wU
      Nu9i4q3DXPkwSp5DQyIpUFJ3O365TKjrBIO9EfIqihDSQaYjDsrKC8AM3nILYyeOoVSXUlRf
      gVoQwGCnqNbLwKnDaGo9aD2lWH1pwpM+3PmmhQesoWjfEwTeeJv2o2FcBRaSMwlMNutHg/VV
      BgqadzL91ttc1YZxmkWSGZHCmnqGX/4+/uLfYf+hKoZf/B8MJLay66mDd/0OPllE6X39VWZN
      ReTZtMwPXyfRuBXPbc+XiIz1MDbhJz4wij91iQ7tCO76jcSvtjKeVGOzmJATfkb9erZ4TChJ
      P+NjCTw1xQQvvEbHjAZXnhkhE2Gid57ax7wErrzNlVEFt8uCkI0y2T1Lw2NlJPqPcOxyhJKy
      ApTIBIMD+Rz8g8VFter73//+929tYn8gjC+2XN5XbXDiqiyFRJSspMJSXo3VYkFvz8dW6EGn
      VaM22rF6CjHZrOgdBVg9+WgX4hIErQmzuwiby47BbCITjyJhwL1hJ/kFZgTBhL04HzJJRL0D
      o9ONq6IEMRNH0bko2bYTu0VHdq6HkcEkznIXOksxFdu2YTHpEbVGTPlFWPNsqEQVeqcbq8eD
      0VmEy+uBdAJZ0GAvrsDssKKz5WH1FGJYtsgS0NncGA2QTiRQVCa8LXtxe+yIKh3WkjJUmQiS
      aMSa78zpXwpazEUV6FVJMhlw1O+meksdQgb0TuvNkVClt+OqqkCVTZBNZdEW1FHWWIPeoEN7
      oy16DQgCWlsBeV4PciqOImixFVdhsZvQ2/JxeMswW4yoTU5sxaVYHWYK7XY+O+hz95UIkkik
      sZQ107y18Q4qHjLJwDR+/zyCtRiPQ4uUzWJ0V1FQ7EZJhkkmkgg6J7W79uJxGnKde0xHZU0h
      JocLdTpGIp5EUZkp3/YA5UVmdHYXmkzuuKwyUrL1AaqKLejyKnBbJGLhKIKxkMYD+3Cbc+uK
      Z/7ur//LF44Nmuh8lZMnVez8l09wmw+few6/1mzQTJjB7iHyKxuwmFYnlb5afCHZoJqiZhr2
      C5/jnFlr+CQhaKxUbWj61Or/whmA2l6G97Oc8dfwa4XPqWtlDWv458GaAazhnsaaAazhnsaq
      1wByOoyv/QwjnYOkJRFb5Q7q9jVxV8TNTJzw3Dz6/ELuTsI/zNDLzxCu+hpNTYsu2bmTP+b8
      uWksdnPOwdZ0gKqNdeg0qyOOBc7+nN5ADZsfbfnofShZYmPtdJ04TTItozK5KdhykIrqxR1u
      JRWk7/DLzM7GEfR5lO57mOJi53IWaNzHxIVWxoYmQWXEveUhahuW+0iV2CAXnnmJeWMxW7/0
      m9htX6wlviIlGDt/hCsXrxJJaSne9SX276q7Q4EsodEuuj54mfm63+PhXTl/UiYyTdfJ9+jp
      HCaNgaItD7JzdxN6zeI4nY1Oc/2Dt+jtHUMyFNF06EnW1RSAnCU03MblY61M+qJYS3Zz/7cW
      c6vJCR9H//H7BGt/h68/uajGsWoDCF0/Qld7ho2/8T0cFoHopP/jC92K+UHann+f2u/9KUXW
      jz99EQpSPEoms1xvUEqlMa07yI6HtiIHu7n43OuMO/+AygrbqmIC5HScVDK9chbG+CSdb7+H
      +b5/yeYaO2n/GOHUcquN9x1lLFjE9qcOEW/7BV2nL1P4lftQL+E3z11+j9E5D83f/AMMQpJI
      5FbNRIX4WB8xSxUuYRp/MPKFM4Dk+DmujmjY8zt/hl2XITh/Z3Xh5MQ1rl4dQa/VkF7yTuOz
      IwiF23n8/qfQZCZp/dlhphurKXcvEtyn2l5nzrCLJ//kO2QmznD0jffJL3sKW3qa9pPtlB76
      PQ4WmYjPBBY/b5QE4yffIVO4DZM2tawtqzSAKONXe3FveQqHVY8ggKW4CJAI95+n99wVkikB
      U/km6na1II8c5/J5H8U1Zma6hpDttaw/uIOZY68RnJml4+f/gxHPBrY8vmhUJgAAIABJREFU
      XEPPi89h3PF1MlffIJ5/kNqyeTpbL5FOZsGQT9V9j1Bwe7fiAkR0rhoctgzRQIiUaZLeYycJ
      R5PIgpmyg09QWm6g/5VnSJffh2GqlTlVA96FbWUlG2f89FvMZqtpuq8557zKZshksohqEUUG
      vauMW4kTGpMDJT5BMpFBQURnNC4nSil+pjomcG7dQXpukrTagNmVt6wORUowNzCMrXIfroif
      iYFpKstdpEZO0HY+xsYnHsKsTTLy7k8Je5+koVbD0LE3mZmKIhhdlO66/zP2AyQYPnUFT/NX
      Sc+NMq3SY3Pf+YVp3fVsf3gj6fYwviXyp5byFtYvJLeTsip0BuMtrFqJyGyc0gMN6DUi+rKd
      1BWcZHgsRU3yImFbA3WSn8nhAAanBwe5wJv5vgt0pUrYuinDpbHlbVnlGiBIPChistuXRy/F
      xug53kHBA0+x87e+gnbqEmMjAeR0nERoHnPdfWz5ytdguo35uEzNgS/h8JTT+Ft/zM4v70er
      ZEmF/Mx2Xkdyr6estgCVoZCGL/8uu7/3R5Q45hi60reKPLkSqenr+ENarO48VIY8yu7/Jru+
      +wc01OsYONdOFplMZA5f5xUShmrK11eTm1ll5rtPMDqtp3pb4yKHxVJE9Y4mpt57mstvv8v0
      hB/ploZoy3dSoB2i/ZWfMTKhp2Jb4/LIuFSAcDBGdLKfyY7L9B1+gY5zPSwdH+VklLnZFHml
      HhwlpcSGukkooHaWIYQGiIXjyJEJJgfjOEqchK68xZy6mZan/hUNjVb6Tp7js0UE32gCX/9Z
      etvO03HsDY68fYr0HUqIOiN6rfojs7SoymXqzM4Pc+Gt96CqkQLb0gSxKkx2FaPX+0lLMpl4
      mJSkEI8liM+MMDfVT2/beXrOf0DrC88zFVZQMiF6r45S19KCZoXevmoukKBamgozh/TsEL7J
      IaJv/pghZLKxMO6UnEtdaXJjcRgRYglEYSFV6ApQBAFD6SbqNuSjFmWS0yN0v/I2yUyaVHAc
      sWLzilqbOWQIXHmPM1MXUelMFN33dUq8JqTgFOOtbxIKxslGZ0gZrUgAMui99dTuXY9GLTI3
      kCXQcZirA0aqf+uPsSwNVRMNuLc8zPbKOSJTvfS+9kMmmh5ny+4FTUY5zdyFtwgb12FJDpDN
      24k5dpVLb4o0PLJ7gQgnoNKb8TTtp9SrIztzkdMvtxLY0MCNGI90eJhgSCY/FiKjaFDm+/DN
      Zih1unHlqZid9mPUjpByVJHviDHYOcJceI7zYydQMkmy6srVvcJPEaLKTM3ex6m26SDj5+JP
      fsbI/EFqbpsr+HaQCQ1e5Pzxq3h3PUxNlRfNLeFyRdt+k7n3X+fFv/s5WnspdiWNQSWCSoOn
      YQ87d5ehEiR8537OpauDIB3DZ2jAm5xjbsZHLGBgbjaA3XVXbFA3zkKBwPgEZaXWm/GUokqN
      1lbG+m/+C9ymxYaG70LZVxBEzHke1CogE2DgnXfRbf8ezetchNpfpHfwTqU1ODc9xM6HtrNU
      dG7i3FtErAfY9uRGpOFjnDm7MB6p1OidLjQ3eSpqnA33UVkwwciFixS49mJcEF/K5RFWY8gr
      xOAsQCPPc/psJ9wwgMQsw2195H/p31NpGuXCL17gbI+dmieWsED1HqwWmWgggOL1otbpQUoh
      LdG9jw12IBvMBPqvEgKMxiS+/lGKd5XjqiikY3CQgGEMa+VutIKISqfBs+OrbNlZ+jnZwrNT
      UJVicjxJjV2PoDVjNQhkV5HQ5FZI/m4unB2g/vFvU+JegUkMaKxetnzlD9kCkA1y/pmf4Sq2
      YtFVkL4wTpYK1KKIyWmDsRgptRttuJvO090k5waZndfQX1TKht13ZQAaCrftxXf4GCNuHXlW
      gehEGOfGOtyWMwycOIlqUxVKdIKUof72HB2zA7tFZq63H3OFKxcRtRSCiFonEg0HiU7PM3a1
      i5Tl7hmnKrUWORkmMjWM//p1Usk7CCsJWlzNDxF6+Wl6rxaycVsdogBSYIietk7yajdh1MHs
      4Ci2ku2L5bRmHPkWfJ3XcDW6sTj1BEezKJkUMuaFzmmmuKWRa5dbmbVuJz14DXXZZvJujIxy
      kOkBPyX7v0f9ulw8bfhyhvMdXSRbKrGW1iKcPsaIQ0Xl+nzAQuGmBgZb32XUeQiHRWZ+Ov4Z
      rwG0FO/cR/vLz9Oruh9TapBeuYwHbjv6y6TDAcLRBDF/mERimrkJAUOeG//5MwjFWzCk/fgn
      /IAWi8eFljSRSBaTw0JmtpvhKQWHQ8tseyvR0r1stgLqzdjjP+PKRRuV+Qo9p6eofOwRKvI3
      coP7G+o6zNkRIzsOtNxszarZoFqbl/xSB8G+68xN+NAWVuPIL8RVVY7kG8A3MkYSO+4yL1qN
      gGjIw1mUTy6Hu4jVW47e7MRRZGe+v51QVE1eST6gwVJciVEPiAZsRW7m+68RjggUNjVhtuZj
      z7eBLKD3lGG1LtkhkSU0tiLsruU5wAzuArIz/QQDWVy16zDn5eMsyANZwOQpw7Ig3KrIEmpr
      IQ5vIfZ8Bwl/BEuxF7UAgs6ITkwy29OBf2wCTclm6rZuuKlggEqPvbyS9GQHvtFp7BseZcPu
      SmKTEQyFroWRRUDvKsdmSjHT3UPaVM26vS2L23qZGImUHnftohCAymKGlICtoACtxYJOiSI6
      a/BWlqNWi2hcVTjNCfyDfYT8UYzeSmor7n6Q+CShMhdSlA9DbReYiZlovv8gjtsS17L4u87S
      dvYivqgaXWqGyaF+NAV16KUIM/1dTA71L/z5sVWXIfcd4fiFMOWNpajlLDMdZ+jvGUAs3ELL
      jkZ0ahFRa6Ko0kug+wIDg34Kdz1Cfckt8SOKjMrgIC8vx6X5QrJB1/BR/LqzQXsutuGo3Y4n
      75PVxP5CskHXcG9B0Fip33ngU6v/87GOWsMaPiOsGcAa7mmsGcAa7mmsGcAa7mmsWhoxHRxl
      6NQxfL4YakshZbvvo7BwcZspMXaWy2+fRVKrQQBd4VY2PbL9JssyPXuZiy8fQ9JoENV67I17
      qGuuQ1SCdL71PgW7H8flWnB7KwrZ0CDXDx8mmhBwNz1E5cbyZXIiipwh2NXKQFs3aVmLpbKZ
      2h2b0N/0iClMHf8xvb0RxAXPXcHub1JT57r5eyY8xeCxd/H542hsXoq3HcBb7EDOppFZkD/8
      5Z/tvYHkFGdfeJ7+iVyOZRQZSang8f/0u+TdroyikIn7GTj+CoGiJ9m1KccdUqQkYxfe4eLZ
      dpKCjfqDX2bj+lLU4vL3Hug+yakjp0iZqtj55ON43RbIJhi7+C4XT7cj2WvY8ehjFBdYQc4w
      2fYuF1ovExfs1N33JM0bym9um69aGa77pWeRNnydnY9UkPH3M+WPwFIDGO0l49nCjif2oluB
      6iwnAyQENy3f+DYmeYyOF5/mmvI9NjapCI4O49iyhCGTnqXzpefQ7PvX7CxNcuFH/4dx2x9R
      viRvbnLgCJdOzNH8rd/DaUgz195LMptdYgAhZvtmyN/z+6xbt0K6zqyfnpd+TKbx2+x4rJjM
      XC8zwSjgYPbDH9CXPciOR5r4ZMOwfw2hL2THU3/CDgAUkhNtvH/az53Ivpm5Hk6930pmfoS4
      aZGdOd9zktGklwf/1ZPoU6Mc/cVhpry/RUneoms1PtPBmTOjbH/q/8bgP8cHr72D5btfJ3P9
      Va6OeHnwj/4cafQ4h59/lUN/+B30U8c4eSHDA7//51jlKU4//QydBf+R9fm5frLKT6B5YvMi
      VpcLURTR59dRsW6p80UhFgqis1gRlMyCoO3tCDwCamsJxbWFhEdGyax0iqKgKDKyDKLWjs4A
      srLct54MziJaPJgsWgSNmfwtW7AvleROz5NMCOhNJqRsFlmWl7cpHSYak7B4ClGJIgbPOsrr
      iwh1H6P34hD+y29y9sf/8wuTrf3zAEWWGO8bpKCm5o4Dh6B1sPHxp9i+rYal3EFz9T527d+K
      Ra9CbXbgMpnJSMvfe2yiG3PDQdx2I9aq3TTkTTE8nSIwNEvlgd1Y9Frs1XtodI0xMJlBCQfR
      Vm3AYdagthZTXikQnl/sB6ucAQopbXLTfeQ5ss0tuCtqsLssOV0cACTU1gLkoTNceKaVrKLH
      u+sRquq9K3xCKEiJAHPjPozFBSs3QO+h7r4WPnzlRwjri8gWHKCwJG9ZXbaaHZiuvs7lV1OU
      rG/EXVqKTr+EYZgRMRbmM3XsaSYyKQRLOXUPHsLlWHCmGIsobayg650fkmlqoaCmFpvTir3+
      ALUtV9ZmgF8CcmKS8YkMG7aV3/E8tc2Dk6VpwheOa7XkYj9m6T55jLCnjPW3qP4l5/1YKwoW
      PmG0OIvsdAYTOK0wMThJrcuLmJXQWTRMz0XQrj9I4dUXOHV4AIM8z1S4mfurFnvdKg1ATeG+
      b2KsHGSuv4P2l07g2fdN6hoKuSExWrj3GxTuzan2zl18lSsfnqSg9huYl8wxibFrtP0shFol
      o3I2sX5TKSp8t1xLQY7PMnp9FKtHz9DlWfb+X48yf/41fOUPUlacIxCJjlqav/ot/KODTF98
      i4HzZWz+ysNYbwhdmUrZ8NXvASDFp+l55Rn6r9bhOlC/cB09BXt/E0NJH/7Rftqfb8W192us
      21CyukeyhuVQFALt76NUPIbd+MuunBRSgSHOvfE26qpdbG1pQrcCh/nWrwsB8DQ/Sv9rz/F8
      axSNpQCbHELtBSUTJauY0el1aBQTBn+SRFbBqL0bcVxFQdAYcVRuwFG5nsLrr3H2w5N4G762
      kIxCRpYERJWAoNbhLClHPH+FRBrMS6JIDCUb2fyt38a2xKjlFYjj4aELDAc8PPCdB5g6+ixX
      nn8dldnB9h03KlNQFNDaiyhyeCmsq6f9Fz9gqG8PTRtzLD9Flm9miFcZnDi8LmZCweX3pDLg
      qG7CUb0Bd/47nGttpXLDt1b1SNawFArZYBcXe/LY+1TBL60LKkfGOPP2UYru/y41xZYVNyD0
      NheR6WnkyjJE0vgngti2mdHm2Tn4u/9+oaIY7b/4X6iKnUye+J8oW/4d29bl+k7i6k958/gw
      X3swR5Fb3RogMUbvsTOE5hPI2Tjz0z5Uee4lcbRBRo5+wKwvipSJMXn9KipPHbYVEhKsBiqt
      ESE8QySjw924nnjvJSStdUl0UJbg9VaGe8bJSDLpqJ9YRIPJtmjPmenr9Jy7TDwpkYlMMdk7
      i7tqyegeHqP71BnmIylkKU1kZhqVLUdi01vtpIKzZNISsvRL8HrvNSgy0z0DWGpql834dwcJ
      X9tJxMaHqb5N5wcwe+uJdH3AbDDOfH8rnQEv5QVqMqERxseDZLNpJi8dZkRsotINlvwiJtvO
      Ek5kycam6WobxFW4uD+1OjKcnMJ37SQjnX0k0wp6TyP1+3dgMt5Q3ZVJTHXRd/I04WgWY2ku
      NNJo0CwGz/iu0nUpSM2BAznm542qs0G63/0Az46HyXOZyCk0JwleP033pW4we1n3wH6SPSeQ
      yh+luEADKGTDEwy2HmfOFwKtDc+mvZTXl6JaMBJFSjJ3vZXBK31kRSP5zQeoWFeG+saqS07i
      7zrH4OVuUhkZg7eR6p3bsFr0KOkQg4dfYWYuQ+mh36ak6KPqxJ8nfNZkODmbpPfsUZzrD5Fv
      /7hVU5rx1pc4cbobSc7l8xIFgQ1f+zdYBt/l7KVe5Ju9ppA9f/Bt8n1neO+cyKGnHsCoZAn1
      nuHk4eOkzLXsfvIxCvJMSJFJLrz2HENTYey1+9h1/27sZi2KlGbswltcOtNOUrRTtecRWjZX
      IwrCWqb4Xxd81gbwaULJhOk6eQxD7QEqvHelpPCxWGODruHzD7WFun2PIYqfDmlhzQDW8LmG
      IAioVJ9eZpw1LtAa7mmsGcAa7mmsGcAa7mmseg0QaH+P4f5FOUSdvZ6qg5uXq6XJGUL9bfjj
      Dko31KJRpZg9f5TxicUdJUGlo3DHYxTk50oqikx09Aqj7X2kZS3mkgbKm+pWFDG6ASUTx999
      nvHBGdTOKqq3N6NfKjYqJZi9dpqJ4ZmcjpHGTF79Fooqi5YxC391JBg5eRJz/a6FLdx7E7IU
      Z/DEm/QNz6F119O0dxeuj3ECKdkY45c+IOTczYYa55LjCSavHGPOtJmmdSspzClko9N0HD/K
      +GwcZ80eWvY03KSsyJk4XYefJV7yCFs3FiNnIwyeOsLg0DRZ0Uxxy342NJTe3Ghd9QwQ6e8g
      oS+nev9D1O1/iMotdcsEZbORSXrefJZLr77McO/ogi6MBkfDLur2P0Td/kOUlJqZ7RlFNC6W
      zEyd4+LbbVgb91CzfTPa8AjzCYAxzv3gfzEzu1ydAmC+9xid1wKUbtuJ3n+Wa2cHWOauktME
      ey+QcW6mbv9DlNfmM/zui0zNhFd7u6tEkqmr55mf/2gb7x1kmDj6DN2JEjY//BtUOQN88OoH
      K5McFyBFxjnzwtNcPnmcgYlFRpAUneLCqz/h4olj9I+tvA2fjc1y4c03kb1b2fnII5SY4ebT
      V7IEOj6gq2uKmdlZAOTIKCGllKZDX2bb/maCx5/l2uQi8/gudoFE1EYLJmfeiq5uRZJwND2C
      RR+lK7hYRmO2oyHnmJqdHMGwbheuJe7C5EQ/krmCvDIvRhHMnjJI+Bk+eYLZ8T4yR18mULaO
      8q3NGBbMPBMJkNUUYHF7UTwWJuZCK4rHqU12TM48DAawGU4SjaVITncxPpaluMbG+LVOnJse
      xqb2MXrhDOGIjL1uK96qItRynLnuK0wOTyALWtzr91JYmocoyCSnexho6yCrEokkZfIB35UP
      SedtoKjETqT3AlM+A2U7N6GOzTDSNYR3w0ZSk92M9w6SkUSsFVsoaygl0tXKvKqK4lovKiHO
      9PnzCOXb8eR/sgoInx4S+IaT1H5jJx4bYG+hs+00MeB2iXyy8SSlDzxF48jLtMYXZ2QpkaRo
      7zeon36PY/6VZ+ro5HXi1ia2bKxDK4LzZn5dhdRsJ1e6UjTv28hANHdU7Wik5cCNc/KpLn+P
      /lAainJd/y7WABLpeR+hiVGCE6OEA5Flo67GXkJ+meematxHbjo8xGh/ivKm2mUXNZStQ/Rd
      ou/0Reb9QTJZCbRWPOsbMZkcFDbtprShepmcuq2qBYPvIn2X2xgfSlPaVLfijaSCUwTHBhk9
      f4SwoYoij4303ABDFy8weOY4wUAMJT1Lz6vPM6+poHRTI4EzL9HXNQHpOAmslGzdS3ldHr3v
      vITfnyI108nl1w6jr2qhonk9+gXpPik4xPD1QaR0hKnOUQLDJwkGJRKz15nonkbJZkmlRfI3
      7KBiQxkzp15mdCyOqMwzeP4CyaSE7B+kv60HRXdXovOfMcxU7Kyi/8j7jPT10nXqLOqa6jvG
      A+g81RS7LR9JEat1V1Dssd+xU0bHuwn4+jn8g7/i2f/6V7z/3lkSGQU5HaHnYhfebXtwLBPX
      VkhF5pjp6+Dqu89zLd7AlprFweUuZoAsscl+JrQRREBXsB6j07JKC5IJXT+DVLgRV/7ycUHt
      3sz2bxiY6Oym880LqB31rH/sIAa7DbVKh8GZj8m+fDRMhWZROx2MHX4F933fpcDoY/TaNN6G
      2mXS5LGxTiYkE9mkjMnpQFhorJSKYG74JnUlHjIjrUyFzGzdvgGrKJFd5+Ha9V7WNezDYZlk
      7Oo5Mpk0qcQcyXgcpq+QsG+ksrYMQQjd1K40lVaSPjVGZt5FVGulwCYR8fkRfZPovBvQmExY
      nCbGOy6TSKZIJYJEg2GKKzaiP/kKgeA8ltkBKFyP2/b5zAi/MgQ0Zjd6qZe+S5MgCNgq7Z9a
      JF06Hkebv4v7v/l1dIRpf/VpLvfWsU48z7yhlq1lHuIdS0soxH2D9F3qJKGoMJq1SEtadxcG
      oMOxbieN+zfcJdtPQZ4fZKB9iqIHv4JBd+ujETB5G6kprKcs2E/7z3/B4EALjbW3q2+egRNn
      sez4FhUN1+juvM7QbBCh4hDiLQ1zbryf9S0epJiPrleeZri/lnIVqM2FuEo9qARIZjOg1nBD
      LlRUqZEySRJjl7ny/iXK7n8Uiw7iM/0ASMk4Ku1HF3gGZwn6zABzgTm0RhvWAjMzvgn8M3M4
      NpYgh8fpePstrFseptRtQQznVK/VJjfeUiPTPSOkIvPkr9v2K2VZ/2dHaoKL7/dS882v4bXo
      kBOTXHjmTUYaayn/FChUZrcXfdSIVqtGFJyUbaymbWaA/t5zdE1lGDn/Kun5SYJpE1I4zN5H
      D+Co3Mbuiq1kk1ECF1+k9dwYj+3JESM/fU+wIhHsvUxUW8/Gyo8mrogNXySsqiDf68xp8Ssi
      ap0KMKHWJEjGEyiyDgRxQZpdRkpmkCWwVzVjafshw9NOtuwvRBBWGncEFClJKpZBpxZzStOi
      6ub0q/eUYpGuMTkSoKJIw9zAGM6yQ6SjY6Q1+XhKi8jO9JBI5OrS5xWT7eonmtyKQQqSTOdW
      H2qLE6chyljnKI7iZoyODJn+E0RnbNQWOpHjkySyRqpKSzFIMyRjWXSAoDJQsGED/a+dJOV2
      0ehxrnAPn2MIGtRyAL8vSqFZSzrixx/LUPYpTQHm0gYyLx1jbH0RpbYMo9fHsGzaz9YDLdzI
      +xK4+ioX/aUcum8z8YlORhQPRYUOVCqFxHwQxbb43bJqA1CbNISuvsvpgeMAGFybaHxyDzc+
      ToJXXud62yjZiI90NsKFnw5RuO0RKmrszI3MULDtyUXV5CXQ6HXMnnyVwWgKRC3mpkep8BoA
      PVV7Gun/4BlCJVupP7iL3OaRneoH99Fz5lXOXjZgr3+ETTo/c12dOLc2oVEDQm7xHTj7c1qv
      aUBQYa65j4oqF8qoEYNlMXJMZSmn4dF99Jz8BWdSYCrdRt3maoyKFU/Hm5z96dM4qpuwuR2o
      1SLW6h1UT75N27P/G0t5JXqbHY1GBWoL7upCxq7MUdKSj84cR52IIXt3YDMLqLUleEsu0f7y
      01grmjA48xYMXUBb2IjHeISQZQcmyxfp+x/Qumn+0v2cf+dpnn8pgtpaTPUDj1Fw2zX8Ihs0
      EwsQlbv56WktG772p+T7jnLixDVSsSAR6TI/Pa+j/kt/QpNtgA9Pxdj9tQMY3Q1s3efnwnN/
      z6m0jtKth9hWuXzFIWpNGBfCY1UaGHjzJ5yem0cW9ThrWjiwtfDm+19jg37mUJBjU7S//ALm
      /b9HVelttbVvi19rNmg2Su+J95ArDrKu4pOdHdfYoJ8DpEM9XH/xfcR191PqvfvO/2sPUUdx
      y4PoTJ/Os1kzgM8YWns9m3+//uNPvEchiBpM1k9PmmCNC7SGexprBrCGexprBrCGexqrXgOk
      /INM9Y5xI7+bNq+Kotri5U4bKcJMewcJjZOimmq02l/FvmTCw+34p+dRWQtxV1Wi1y3X6owM
      tzE7tUim0phLKNxQucAMjDN7+RqR5KL0nqg14m5oQZucxDc8QjKVRWVw4qqqwWxe9J8rikzS
      N4RvZJKsrEbvLsVT4V2mYraGRShSkqnOi0zNRDEV1VFRW45OfeeHpUhJ5vqvEbOso7zIsuR4
      msBQO2FdFRUlH2UTKYpEbHqAod5BUlkN7nWbKS1yIKAgJecZ77zGbCCOyVNH7YYKVIpMZLKb
      4d4RJEM+FY3rsVsW3/Wqe2i4q5X+3hm0FgcGmwOdUXeLU0sh6+um8+RFBs8fIxROrLbqFSHN
      XObq0UtIejPhjiN0t/V9RBDJ33aEsbEwOluuTXqzYUmbRLQWKwabA4PNhuTrpOt4G2khyVzX
      NWIZNXqLheTIWa4cPkNmSdVSsJMrb7xPXNKj0wuEOs4TiIOiTNP+/EsEgsuzjd/TUCRmzr3I
      pe55DDYzU2df53zb4B1zOyuZea689mOOv/gTrvQGlhwP0/H2T/jw+We42Dm9Ytn45CVOvX2a
      jMaKyZCm880XGZ9XcjToD19laDqFxWYmOz1FFMgG2jn5xmmyehuy7ypHXz+27F2vegaIzvqx
      Vz1C0fp1K7vqlSyB/h501ZtxR68wPR4k32UiExplLiDiLitGrZKIjnaT1JeS59IxP9RFKBhD
      bSvCXVaCbgnjLT7eScpQgXfDZuLCINc7xlG21bH84hqMBRUUNqxfoU167NUN2AE5FaLn8vvk
      bXsSp94Aux650WgytgyTL10mnDlA3oIPKtbfRlxfx6btWzEI4G0C0hFmui4z3nGZrDOPeEkZ
      +dUVy0h69yQSw7R1Gjnwu49hEaGmxMQrr18kta2K20UEJCcHMW/9Bg+WGpaxQVMzI2g3folD
      pRaO+Vcem/XOevZ/Zxt6DYCCKfYPjE1EybN3MhUrZfeX78N4s1fLjJx5H9dD/5bNFVqQ1iP+
      6B/pnHmApoK7EsfNkJj3MXPudU7/0//H5Q/PEU9mllm5konhH5vHUVGGrdBKcGgYSQEpPk7P
      kQ+JxTMoGT9DR95gNqgQ6ztB16VBUKkJXj1M77WRZVc01exA67vI1PAEc/1TOGrKb5LZllwV
      RVFQJAlZknICuCu0Ph3sZ2pWT1mdN1dKUVDkLKngBL0nz6Cr3oh1iQNW5y4iNdrGRP/koqiu
      IKDWahEFEbVOj1qjWZNOh5yQsahCJeTehdrlwR2KEbxDEUNZMzUljo+wQfXFG6gtc9+xU6oM
      VvSa3GdqauY63RMOKkpMJMY7mU/Pc/JHf8Ozf/tfaT3Tg6wIyLKMSqXKvXPRQnGNnpklMQir
      zhPc8L2/pgGQEgGG3v0xZ15NsOcbB7jBbUtHZpkLwzq3A5upCunSNYLJ3Tgd67AbLhIIzGMQ
      h5jLeNlSkWL4J2cQyx5EUBS0BjWDnR1saLmR9VwhmxawOhU6f/I3uO7/t7Q0WPENTuKs8C6J
      Fkswc/5Nzg61IgDG8j2sP7DxFkHbNLMXTqGp2Y5zQWhVycQZPfEiYyMhRGMB3tqyZTOIrvwg
      e75mpO/cq7S2anHVb6VmRxPOqgr0+su4apoouL2v/96CqZT15cfJccBNAAAgAElEQVT54IU3
      8RaaESQfkzMBaj7FSyrpMMNtx+noDLPpya9QaBEZDwVIixVs/9afYlGHuPzcDznj+GO2tuzj
      6uv/hFRfgU5UCHVNIm3+pQJiclAZnJRv3szQG8NEU6BbmOfSs934R4e5/uIPUSsRwoEwc2Nh
      8qoN5HlMzI77MKtH0HprsUhx4ok0woJ2p6FoPevrihYvkgky9P6rUP9VttVeoHukj/HTM8zp
      9+CsWNoaIwXbH2TLvpU+gXKQA/2MjCTwPrEhxxMixxUpf+C7lGYShHtPcvnIaxjz/5D8hXQH
      gqDCWr2LzRUtREYuce21Nxjx1lBderdP616AlpJ930TV2U4wkkJvzcdYlOTT0tJTsnH6W99l
      Muth11cP4VjIG22wu7HryrCYtYjks25PE8f7p1Af2sqBR81MTPgRtFacDhOidXHRvcpPoDD+
      niHiiQyylCQ4Poba7sV4czGdxtczRNmX/oi9v/+v2f0v/pwde8vw9XaRUXS4a+uI9F5hcmye
      /PpyBL0Dp8tKWtLiadxC8foN2J1LXN3pOJFQGr3LjWvrkzgjH3LhfJzqLWV3jBX+COQU01fO
      kM3bhrfUmPtkycYITUyRSmUR1DoMTifqTJyMtFgsMdNPcC6CLGgwFRRh0kEmIwM6VKoM6XQa
      RZG5bQqEewzpaJy8uq2s37EDfTyIceM6HJ/StSJjlxiN5LPtvn04rYsbMabKJuT2D5jwx1Gy
      MXz9E+g9TkhHEWxVrNu+l9JChcn5BtbXLe4CrXIGEIlPXqH/wvtIUhZJtFJ7cCv6m+lappib
      ypK/zYtqQcHLUlFJ8vAgyUQLloJyLNFjTCnFbHM5QNBQfOAh5t58l7M/PYvOZMVc2cJ658K2
      lzGfmj1buPzeDwmYTBi8D7CpPMLI6Q4MD2xisflxZs6/xdnhUwiAwdVE/aM7bjJUs9E5xrum
      KTz0BLobVGklSaDzFDMzfhRZQZbB1vwA+UvemBSZoPfsB0gL6wuxaBu1pSZAT/GGPIbe/THB
      qh3U7dt+M0zzXkZs4iKtR66QkhVMRRvZ8kDjHdZHaSZPv87Jcz2k/YPMZHuIXjTR+Bt/jNt3
      jFOnr5PwjzCTauMXV6zUPvZHNHt8nD7lZ9NjOwn1nef6OT++wVMAiDoLG5/4PeqK6lnf3Mel
      Z/87p2UVluJN7DnoQkkMcPGFV5gLJ1GZC6jZ+wiOJYPoKtmgCoosLyoliyKiKC7y75Xcb4JK
      zc1DC8dEVW7vXpayKIiIqly53OI1u7C1KSCoVMvk7xRFRs5mc7+JKgRBQZFBWJK3S5YyKPKS
      5gsqxCW/K4qMIkmgUi8m81AW7kWWASUXZyCqlihPL5a7tW2Koizcq5S7lkrFiiEI/8z4rNmg
      iiwhZbM5oVuVeqFv3PZsZCmLdIvqtqjWIigSkiQtPy5IDLe+znzBQZobPChS5payAiq1BlHM
      bW7I2SyykgtsUqnEhWMZZEVBEFWoVKqb/fYu2KC5Tqi6NeTq5s8ionr5t4kgiKiWHBPVmlt+
      FxDUtx8+BUFEpVnOjb91F0hUabhT+JQgiAi3tAsh16HvJLe3YrmFNiPc4TncoxBEFepV7wcL
      iCrNR6L3clAjqpZ3SUVKYm/YT0meGwEQblt2QUZRo13WJVY6tvyKa1jD5xiCSk9eQeGnVv8a
      F2gN9zTWDGAN9zTWDGAN9zRWzwYNTJFR2zBZF/bTlSwJ/wwZjROr7eO9ooosEfdNI9rcGPR3
      CPxWFNLhGRKSCavDjCAIJGaHSQg2HC47giCQ9E8iaR0YLYZPgI6gICXDRGb9ZGVQm2yYHbkA
      +DuVSc/PEg1FQWPC7HKj0X40q7yiZEnOzSJpbZhspmW/S4kA8zOBnLiYoEbv9GCyGFCySSJz
      QYx5+blg+88ZFClFeHYKrMXYTLnuoygyicAkAX8YtSWfvPw8NB9DnVXkDLG5SdK6Apy2JUxc
      OUvcP0VS7SLP8dF+pSgy6fAcAZ+fjKzC7CnGYTMioCBnkoRmJonG0mgt+eQX5SGiIGdThGcm
      CUdTqE0uPMXum4viVc8A08efo+PyEg3ObJTRIz/h2sUchyfcc5qh7kW6dCY2Sv/J8ySSuSNK
      Js7A6z9leHzuY68V6nqPC++cX/gvzeBrf8+JN06RlRRAYui9nzA04Lsj43A5JKLDbfRdG/zI
      L3Jshv7DL9N35Tq+/i5GTp1kxheCTIjx0+8xt5I2QHKCjtdeYrizi+HW1+i80Lt8OxaQYj5G
      W9/gzI9+QEfbANItVcRHWjn3/CtM9vQyfe0EV954Dd9ckmxsnMsvPU8o9KuxaT8NSIk52t95
      jiNP/3fa+pZoeob6OPniy3Rfu8Lld16mvWvyYyqK0/fhSxz9p7/lRNsS1qecYOjkaxz9p7/j
      g3MjKxZN+jo4+9obdF27ytDVk5x+9Q188Vx63qGzb3Hp5FmGOq7Qd/YqEXID79iFtzl/4nTu
      +Om2ZfmJf/ldILWZ4r1fxaXxkIn6mb12mjGpEZMFzBYrsYkOBs/0oc3Lw+5xYTQutbWFUXcu
      hCKo0Ds96G8k1BPAlF+FfLGPJGBIj5OUanGq40SzMg5hlnBATaHbhaBIpMIB4pE4qA2YXS40
      apFsPEQsOI+MCq01D506jq/jHAM+D3kOEa2j8Cb/PzHRwfikim2/9zhmNUjJJIpaQ8J3jZGz
      H2LW1iEW6LEuSeqdmWjHFy9gx/2Pogy+z/mzncjb65b5EuKTvaSs68hzXOR2XVmXX031/kcw
      qFMMvfGPDF8fYkPz59ezFh7qQKzaT5PKz9jNo1nGz7yPec9vs32dnfTkJd49fpUN6723TTKe
      GL1O3L2FrTvmubTEYZAY7yJsa6Bld5QLyZXHZrXeReOjX8fuMKESJAbf+UcGRqJY3cOMjGvZ
      8uSXcBhVyOmcPK8UG6S/T6b5N7+Oy6S+efxmfb/00xBSzF16lwnT/TTVZAn5QySyI0z3qPGU
      VxAanSAVD+Dr70CSGtFV5t8sKid8DH54mLBsRcs8CcVLw/37MRtzOjl6mxtD6iyhBGjmhkiW
      b6Y4do1gUMahHicmejA7jaRmO+luvYhospKd96GpOkjD1gJGj7zAbNqJ2SyimL2UVZoJTs2R
      jmSY6tJgX2e/aQBqgwkhMc3MyCyGCg9qgxFFzhKaHCYWSyINtaMJuTAsMQBNwTpM2eeZHfVh
      mJrBUlSPcAu10VKzGwvQc1W8rQEsPEgEtQ6tTk02lUL5HOemdzTsxwFMzSz9hA0xNWCl/CEn
      KhEMRWW4/d0EgJXEzQEMFdvYBEQunUaILTleuplNpRC9eg3hNiEXGmshLgAUMqFxJoJmSj0G
      4oOXCanz6TvyHPMxAU/TPjY2lhAfuoRf62T4wxe4HFFwNe6muWmRUPYJ+AFETKUb8VacIiW1
      sO6+FjSAzepnskekat/D2G1a5NSNiUchMniJSb+OxoPNqKQYPe+/xZxvE+aynO6LypaH05Ek
      NJ1CNzWCpfQ3yIv1MTAdJK4eR/RUYtbDTGsrCWM9dRsrUfztXDt9kcjG+whPBLDtfoSKKgeC
      IKDRayhuqCAwWULjof3LWq8t2kTzw2m6T/yCqbMOvM0H8NZ4cTduw3n+KrYdT1BzS/J4WWXD
      Vaih74V/wFL/IBvvrycZDKGz2xfTsK4CcjJCeHqMeGyIkQkoOlSFmplf4V18FsiS1VkXRc9E
      A2Y9d5RH/1WhSCn8Q5dpa+2geM9jlDpUTAV9RGN2CjbvplwI0XX0Odot/4ai0BzRiAF3y05K
      xSi9R5/nsu1P2FyeY3F+Bo4wmUTIR3wmyFT7RQBM5ZuxLFVEU9twldjpH+lGPaPCud6CJV5O
      8uIgPvUk5pIdaAWITg0Sy2oZFwIIQOH6KrRCHqW7tzDUc5RrPRpsNS1Urq9YuSnkHC2OdfvY
      Ubud6Gg71955lkj62zTV32Z5pCSYPfkCPu1WNh6YZGA0SXLoOH0DFpof34/6Ltat6eAEk+2X
      0BpNVD7y2xQUW8jMf9EMQI0mPU9cArsKkBNEU/Bpua4UKcnEpQ/oHk3R+PhvUeTObcpozQ7y
      qzdRWlWCAJgzYxzvHqUsz4qrehOl1eWIgFMc483rwzSX1y+0/hOCqFIhp7MosoIiAIIagexi
      QMlNCOgtDlRmFRUHn8CkUyGlUzkNu5vQ4KyoIHH4ClN2O1tMIqK5FMPUO0wABZtyzDWjswCd
      UEvdAzvRqhWkZApBlFBV7WJDtURssotrRz/AWfYtRFEFUgZJVhCFBVoDCtlEhExWhc5sxFzS
      QEHRCWaDcRBymenlTAZFUecoFADZKP7RKazbv0lhXTPh4f+Xs6/paf7DP8Sgvbs9KX1hPfUP
      fnlZ4vAvHuwUVkUY6pwjv9FJenwIX56L7Z/S1eKzXfQOZ9n86GM4zYuDpqm0lszb5wk0F+A0
      QDwYRm0xYixvRPn5GeZainCbBOL+eTTWxWw+d2EAKUI95+hKjyBgo3jPhmW/WqrXw5E2Oo9G
      Kdq4nTxrGS73SfqPvU1+7SaKKtwLZ4pYK1soHXiJtpdexJlvQVBbKNjYTF7eIk9bU1yNOHGY
      aN6TGEQBxEL0mn4GZ9fR4Mg1O7/lIFNvHOPa27OYTFrURjfeDSVMnL5ACgHSUdTOAnRaPfry
      BswdJ7h6OImncS/eEhugkJzpoe9iH2qrBUFOEYm4KN1eBHotRetq6Wl9juxQDZX3b8+xTDV2
      vFtbuHb2Ra6Pu8FWR1lDilBPDy775pvs0Llrh5mZSTM3HSaRPE+34KegcRsu9xc1lVKK8bNH
      6RsPEhnsxqd/CXHYTu2Br+LdcYjeF37GB50OsrEE5dsfv8NKJoO/4wzXu8ZITFxjLBPjw1kb
      5bu/jG3+Ktc7hkhMtjMRn+bDwAWKtz9JtWOejo4w1dsbCPWcYWhMQXj3BQBEjYHKnY/izW+m
      qvg5zr70DEa9SDJtZutXvKi1buprOzj/8jOYDCricR3bvl5y99qgqeAksciNlYkOc5EbJRok
      I1oxW/UoUppEYJZkSsGQV4BeryITDRCbj6EyOjDbTCQDPgSLE4Neg5SYJ+IPIStCLpOLzYJq
      WXaNNJHxCWSj66Y/IOkfI54xYM/PQxQFFEUiHfYTD8dRBDU6Wx4Gs5ZMOEA8HENBhdaWh8li
      QEAiEfCRiKfQOQoxmXWAgiJlSIYCJONJFEFEa8nDaDUiCgJyOkrEN4ekGLAWe26OFoqcIjY7
      Szojo7HkYTSJJMNJdA7nTZn1xNwoifiSzU+VBoPTg2HBQqREiFhMwex0sDQHtCwlifnn0Ttc
      q/YD/POwQSWi02OEoourU0FUYfdWY9TKJEPThAJRVGYXTpfjDmshmYR/ikAwumwb21pYiTY9
      RyAQZumOstlTTOzqmwwIzezaXYsUnMDnjy5pgxprQRkWowopHSM0M0MyI2ByFWK3GgAFOR0n
      NDtDIq1gzCvEYcuF6zxYbBXWxHF/DfBZ06E/TSjZGBMjU+R5KzDoP1nH4Jo47ho+9xDUJoqr
      qj+1+lc0gDKbGc3tkn2t4XMFASgyfX59B593rPgJtIY13AsQBOGjSjtrWMO9hNWvARQFWc6S
      SmWQFVBrtGi16k+Ajbmqi5NJpZBV2lyerwVImSTJ9MJOiyCi1elQq8RVt0nKpMgoKnQr3Ici
      Z0mlsmj0elRCLq40lcqiMRpRC7l45FRGQa/T3CY32V3eoaIgZdKkM1kQ1eh0WlSfaFb7TwaK
      otwUChOX3Pftjt+pHhQFZYV6UJRcfPFK968oKCjI8uK1bsSYoyjIyvLjufNBkeWbdS59X6s2
      gGRkgg9feZkLQ0EUlRpP6Q6+8d37707+Iu7j3OUhKlq2ka/7+NMXEeCNv/oLBnb8J/7skUVx
      niu/+C/85dt+NtcWoSTjONffx7d/8xAe0+omtq6X/4Yfjm/l+//uEWy3/JYcPcd/+Mvn+M4P
      /oEWk0LnBz/mr//2DZ760Ws8XCwyeOan/Lf34O//n++i/Rgh2EVEaD/VjnVdC2XO5ZTw1Pww
      z/3vf6JvXiGdUdj8+Hf55t5PU17q7qHIWWLheULBIJq8MjwLiSsUWSIeCREKBBCdZRTaPibP
      mSKTiMwzH/STtXgpcRpuHk9Gw4SCfjLGAkpdH/WZKIrEvH+WSCInsmC0OcmzGXP0CJ+fZEZC
      RsBgdeK2mwCFSGCG+VgGBQGd2UG+03xzwFvlJ5BC99HnODJu5Xt/+uf857/4M77+4Ab05PjZ
      mUyadDpNVpIXZAclMtkskpQlnU6TyeYUFrK+Hn76o2fpCeZGOkWRyWZy3lkpm8mVlyUy6Vx9
      mUwWecGCV4aOun1f5T/+57/kL/7D75K48ConumYX6s3VkV6oAxauIefUJjLZJXv0Sk6pIJOV
      bl7LkF9IlS1C32AcRVGYmYuzcYub7r45FGBuZIz/v70zj7KyONP479vuvvS9tzd632iahoZu
      lEURooh7TDBuuBtH42hMTM4ZB3VMBGKcySTOJHGJiRyjx6i4i3sEFUVUwEADjc2+ydJNr3e/
      3z5/3AtNCxjISTIk9nPO/ae+79apqq/eqreqnnrecEVl7jzii22QG9ENfaAMloVhdPDao4+x
      Yls0V66BIvRvWMKKaBk3zfoR108vZ/GipRzEEzsuoCVjpC0Zr2dwB9dTMVLmoelHgpGOkzAE
      PG4nwkFzr5FJkNBsPG7XIbKJB95RE6RMJ8WlZZQOC2HEo2RMm0ysB9MVpqSsnLLiEEa0n7Rp
      Y+tJ4hmZwpIyykryIRklZQ40/FHOAD28t3g9Ey6fQ1kwK0YULikENNYunM8LH2xAN20cRaO4
      +toLkdY8xY+f2sLXz6yj/U/r6KScW26+jPUv/IFNO3fw5H1zWVw1kR9cPYKHb59D8cW30ffm
      w8SbruPKxg4ee2UFumaQyMicee1NnNP0Z6YLQcQdrqY8pNPdG6V76xaeenohXWmVWExjwiU3
      c8WUCE/OvZ2eMTMJtr/E1tDpnJmTITK1Xl5+5H62BKdx61VTcQB4hjGm3s87bZsxRg2no7uP
      aWefxXMr20ieNo0tW/dSN7Uc0UrT/v4C5i9eh2kZOPNHc8XVFxGOreLReS/ShRO3O8i0Cy4h
      tfo5VuzczvpHf87muiYu+85VVOYGOXdxFa6+19m6pxdHb4KCqjqON/FFpz9MAZDqTaAdlO7w
      hSgAMn2JP8N8zUL2BCn0gB7NkDhI4UR2Byhwgx7XiWuHtwA9nULxFmR3KSUvfncfyYyJotu4
      Q66s2+jwEvT0kkhbyGYC0RfJuc5u8nzQlzLx+rNd/ygNoI9YVGak3zfIV7Z7PuOlP+7m3Fl3
      0uJL8PyvfsmHbVP4GiAqXsaePpNzT+3hZ7PnsjclMOPSb/Ne+3xm3n4PJ0WA+EZs02D96nYm
      nv0vjBvdQFAo55bbziLkkln61Bz++FE7Z41uPkK5siM7lk7X+kWs2OthRm0ZgaJ8Lru5mUhQ
      YcvCR/jl+58yY8pZYGVYv3ot5025lGlNDfS/3wq2TvuiZ1hlNPHdCyYxMIa5GdFQw3PLthO1
      vPR35VMwZhRFb35MvzqOzqhNc1E+6c5NPLV4K1d97w7qQrDg/ntYtPJEpgir2OefwJ0/vAAl
      sYd+sZiSUTNpfXcnI278D2aMGex0+YqamFT5HL+9714a6pu55PIJCLnZ76+xxvhngW3byPJA
      t1VkhaRl43RKdPfH8eb7ES0N1ciKJVuWhew46H1FxjIGrO4oDcCN02WR0bTsB8mlRndsYO2W
      Vez7xVxeyCVOcCqQBtkbJj/oRozKyIKFeaTdVlGi7qRzOX9CEMHW2Ll8IQ/O/xicArHOLchj
      Tv4SF0jjs3ee5sfbFuONlHP1HXMZX+1l77qPefzpt+nTBLToLvoCZ2AAWDI1J3yNc84YgyJA
      m6DT/uF8frvSy8y5/0uhb/AUnt/UgvuVj+hotegqbqYwr55hxU/SuamVjlQ15SUh+ra+z851
      K/jtz+egiALgZ9JJMsWVk6lc8gT//fNdNI5qYspphYerQA46qxb8hmXSBGY0b2O1VYi4603u
      fjzNTbdcyTD/8Xc18v8NAjnxrGzXNUwDQRJwBgsJ9nWz5/M+kJ04bQ4shLPvZ719wzAH3d04
      SgMoprHOwep1GzmnKR9n7nt4fH6CBbVcd/tPGRceWE7s/OAY6iOI5AVzEeTVTt569l2ar5nD
      xWPCbFz8IM+s/rJ/O2k8/XLmfufMQUG4Wxe/itR8NXMuaCGz5kXueiWTq62MN+BHOVB/hZGn
      zOSysbuZ//QLjL31CkoDA00ihuoJOV6g/dMUvvp/xY1COBJmy/JPSJaOIt8HhsOPKzic786+
      h1rvwQZkc+Mds9mxbR3vPvMUj5sRfnTRF5fa+9HDyuU7GHXR9Zw/Msne++7joXkOvn7b3RQN
      df5BkBUHhqpieWVEDDIZG4cvq/bmDxfhDwOWRveeLlxuGVl3YsYymH4FCZN02sQVHvjGR2kA
      MlNnfpstDz3DEy9HqQ2JRDtFTr7kJM6pf5+nH/wN+yY3IqX3IVdOp/ZI2RSUM7FK4r2XXsVo
      aWBC/ReeKx4qytwsWbqEkqiPlQtX0F947Mfg+fnF7Fu/jCWL+9nzp6VEk2OP/LKgMHzqlUxe
      M5tHni9l1rXTcedsWZIi1BVpvLhwK9d9syR76pof5tXH5lN27eXkiWBXjebccYt44H8e5+xT
      hiPEk3hqRjEs3srinRI1hS5EjxevUwZKaGoJsezdV4ikWxjTMprshkmElom1PL/oBd5N1uIv
      qqLQ6qJr507SVU14FUBPs+BX3+NZ85s8Oes0Fv7idl6KT2PunG/lbkj9rWGhplJkdBMtrZKR
      4sSQcXn9oCVJayZ6WkMVEkSRcfkCBwbKwbDRM2lSqo6ZUtGsBFFRxenxI1kZ0hkdI51BMyEa
      1XG4/bgkk7Rq4fI4UdwBhHgXvb0agpEho/gZpgiYaoL+uIakiGjpFLYvD68EiEGc1l56enRk
      WyMpeCk9iLYuzZ49e/bRVN/lL2LM2OHo0V4SmkjF6CYq8wsY3tRExGmQSGu4IrWMGVFKIBCk
      pLyKipJ8FFEiVDiM6qpK/J4Q1SNqINmLLgeprCwhXFhGdVUlQRcguikfXoeQ6sV05HPy9GmM
      rKiguCAPb6iYipoqCg+KZOH05VFWWU1ZxD9o1yBSXktIyqCJebScPJnGETVUFEcIhgqpqq4i
      PxcjyuHLo7SymvJhEapqavFKCsVlxexvH0EQCOcXUlx9AuPHVuAWwR0MEC6qY9L4FiIeEUHx
      UTd6DGEpTTKp4SksZ2R9NfkF+SiZfnrjKuHaCZx9yig8ipPSuno8RgIVNyXlw8jyuySKakZS
      6NSIp23qJpzO1888GaehEYoUZKPQCAKeYAF1w0dQWZSHO1BAZX09lcPy/k63mmwMNYNmmIiK
      C6eU9ccVhxMMFVU3EWQXTjmX7nRzJGENM7czhuzEpWT38CWHE8nSUTUDJAcuJavrKSkO7FQf
      fRkRr9eJJEi4XQ5M00BQ3ISCPmRRQBDFrG6oZeFw+8nzubN7/gg4Xa6sDq3sIpQXOMBUnTNn
      zpwhKsQQjmvYlkEimcbl9qJ8qVTNsUMQhMPToYcwhK8CBEE4PB360GuMQxjCPycOawC6rh+i
      0z6EIfwzYogNOoSvNIYMYAhfaRz1DtrSx37E71ckKAr7svoqJZO5+qazieSe26ZOz56tLH3r
      JT5jLDddcw55DtjTtoiX3ljOvkQaS3DTOPV8vjWt6UB4VUvt44PXnufD1TvRBSeR8tFcevUM
      ihxpdm3tIq+0FN8XNpQzvdt448UXad3RB+5SLrzmCsaWBg4pc9fmd7j/Z38g1XI5P735DI6J
      gPo3gpXcxzOP3s8nW1UuuvUnTKk6Hkp1dLBtC11NE4/FkHwF5OUiUluGSjwaI60Z2IKE2x8g
      6HUdmZZu2+hahmSsH8MVIX+/JpRtkoz1E09pICn4g3l4HANhtyBLQ0/Eotk41aKCPxDE61bA
      MkhE+0lmdGxEXF4/QX9WNFdNRokl0phIePxBAt6B4HpHT4dO6NSfehm3XjzhsB0ptmcNr772
      Kfu2bqajqP6AiK7ojHDutd+nIt9NdMM7/OcDT9MwromWHI+6r+0Nnl9mcOudd1Hj0dmxbj2G
      ATh28NDcR/jG3XOZVD2YFrt12Rssj1dz5503seGlX/DMm600XD/1kHLtWt1KoGUixvZWtsTO
      oPFQG/m7I963iy3xEJMqu1nz2RYmVTUex2KIg2FkksTTJqLAICaroapIngCFYQeYGbq7Ehhe
      1xHrZeop4kktl8/+jGyMTJykoRApCiNoSXrjcZyhwWp7arIfTfBRUOTC1hL09MdwOCMImTgp
      00l+UQTR1on29JB0ufGKGeJJg0B+EYqt0tsbQ3MX4Mz5Pn+1MxRvYQMXXtnIxgW7eeIgwd/i
      4S1AdpTQMjqCy4/zoJbREnFMyYEg2IgOHzUtJ0Lsc+Y/Mp/2zs1E77+H5aNP4dLLz6MoJyDl
      8vtR+7pIaia2IOPP8x1aEbOT1rWdjPjWjfR1Pcjq9g4aTgyy4uV5fKqcys3faEJPdPD4Q7+n
      6ZIbqNE28vKri/k8qhKqPIErLjuPUOxj7n3gQ8ZPaGDNio/pUer4t1k3ULz7bWY908ktt15F
      ub6dh+//A6Ouu43JkQwfvPIkH6ztAE+ESWfOYFpzBfJBp3Rdm1ZhBUfQNCrMk8vXEpvWQMT1
      j+GJyk4PIaeIltBIHZSuePwogoBg21gIg4IdHg6i7CKY58FO9dJ7gJdmk0mZuP1+FFHAdrpw
      JjV0y0I+EM/NxtQt3IEc69PpxaskSWsWHkCUpazoGRKyJGDbYKkpcAdwSiICLgKuOEnVwpk7
      7j+Gls+w4ZO3eGzePObNm8eL77SRGdQ4XgJ+96E8biND25IF/O7hB7j/2U+ZeNHFjDwoJHBB
      8xmM9W7m979+kBfe/oS90QwEypl5w0xGFtVx1ffu4vvXDXFVDvYAAAZ4SURBVHR+gLLRU6jX
      W/n1w4+ydN8wZpzaeEgQtPTOdWxMDqOhrpamkRHa135GCicVZYVsbl1NDEh1rmZzn5d8h8br
      r7xNxenXMvuuH9KkfcKzH36OaaTZvasLT90U/v2271DW9xHLdgJ6kn3dUQwbMHX6urtIGQZ7
      lj3H4p5avnvn3dx4fiOLX3+N7tTBKplp2tdsZtiIekqGNyHu+4zOaIp/FOyPpvnFTywIAgI2
      ppGhvz+B7PN+6ayWDbgoMDgjGxMxRyjMcsRkAaxBVEgBSRLIpFUs286yPW0b07KQXT4cVoqe
      nh56enrRJB9eh5Blgyo5N0oQUBRpUJTJY5gBHJTUt3Da9CYcgOIJH93ULSqUjxzP9Pxq1i1b
      yIr3ljCpuYbSnAVKgRqu/cFtdHXsZfl7r/Jfr7/LjT+Z9SXuiknrOwvoLZ9IePtKlMnXIO94
      m9+97eWKi07D6xDB1tjatpZ+TwBr33YMfx6dy9roi59C6cixVLz0BGt2aYTWrCXQeApB5x7W
      fNRGa+cDLHVJqIk4ZcNiGIAnGKa0KIIkxVFEG8OEwzu3SdpXbWRT2zp+uftDLEOl1ywlbQ00
      thXbwqqN/dQ1W/T2mbjVDlbt6qexyHe4DP9hYNs2ejpONKnhDebh+gsDe2RnEHt/ptj2oU3t
      9OWhxfrp7DARJAXZtpEQMPUMhi3j9bkRbZ1UUkUzvUgwKHaDZdmD8jwGAxDxh4uorKo6tsWk
      KBHMLyGYX0JdbYA9d/yMJe0XMnNcIFdPG5cvTHldmPLKEKkfz2bJ2n4aJx8pww7eX7KNE2+Y
      zfiz6njwsQU8s8rBKVfegseRNSo7E6V1bScFAZElixZhaQZiYhebe2KU19YwocHBqlWf4F3d
      TfNlTXilzTgLa7nwllmMrxxgbKq7Fh5LRVEUibqpl3DXVSceZnCw2LduFZ+7Chm2aQmLN1ko
      PoHVK7cw84SyL4v2etzD0pJEUxbBUBjHX0xXEJAlC0238ci5SDDYeL5wF0KUHQTDhdkrrLZB
      f3cvDoeEFo8jeYrwuETAiWSq9KU0Ig4FM61hedyIWKiqieIbaO1jMACLVLSHvbt3owCy4iNS
      GDyQQSbeQ08sQ3csjZrsp2PvXoSIzao3lqPUj6Qq4qF/2wp2U8KkyoFF7fYPn2JpvJaTRpdh
      da1jczqP6dV+QKKkMMPGTeup8tUQDoeypDDyKC+UWb9uDcObg5T6bNZ262CZWDZIAiT69rIh
      4eLyG66jocCLrfXzykP38qe1HZxam8/wE1t4+3cv0h4Yw121XpxmFeOGGyx4dRGhb05ETHSx
      Tw0x+kg0S38En9bKjm3byfS1sacnyTg8NE+eyPOPL+CtOi9jSxQ+395L/cRmClwObCPBmtaN
      NE27iuvPq0fApnf1AuY8/inbM1OpdR3vl15sTMPAtGx008K0dXTdRpQl0vEksjsPLANN2x/j
      WT6Cf21jmSamaWEYJpZloGnZYNcun5tEb5Sk4EfQEpiCA0UUsW0L07SRZAlLT5PWwSGLqKk4
      hsNHQALT4SKejJERPQi2QTKl4woqiIqIFOslmRaQbZWE6SD/z7FBzQNR0gdgGXE69+xm84YN
      bNiwgT3dIlWN5ex3zfe2vcer7y6njxDFXpMdW7djeqtoKHfQ3rqMNW3r6cgEOOPSS2gu9hzI
      1xcuoH9rKytXt7GjV2DiNy5hSk0IcFFVXcDOtlXs7JepqC7LMScdVDfUEtu6htWbe2g4/UIu
      nFLNvq4UJcWFyCKo6R5sZzlNIypxyAKCJOP3ulAFPyMqC3B4QxiJfVROms74ihCi7GT4qFFI
      PVtYvuozOpIyo5tHE3aJmKKf4SNq8CoWhiVSUjeaouISisUO1rRtwlFQR1VlCTUjGiiramR0
      kUl7aysbdnThL6ujvjQ/uwjWVbqj0HBCE4VeByDg9vsQLJVI6QjC7uPfANREnEQqg2GLCJaO
      qmlIDheCaaCpGVRVzf0MHB7XEWc1LZ0klkyhWwKibaCqKoLixulw4pBtUskkhuAgGPAhS2Ck
      YvQlTdweJwI2WjpFKq0iKB6CPjeSKCAqTmR0UqkUqm7h8ufhc8kIiDgcMplUEs0SCQT9B0Tf
      7r333sOzQVVVHaJCDOG4gG2ZJJNJFJcPp/LX3S3zer1D2qBDOL4hiBI+/9/uAOewJjV0CXsI
      XxUM3QcYwlcWQ9qgQ/jKY8gAhvCVxv8B2Cq3kvj4TR8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='first' width='192'>
      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
      Axjjc83/BXfsMWEr9f/IAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='hours_week_year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='intro' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='popular stations' width='192'>
      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
      3//PnCkLl5fGOWvdvX/yf7mP/ct/5z772//a/dyvf9I559wDn/0t92M//+vfsrv4/H/5D+7B
      p48755z70qd+x/3qf/Tv64odQAhFGFj+6Ld+lX/2S7/Pr3z8n3NudZUdM3MAjO+Yo7Oyigpj
      9uzaeVnG5/a73s7/+Us/x2/91m/xxfsfZn1z7W9tIr9hf1OmiCLBp3731/kff/Y3+bf/5mdY
      Wl1jx7QfD2M75uguryCDEGkyfvOXf45P/Mk3+fn/5UdZXTvH9JxXmtsxN8/yyuq37C4i1+e/
      3nM/OMefffF+Hn3gK17S5dV/6Jzll37qx3hiLeYzn/ljrlqYYG5mmrPn/Pa1duYUjR0zr3mR
      u77jh/iNj/8kI6MTHFjcze5di3+jN/WG/W2Y4//4mf+JB04aPvu5P+Xa3dPMTU9zZsmPh/Uz
      p6jP7sCanP/1Y/8dneY1fPqPfoe5sRrT0/MsnfbNUmdOnWT2dcbN34a9+a67ePzhhzFllywY
      4ZoRwalWeWU/QOfsM/z25x7jZ376dv7g93+P8bl9fMfd38bZf/Od/PInIu7/80/xT/7Vf6C7
      foY//Mxf8OBjL5BufoZgsMab91T5zD0P0QxLvvjNHxob4QAAIABJREFU0/zhT7/tW3Gvb9h/
      Q8vWXuLX/+gB/uXP3sIf/r+/x8jMHj783vew/Yu/xv/+qw0e/MtP89//zK9z4vEv86Vn1/nJ
      O3v8/u/+DgsHbuAdH/wIv/rhH+ITrPL5P/kkv/w7n/6W3Udj4U2USy9w7siTTOw9xM2T6zz2
      xHMXzwE+8GvwpZ+EwfYSn/2Lr174x9GZ3XzbO++gs7nCl+/9GrsPHuLGg3vpby3xX//y4t81
      pxZ4712HePDr97M1gLfffTdjjcq34l7fsP+GlrdX+cwXvnzhEK05ucAH3/NWuttrfPkr97Fw
      4AYOvekAW2eP8cX7H77wf7OLB7n79hvZWDrJVx94lOtuvoOrF+e+RXcBOMdP/OMP0ly8iZvf
      9wPcPrbCv/5PX75yArxhb9jfV/uT3/xFfvyXP8VTLz7NpOrx1kPXvDEB3rD//1iR9dnq9Jma
      nEA4x+bG2sUYwDr4+J99K9/eG/aG/U1bZfgFPn05dXECOOD+l74Vb+oNe8O+dXZhAggcP/H2
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='station' width='192'>
      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
      vDvsviwvFv8/9pfSZ/GIA34AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='trip duration' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='trips' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='year' width='192'>
      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
      0yuuAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='Bike/bici_pequena.png'>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAYAAAB5fY51AAAACXBIWXMAABJ0AAASdAHeZh94
        AAAgAElEQVR4nOydd5gV1dnAf+/MLdsLXZCOFWNbS9TEXAWpIqKBRNNNokk+NRpLit8XSY9G
        Y6JJjMZYkhgjKggoZWV1rZgotljpReoCu7D17r0z7/fHXJCyC3vn3rv37np+z8MD7M6c887M
        mXfOec9bwGAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwG
        g8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAY
        DAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8Fg
        MBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaD
        wWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBkM6kWwLkONIJBKx6+vrM3KflixZ
        4gJOJto2GLojRmG1jXXWuHGHBbFHqcWxopSCpPtexRXWq+u+pPHoC1VVVdvS3L7B0O0wCmsf
        Ro06r68ddr+r8AWBfqoaBJA06ytVRURcVZoR3nbVudVpbn68uro6ntaODIZuhJ1tAXKJSGRS
        r0Ce+ycR+apAT8CWBHjKPW1/Em1aIoRQHWBhjbJCgU35odC7NTU1ZploMLSBlW0BcoXTTjst
        P1Cg1wMXAuHO7FtEBKEnWL/uP3Dopzuzb4OhK2EUVoKCHj0+Kcolku61XzKo9kG4LhKJlGVN
        BoMhhzEKy0Msl4mgPbIqhKctT7ALCz+RTTkMhlzFKCwgEokUisgJWZ1d7UIos8EoLIOhDYzC
        AlpDoQLN8uxqDwKo9Mm2EAZDLmIUFhBqLWgVleZsywGgqi6qDdmWw2DIRYzCAqCuQYXl2ZYC
        QKDJFV2WbTkMhlzEKCyguro6rsgCIJptWUDWxR3nHYyPnMGwH9k3MucIkUmTeoUcvQ84N5ty
        qNKA6CqBOqBRVZoFWl00biGOCrWqvBZ3Yy9VL1y4ChOLaPgYYRTWR8ioceNOsqzAo6gOzIkd
        wzZQL6anBXQ5yP0Bde6ZP3/+zmzLZTB0BmbZsQerli/fOHz4YR+KxVkghdmWpy0SvlpBQfqK
        asRFykYMG/rcihUrYtmWzWDINEZh7cPK5cveHTb8iOUInxTIaY9z9WIdT8ayW8pKihdv3LjR
        zbZMBkMmMUb3Noi1NMxVVy9T9G0gZ5XArgBqha+V9uplnE0N3R4zw2qD1atXuyuXL1s5bMSI
        xSJyBMgAcvheCZRYyJoVy5e9kG1ZDIZMkrMvYS6wcvnyTUMGDXqCQDAKHINqfo4a4y1EGk48
        /rhH3333Xc22MAZDpjAK6yCsWrWqOT8UXFxYUv6sCAMFDkEklG259kdrtm7Z/NCHH35oEgAa
        ui1GYXWAmpoaZ9XypR8OOGzEQhtrjQh9VTWR4A/JBe8QhaVbt2x+0CT/M3RnjMJKgrXLlzet
        XL70teFDh8yRgP2hZ9uS3qJqpT/le7LIgpdfenFuloUwGDKKUVg+WLFiReOKZctesT711Zk7
        jjitIFrQ4/hgy86AHW9BVDNQr+IgqO5Ql5tWrlhmYhCzgzVy5NTgyJF9gqtPPlkxdsSMke1p
        Qddn5s6eoZh7XV59zRXl698s6PnhGxRvX00wWo/l7GFOypAS8zzfecRy4t9euHDh9ox08vHB
        qqiosEOhUKCsrCzYHAiErEYNW/kaRrXQikuxE9ASgR6o1UPQclR6iaU9UClFNKgqdSIsV5fF
        bqx5SVVVVQ057BrT1TAKKx3M0Hzy+DGql9vxaGFh7Top3fw+5RvepmTrcsKNtVhuDNT78O51
        01NQZKqqgix1ND6tasGCt1K7iG7H7oIfkUhE6uvrpbi42A4EAuGobRfkBYNFToxyS7TcsilX
        lZ4CvfBskz1AeihaglAoSjFQoCL5QFggqKp2ezvGqqoiNAGvuSr3xJsbZlZXV5uUQWnAKKx0
        MUNDhLkU+ClQ7v1QsVubKNyxnqJtqynetpqi7WvIa6gh1LwDO96C5TrArhWE7PHXgR+NqsZE
        5HkX96pF8+b9NyPXlLtY48ePD8ZisTzbtgtaRUoCllUsqiWuWmViWT1Q7YG4PVGrtwjlqpQL
        lKtoKSpFIuQDYVW1Muyq0qqqC8QJXF5ZOXtdBvv5WGAUVjqZp2FifBb4LdCbPe+vKqIOltOK
        3dpCMLqTvMZt5DVsJdy4jXBTLcGWnQRbG7FjLVhOK5YTQ9y4hloatgda63eAgGqLCMtcZY62
        tjxZVVW1OVuXm2kikUjAys8fbKt9rFgcCdpblR6C9FAoFyhR0SJBClQJChoAAggBVSwRsRIK
        CbI71h3Q5xz0W1Xz5i3NohxdHqOw0s0MtcljGi43IRxKR+6xKqiLpXHEiWO5cSw3hjgOoo4G
        Ys2vDXz7ye/3/6B6gxVrbGltba3p7kuMT48f3ztf7e+opReKMkyhIEeddjuKq+jDsSbryurq
        uVuzLUxXpSsPgNzmcZ2A8DvgsLS0p8wjzlV8Vrr9TuCYMZOOxNbfK3pOF1dSe6HQDPzwqXlP
        /D7bsnRVus1gyDlUhSc4GZc/A8eT6r1WXODfWHyX8+SVdIiYi4wbN26Ia9n3gnyG7hecr4q+
        bznxUQsXLtyYbWG6It1tQOQOIsq5vAJ8HfgPqWYGFSzgVJR7mKMnM12747OzHLEvBzmD7jk2
        BWSIWtaZ2Rakq9IdB0XuIKJMltdx+AbC83y0HeizPSzgEyj3cyKnpEXGHCIybtwgkIuAHIzV
        TA8CYcQ6MxKJBLItS1fEKKzO4AJ5G+GLCDNIVWl5S8ujcfkDs3R4GqTLFSRk26NAe2dbkAxj
        AUdFo9FgtgXpihiF1VlMkvW0cAXKQ0BLyu0Jn0D4QuqC5QaRSMRWlaNFpPuHi6mUFhcXm3fP
        B+amdSbTpAab76I8gLdjlAohYBJ/05zMPZ8sNTU1lqiWqWq33whSUXdbOGziDX1gFFZnM0m2
        IlyH8htSrYMoHEYxI9MjWHbp3bu3q2i9iHT7F1lUaorr6018oQ+MwsoGk6WeVn6N8r9AbQot
        FWBzZnfYMayurnYQ+21V7e75vByEN6urq02VIx90+YHeZZkmzYS4A/gJsMlnKwGUz3A04TRK
        li1U4tEXEOnuGScaXVerMQVwfWEUVjaZIFE28Sdcrgf8hGsIUIFNnzRLlhUqKyuXiupsuvHL
        rMpbzfV1L2Vbjq6KUVjZ5jKJcT4P4vJ5YIOPFvoS4LR0i5UlXEudX4F2yxdaYSuqv3nxxRfr
        sy1LV8UorFxAxOV8nkb5O5BsEQkLJcLt2h2WhSxYsGCN41rXKPoc3WumFUX17oYd25/KtiBd
        GaOwcgURxeZpIPmvr8VJDKC7OFxq1YK5r2ir9SVU7gY2qWoMcHUfsi1oR0iIGkP1Abe15beL
        Fy9O1Z3lY02393npUszQfoRZAByX5Jk7sJjGJKnMhFhZREaPnjjUCsppqu5ILKscKBSlANFC
        VcnzQl20AJU80DBCHkoIkaBCANWAiNheElCk7UADaeO/6Xk1VNkgwh9amxpuq66uTt1h+GOO
        iWfKJd5lC8fzMpK0wipBORPobgpLFy16ciWwkqlT7ZHvvmsPGjRI6urqrHA4bOfn51vNzWHL
        tutt27bteDwUtCwNW5YV0oCTp6p5FhQ4dkHJyoqpl0Tze0yy4y3YsRbsWJRAvBkrFsV2otix
        KHY8ujtxohVvxXJjWE5M85q2bZJ4XMVLDhjEe29sPIVo4SUKlEQqHAdoAjagWono37Zt3vzm
        kiVLjBtDGjAzrFxjrl6My72QtKvCs+QxkbHSmAmxujRP6mDiPAqctPtnqoB6mWBxEddF1PH+
        uA6WE0dcB9tp3TTs5fs/33f14p2qdl7A1jwnToFlSb4LBZZqEWghllUI2OBuV1dWuJa+v2nN
        mtXvvPNOa7YuuztiZli5hssShPUow5I88wiaOAx4IxNidWlinAscu9fnWRI1KgQUm3Zcbx3g
        0f/e+eNnP25J83MVY3TPPTbg8rqP88qBT6dbmC7PTO2D8BXEV8qa9cS5L+0yGXxjFFaucR4N
        KM+SfBqaEBZndYcwnbQSYAJwtI8zFViIw9tplsiQAmZw5xpe8O/zJJ+CRoBTOXZXiTED8zSM
        cglQ4OPsbTg8yDQxNqgcwiisXCTAUvD1ZT+EIKemW5wuS5xzgNPxs7mkzKOBV9MukyEljMLK
        RZbQgsvzJO/pLbiMYoZ22xTDHWaWliVmV8knBFSaUe7jy2bHNdcwCisXmS4uAapRH0n+lNMI
        UJYBqboWwklAxMeZ3pI8xr/TK5AhHRiFlat47g3Jp50RjsRiRAYk6jo8o3kIXwVf9rxGlLuZ
        JiaEJgcxCitXeZ1NKP/xcWYZ1sfcvaGeU4FRvs5VXqURE6CcoxjH0Vxlurg8rs+hfDZJHyJB
        iTBXHyLOTuqJkUcMcJgm3Sn7QdtMVwvlyyh9fJjam1D+wRdlZwYkM6QBo7ByGeE/wGZgYJJn
        fgaHJxC2UcY2XLYibOFx3YRLDUFqUGpQaoF6SmjmLEk2rU1uUsHhuExK1HBMlreIsSDtMhnS
        hlFYuUyUlYR5m+QVVj7CJwBQdPdMQ1AswEXxdiCbgQbqqWW21uBlPd0CbELYgrIVYRsOO3DZ
        ST71bKWJgURzUsHN0BAOlwI9fcyuHOBepsn6tMtlSBtGYeUyU9nJbF5AGIf/QPW9Iuj2+J+N
        VyqsFGXAHsd4ykxxUGJAFIsoNi3EaKCUWnayndm6FdiMUoNFDcpWSMzYojQDzbQSpQdRGoh3
        ynK0kCHEmULy90qBd4kzPwNSGdKIUVi5jIjyuD6P0oKQ31m94o2LAEIYKALaDxQSFCUOtOKl
        VWkkRAPCDsLUEmMbIbYwWzclZmxbcKkB6gizE5smHOKsw6Ucl3dRpqOQZLmvGWoT50JgEMkr
        LAfhXzhsTPI8Qydj0svkOnO1Fw5PIRyfbVHShKfgJLEc9WZl2xJ/aoDNuIlZm0sNAWqJs4MA
        O4Ammom2OVubrSNQZiEc40OmtcQ5gwvlwxSuy9AJmBlWrtOMS4h6vDlOd/jASCIJXhAoAfon
        fr5rRuVi4eDNeuI4xLCIojSg1BFme8LetiWxcVCDzWaUMxEO9yFPHPgXF2JsV10Ao7ByGVVh
        NuPwEs91B2V1IHZdn82ucJo9r7jtBaKL4KBE8cayn5CkD4nzcNJLUENWMAorl3mSoQhXQ6fZ
        r7oWnuuChTdb88uTbMXk5+siGE/3XOUZDRDnKuCEbIvSjdlInAe4TEy+9S6CUVi5Si1nIkzD
        T7YBQ8dwmU8j72ZbDEPHMQorF5mhRVh8H7pNrcHcQ2jB4l6TQqZrYWxYucYMtQnzJWA05oOS
        KRSXp2jl5WwLYkgO80LkGmFGIlyBeTaZpB7h/o9FMHg34+M1w1IVfoJMv3HvH09nV7xdlre2
        79M84Nu4HJFhJwbd4+9EvauPFTbQB1VJ5NA3dBG63UC9VDXYYy1FjtBD4vQUodyxKLUdSh2h
        UCAPCAlYbsLr2rJoEaUJi3rHYYcqtQTYbrlsjwfYcduhtHTKwJ6l52PzV5QeGe5JgdXAQpQS
        oBcWPVHK8apIFyZS2nRng/9mLMYySd7MtiAHYuo7GuoXIi8vQAFxCjVMviphUUIiWG4cUcUV
        ISZCVJRmCdLY6tDkxGm+YwSt3Ukpd1mFNX2V5u106G0FONRyGCYWhyscAQwG+uAF9YZVsAEL
        xZKE547q3tctiqqg4mU2cAAXiKnQiMs2EdYrrFZ4X4TlarG2uZGNW46k7hFJ07JihvYgRCXC
        iWT+uShQD1xGkFk0YAE2AcIEKSRGOTY9cOmNRR+gD0ofoBdeJoQSoAilGChIxBwG8ZaxXWVM
        KcKzOHyNKbI6W0JMV7XqVlMiAXqFWumHzSCFoSiDEPqrS1+gTIRCIKxKUMDCYve6QNk9hl0g
        jtIqQiOwQ70MHBtEWAesQVjtwMbWVmqiI6i7W7qWS0cXGVwql24gv6iJngGLI9XiZFxOFDgc
        oY9CiXil3TNp91G8MI4mVepEWA+8LfCaA2/gsCqq7LjjMIkm3fJdGqQfVwG/pDOX6cqr2HyJ
        SfL+gY9T4W4C5BOiD2F2kk+YfFyK8DKc9kDohUNfhN4IvVD6YFGG7jVjCwFBlABgJ3JHZHMM
        xlHupJUfMU0aMt6bqly9mLzAIZQKDBHlEy4cBxwjwiFAmUJxYiyn+964QAyhEWWHwhZRlgu8
        gfBfsVjW2MrWTa/T+EgO2/ZyW2GpWt9fyaGuzWiBs1FOBIYo5EnuyO7iGXGXobyqUB0Tnvvd
        YDZ1eCo+W48F5uJlGuhMHOABNvGttDpPqgrzCRElnwCFCCW0UkaAMlx6A30Q+qD0TfzdG6EH
        SineTGLXbK0z2Alcy2T5S6Y6mKpqD1zJcBs+BXxaLE4AhgDFZH9zRYEosAnlHSwWq/KCRHnt
        5iOlPsuy7UeuvPS7mf6MBnYOYlhAGINwLvBJ9YJkySEltR+aMGSLl26lFmGxuixwbZ6pr2HZ
        3Se1oxDmaQkx/gJMxd/1NeApzRKfojejXMkb3Mt0cX22kQIqTEc4mjBxCimkDJceWPQG+iZS
        HXuKzaVvYsmczmKxCtRgM4VzWZyujZfvvKNF+XkcLzDKsjkH5QRNhFjl6jjeYww7qqwXqBah
        0oHFRYNZM12yMT72Jmdu3DUbtJc0c6olTMHiLJT+CuFcfbgHQ0EFouqlOH4RmNPqsrh8GB/u
        9eBn61eA34Gv0lxxhD+h1AA/AAr9icoKHKZwgeReWfZdy9FyAoQ4FuGfwLB09wK8SJwvcqGs
        8dvI9FWa1+AwQoRRIkwCjkUoI7VYx6yRUGBNAhuAZ1yY57TyaunhbMyW8sq6MrhimYbzhLMk
        wLUoJyXsUVmXKwM0AR8Ajzgwa20TKx9ZTi/gCfzFCyqwjDjjibKTQu4Gzsf/vfsHDVzJF6TW
        5/mZ53H9AcJP8JeV4cAoLvBHhBuYnMxSSOXaTRRIEyeKxZdQRiUM5t3NZUiBBpT3EGbGXWat
        a2H1IyOltTOFyKpiuPRVLSjtybWiXIckMlt+PNjiKAvvXQq1US7Cn6G9AfjebtuLZwebBQzF
        33NtQfgRk/hdTm6Dz9B+5PE0ylEZ7KURuIHJ3N6RpeEVy7QkP8RkHL6CcDofo6wa6uUjW6AW
        D0RjvOhrs8kHWVVY163SqwVuBEqzKUdno8D6JtzHVuFGHWz8PAflUQJcyrmJGdEMtcnjYpS7
        8XzN/Ai2BpsvMkle8HV+ppiuFifwHeAWvB20TLIel68wRaraO+C6VdpPlIlYXJKwTeXSJlBn
        4gL1CtUC97dC9e+GSl0mO8zaTb56jQ4LulTh7ZZ8rGiOw4IPYZm/6neKsgmbafsplvs0jx48
        AFyIH6dPb1n0DA1ckFO1+WZqTyzmIZxM5sesi/IqDhfumzL5imVakhfkHJTLgZPFn82w25Gw
        19ap8oIqtzcV8/Kf+mTGTSQrW6rTVa2Qcj7CodnoP9t8sANWprJhLNxDcxtVob8mLThMBw7s
        V9V+uxbCWRRzGXdp7hiKA4zqJIdaAAvhFGz+lxmaKMChct1yPSPP5l5R/iEQMcrqIxKzy3KE
        cy1hZmETd16/Uk9BNe3PKyszrOkbtKAxykPApIxPpXe1fjCLREePSwEFtkdh5mqo9bfiV+At
        opzNNNne7lGzdSpwF/63/2tQvsT5stDn+eljhvYmxEOIz9Lz/mnG4sZvH8FjxSGuVuVioDwr
        S7+OjM1OGL8dJTHjqhX4uxvnjt+MYGW67KJZ2cmoixIKeeEzaXv4qoo6MbQ1ihNtxmlqJN6w
        k3jDTpymepymBpxoCxprRZ04qiAiSCCAFQpj5eUTyC/CLiohUFRKoLAYO78AK5yHFQyDvcsx
        OxUZ4T81UOffPFmHcvMBlRVAlPnkcT8u38VfBeRewA94TN9PZZs/LeRxJsrJPs50UZoSjqh+
        Hlx+AK7b0MSXjwhxpGT4XVFV1I2jrS04LS04zU04jTuJ1e9IjN9GnJamxPh1UFVv/NoBrFAI
        K68Au6CQQGFxYvyWYOUXYOflIcEwYgUQ6Rxdm1DqPVT5Hwnw6etX8gdZoTNvGi470tB25/P9
        FVrqWswXOM3P+V7In6KOQ6x+B9HNH9K8fg0t61cT3baJ+I5a4k31uNEWNB4HdVFVT2O0h4g3
        ACwbCQaxwvkEikoIlvci3Ls/eYcMomDQMEI9+2HnFyCWnUh10LFbqMCHjfDISoj7+9Yo8C92
        8M0OJZ2bqwNwmJ8oe+XnObcCd/A612fHoRR4SfOp4SFgso+za3H5NcJ38cJefI313nkwbRgU
        plFdKQooOC7xpgaim9Z643fjWqJbNhDbsX2P8RsDNzF+d7t27oOXacRTSJaNBILYeXkECksI
        lPYgr+8A8g4ZRN6AweT1ORS7oBAsL+wz1Y9wBy+4AWGuK9xwy2BWpzLbys6ScJXmNcG9Cp9P
        Zoqt6hCr20bT2hU0rniPxpXv0bJpHW5zI+q6ntIBSOeXRDUxWEDsAIGSMvL7D6ZwxDEUDT+K
        vP6DCRQWc7DLaIzD7DWe0vJDcZDoyX24bgT8uV2v+X2Zq2NweRBvxpQ8SgMuX2QKc7Li6jBH
        x6P8E39OtXPYwcUUcx4WfyQF7/ijy+CcARBOMXeFqku8vpamdatoXPY2javep2XTOpyGnR+N
        34TySRvqqUdUEcsmUFxK3oDBFA49iqIRR5N/6FDswhJEOsWcvUpdfh4P8dBtA6XZTwPZ2SVU
        letW8jWEP4scyAtYcZ04rds207TyfXa+9zpNqz4gtrPOmxqr9+FPu5JqX+7dHzixbKxwHqGe
        fSgcfjSlx5xM/qFDCRSXIdbeI9tVeKUGnt/k7QMniwBnDUBP7MFWEe5rCnLzHw+VbQc98RkN
        sJOfAt/DnzuAAm/i8lmmyAof5/vHy7w6A88ZNtm3qR6XrzFFHmOehmnlJwhX4dMlwhb4dD+o
        6OX9OxlcJ0Z8x3YaV7zHzndfo2n1Ulrrtnrj1/1oNHTGck33WGGIZWGFwgR79KFw2JEUH3Ui
        hUMPJ1hSjlgZW/0qsBPlUVF+etNwWZtsA1lza/juSu0bFp5SOGbvWZY3o3GaG2lau5wdbyym
        /v03iG2vwY17E4vOWot3hF2DwM4rIK/foRQfdSJlJ55OuHd/z3YgwqZmmLsGan36BPcvgAuH
        eEYV9SLu51jCjTcN4t2Dznwe14EI9wKj8Pe83URGgx90SkaDXczS4xGe9+VQrFThcjEXyBYA
        Zmt/lD8nYlN9DZ6iIIw9FIYXd6B7dXFbW2heu4K6NxbT8MGbRGs24sa8AZCL49cKhQn3PZSS
        o0+g9NhPkj9gyO7xm/Y+vaD75xV+sOYVXk0mO0RW79w1K/QC2+JPQF/vJ0psZy073ljM9v88
        Q/O6lTn5kNtjl53BLiim+IjjKD8lQuGRJzBvc5gP6vzJH7Zh0iAYts+LosrbKD/8zXCePKhX
        9mw9A5iJt9Hhh53AlUyWB3yenxz3aR7l3IrwHR9nOyhf5nz5514/naMjUebgPxKA3nlwwRAo
        PUBgULyhjp1vv8r2/zxD44r3cGNRz07UBcbvrhWEnZdP4fCR9DhtFCVHnYCdn7EglNWuxf8V
        DeKfHY1NzOpdnKpqD1nFBYj+LLr5wyNqX3mO2lefo3Xrxt3T5a6gqPZi17JRBCsQxDpkKG+P
        GM/mQytoLSgjmVsuwPE9YVR/sPY5TT3b7TYRfla3jXvuPkma2m3oLg1yCP+DchP+4vC8uMUY
        U/msvOXj/OSYpRUIc5DdZew7iqK8hjKaKft4XE9Xi+OZDNyD+MvoKsBhpTD+0L3tWaourbU1
        1L36PNv//TTRmg0Qj3ubMl1t/OJ9eAWQQJC8/oPoceooyk78FIGS8rReT8L9Ybvrct0tw7i/
        I3bSbN9Na+zULw4rOHTw/8Zqa77SunUT6jhd8iG3xa7pthMIs7P3Yaw/agw1g08hHirs0Be3
        VxjOGwy92gm0STzwBoXbAkFu/9WB7FrztIQ4/8JlrE9XBwdlFvl8lbEZLI3l2d1+AVxL8rar
        KMr1TOaONgf/XRqkLz9D+C4+w5csgTMT9iwLJb5jG7WvvUjtv5+mecMa1Il3m/HrmWc8xVUw
        cDg9Tz+HkmNP8ey0aVIdiTG8JuZwzm0jZPnBjs/anY1EInmh/MKLQf4H9DjA7hLTZr+o4toB
        tg6sYPVxU6jrdxRI+9tOAowe4M2wOnBXWvBiuX54wFiuOfpJlIfwGw6lxIDLmMwDZCq9yKN6
        JEEex0t3nSwfEGf0viE1ezFT+2DzV+BcvyIWBGDcIa30Xvsam+Y/TPP6ld3qQ9sWqooEghQO
        PYK+46ZRfMSxaTXOK9y4egi/OFjK8U6/wxUVFcGeffp8WrH/T4QzVVWkOz/pPUksF51gHpuH
        ncGqE6bRVNq/zdnWiBKYOLDjW+kKjggL3DiX3DIiYWxuizn6dZTbgQJ/F8E6lM9zvrzk8/wD
        M1t/CVxH8o6aMVxuZIr86qBHztUjcXgEYSTJvgPqUrbpPQ5781HK1y7puqYLH+zp3lN2whn0
        OWcK+QOHp2u29bKbz+Rb+h1g7NLJsYRjxowZ2KNv358r9t9BPwNYHxtlBbudUwOxFvovfYbj
        F/6c/kurCLTuvcLKs+HUPhBKwu9HwFZlnBXgj9eu1qHtHujwGMLD+A/iOBThh8xUvwb89pmh
        A/Ayr/r5dC8jwKwOHbmEpQg/wNtM6CBKqLmWoa8/wrGLbqZszavgup6z8cdkCO+6VnXi1L32
        PKv/8mtqnp6D09SA+h5Ou+nnNh7c365TFFYkEgmMmTjxdALBf6BytQj9P1aKal9EEJSi2nUc
        +cJdHP7SPeTv3ASqWMDIcs+VIdkblFBaUwRuunqdDmjzoClSh/JLvDJffkaZAJ4yJO8AACAA
        SURBVKMI8M20BrdOV4sgF+BVPUoWBWZTxEFtIF5f4hJlAcqf8ZbTB25aXUq2LOXo6jsY/uo/
        yWvc1nm+fzmIiIAq0a2b2PD4/ax7+E5aNq7d7RfpB4WgBA7+ocr4HY9EIkWhgoJvg1wH0jvT
        /XVFFGgq7c/7Z1xK6LDjmDw0QEkKuRISfi7z4gG+etvAduIO5+rFuNyJ/1zwtSjnpm1pOFv7
        AgvwqsgkOy7XY3MO58p7SZ01S8sQ7kG4oL0+xY1x6HuVDH1tBnmN2z62SupAqCrh3ofQb8JF
        lJ/yGeQAttl224D3XWXcrcMOHLuayRmWnD1hwuBgQeG9YE03yqp9RJXCuvV8oupWKt59jIJY
        av6ZArYo44MxfnfNB9p2WM5WZqL8A690mR/KEH7FY5qGFEEqwETwEffo5fB6lJWsTLrbKVKH
        xY0or7X167yGLRzx4j0c/tJfCRtl1S4iQrRmE+v+9Sc2zvkH8frkc/iJ8LbdyoGD+smcwrLG
        TJhwiq3W/YJciH8D78cD8RwLQy07iVfPYP2j9xDbuf3AwdoHbZMA8Dk7xLVXLNP9Z1FfkxZc
        fo+yxHcPcDo23+I+9ZfhdBez6QN8AT+2K2EHFn/jSp8pel/jPYQbgVp2L5GVom0rOer5Ozn0
        vQXYbuxjY6fyiwi40Ra2VM3iw0f/QsuW9cnYtWKqPHrzERz0S50RhTV67MTxYN0vQiRTfXRL
        RHBbo2z/dxVr//Y7ols3ptgeIeDyfJvLpqvu/xwukKXY/BSvCrQfAgiXUs45qYiJEkE5xdeZ
        8BRLeMN337vsWfB7oBV1Kd28lGMX3UKvNa9gpWCX+bghIuA41L76HGsfuI2WDWs6orRclErN
        54lOdxytqKgI9uzd78tqya9R7fmxNqynwK7t4/yBwzl02qUUDT+aFB6VAnUqfPM3Q5i5XxjP
        qxpkPT/GKxPmZ3dO8cKEzvNV8n2GFhHicYSzSf4it+BwERfI00n324YcViD2l15r/zP1yBfu
        ssNN2707ZYZw0uzylA/27MugL15J0eHHtG3XEuIoVY5y2cFsVx+dkiZOO+20/KLy8i+Lyi8V
        yrOlrNRz7IqpV1ZrJ6o7QLYBWxHqULcRiIpYLmCjmgeUIJQp9BKkJ0oJQjFQoKpZc71QIO+Q
        QRz6ucsoGnGM7xQgiSxKr9oWY389uI0yXp7B+xHgDPzNiOMIf0X4HpMOECLUFnP0XJS/4yeF
        jPIorXwtHUHZkUgk0DzohGvzGmqmh5trw9lSVOp9reICTQj1IHUo21R0m0CtqjSAu8/4lUKg
        B6I9VemJSKlAsaoWiKcpOv9iEj6H4T796X/BJVr2iVNUxdqVPKdVYZMIMyzlT78e2vEPXVou
        JBKJBIIFRZeJ6k8R8RWn5ZeEgnJVaRZYCfq6C28I1rtxt3V9CLZHo9F6oKW6utqh7a18a+TI
        qYFDDqnNh/xSy3J7Y1sDET0G9CSFT6D0F5FQZzu6Kkq41yEM/uo1FAw5wr8tRYi7cP4tQ+TJ
        Nn8/V8fgcH8i2Z2f9htRvsx5zOpw7ixvdvcv/KWQaUD4IufJ7GRFbQN79IQJn7OQW1H6daay
        2jV+UW1BZB3KEhVeU9EP1HHWWY6ztampqb6lpaVlyZIlcdpJ4Tdy5Mhg0aBBeflQEhTppQ6D
        EY4SS04QpUJF+guEOvsDrKqEevR2+p178Ss9Th31NljNwAcKz+/cznsdzu2WIB2Cy+jxE79r
        wU8Q8btF7gcX1c2IvOSqVqk6L4ZEPpg/f37a66ONHj261LXCIwMBPUfVOgvhOPGXVM4Xu7aN
        B33xSooO+4T/hoTf/GcVP6o+S/bfGfTyT30P5RccMEfZAXk34QX/3w4dPVNPw6YKf/X8nqSB
        L6Va+DUSiQTs/KILbfQuRDqz3JyLshVhiavMA+dFy3GWVlZWpj1O84zzzisubIkf7dryaUsY
        i3JiZ66CEtl+a1SdixctXPg0/tLCASkqrIqKimCP3v0+J8IfFYozfQPUS2S9A9UlItYc4lRC
        dF1lZWUTnZB+f+rUqfbGpqaSAtXD1WWyGwxfIHCYFW/1ZgcZvHxFye8/hIEX/w+FQ33WElUe
        jAX5ZrvZHr2CD3cjTMbP2FBchIep51sHLRP2Ny2klN8DX0+6H4ijTON8Hj9oap0DY50zbuKF
        IvwWkYxXcErMphpA31Jllqv2Uy3121a9+OKLDXRO+Qhr/PjxRXGRwwVrHDAJOEZV8ztFeSnL
        xdVvL1z4ZBU+rzcVIa0xEyZMALkTMv6wXYXtoM+56H1OU9PL1dXV28hmjZBL7wqWnXzmbYVb
        V327/9JnrJKty7GcGOJVt8hIlwoUDBzB0Et/QLC8T/LLQ+WBLcK37h8q7Xt3z9LjsZiPl6PM
        z4XUo/yQ8+WPBzxqrp6CyyzwmUJmG2fx9WRKyu/P6HHnRsTSuwQ5PJV2Dohny0l8aHnehQdp
        taqrquZsIbs1bqxzzjmvH8H4GEG+AHKqqhZlXHEpr2HppZVPPunLnca3cKPHj/+kJfZ9wJF+
        2+gICs2izETcu9evWfPyO++84zNvZ5qZrSehzEH0EDvWTJ9V/2bgu/Mo3fwBgkum7JyqSumx
        pzLwC1cQLE5uVarK/xUO5ZcHTZY2R69C+QX+/ec2EyPCZ6Xt+ohelerfolxB8jeqGfgek+XP
        PmUDYMyYSUMJuPNUOSJjL6kqrmXHVaxqicVuikcbX6iurj5IKFDnE4lEikL5RWcpXCPCafjL
        mdYhVFUFeblV3Auq583blOz5vh7U2WdPGGznyWMoJ2bqYSs0C/qsqnvbhrVrq3NGUQHM1mKU
        BxEmsstYrEqgtYE+q15myJuzKKz7EFE37bMtVUUsi56fGkf/87+KndcxneLdT86+eai8fNCD
        Z2sx8CfgYvztGirKE4T4OhOkZr/fPqonEGAW4itu8DWiTGSaJD3Yd3H22ecOCOTpPaqMzcj4
        VUXFovaQY1jziUnx7f2PudepLb6cy5IzMHc2Z5x3XnFezD3PgsvFq7KdYtmNdnFQHq13Y99Z
        vHDhQb3b9yTpwRiJRMoCYeunghyfIWXlKqwU1e+3ol97av78ypxSVtPVAs5DGMOe90+EeLiY
        DUeM4o2xP2Td0eNozSv2vNVT8VjfBxEB16X2P8+w7aVKVDuUDtsFFsQCvNmhTiZLPS63orzr
        V0yEMcT4Ks/o/r5dQT7vI5soeKXH/pWKsopEIkWBPL1GlVGZGL8KtBT1YsVJF/HW6GupGXJq
        wAkVX0x/LmCGZkoBpIUX58ypr5r/xEMxjV+k6t6qyhbVNA7ej7ARzi+0At+ORCJJRUkkpbCm
        Tp1qh/ILv4TwOTKgfVU1DixynNjUyvlP/sHPlDHjfIIhKFfTXgUWsWgqG8jS07/Bu2deTmNp
        4r1M53MXwWlpZkvlYzStWnpAb2L1JmUrHOFnSZVWepO3EG4CoviztYSBy2ncp/bkk9oP+Dz4
        2IlUVuCQkhtDIL9wGsolIpJCePn+aKIcXO0hI/nv2d9j5YnTaC3oAWKBUIjLzwlwTDr7zBBu
        9YIFq2PNTTeIuF8X4TVNkOZ+whZyZSBcMDaZk5JSWDsaGsaoyA34LJfUHqqqKNtAbmhtarjw
        6YULXyO7Bsm2uUuDBLga4YSDHeraIbYMO51Xz/sVG0eciWsH0z7Tiu+s5cMZfyZe125mZFfg
        BRW+9Nsh8npSHUwXlwE8jHI/XvYHPwzC4Wb+mQjAnqE2Dl9B8bNJowh/J47vcmNjJk6sEJGf
        pt19QRUnmMeqE6fxxrj/pbb/sftmkxVgBBa3pidYPPNUV1fHK+fNe8KJtkwUkTvwPlzpRehj
        2davx40b1+Hssh1WWGefe+4AxboBTXviNleElap6SQDn99XV1Z1XSipZ+nI2XoK5Dt43IVrY
        k/c/9S1WnPg5jYUL0mrDUKB53Uo2Vz7W6LQ0Lwc2AdsU1iv8W+EGcfniLUP4j68OTpIYFjcB
        b+H3A6JUUMj3mKdhQvQHLvKZonIdFo+SREmoPRk7dmwPdeVngk/H2PZQpamkLx+c8U1WVnze
        y9ffHsKnCfB95mlaP/iZpKqqavO2zfJDRG5QZUMGujjMsewbKyZN6pAxtkMvXiQSCQRcLheR
        k9O87ndVWUJcL3lqwZNzMuH0mTbmagHC94Gk0+TE8kpYc/yU9bX9Rt6ssDVd0+tdj2Lr8/Nj
        q+/+xe9dOF/hQkeYFFQm/2YIN900XNamVLX5PFmFy03AwQu3tikkQZTLiPIZYALqIy2xN8Ob
        yQZW+xEhEokE1Ap8AXQ06QrGTywBG8oH8d6nv8P6I0bj2iEOcmkhlC8RZ1rCFtolWLJkbtP2
        zRvvEPieoivTvDy0Uab0jLnn0YFn06GBM2bixNNRmY//ZG9toqpPiWNdWVk5t+3t71zB24b/
        Bsqd+NtZjQE/43V+Mebfkyaq8Hvx6uOlk/9oLDrlqaeeSv9XcFf1ZLjOZ8UdgHfxgqv9+Dxt
        QRndYQ/6fTh77LmnBCx9GJEhfs5vCwXqewzmv6Ovp7F8IEkOi/VYnMckaTMPVw4jo8ad+0nL
        4gFUR6R18qK8g9P62crKygPqgoMOvjFjxvTBlf8lvcrKAV2gMesbOa+sAEIcjXJNCi28hMW9
        TBe3cv4TTwruZarqdweuPY6XYNiPX9PBmSBRhNuB5/BvWzwKOCzps7wEfXN5g3f8dDpmzJhC
        29ZrERnk5/x2cOv6Hhn77+jr/CgrgP4oNzNLh6RRps5AqxY88bLrxr8gwptpnWkJRxEIXjFi
        /PgDLpcPprAEO3i+enmt0oUDPCtO/IpFi+auTWO7mWGuFgD/AwzHnzJoRLmVc3ev/93KefOe
        FtGrFNam8aGHUC45a+zYo9PU3t5MZiPKT9CDZ4VsB8HP/RO2AA8y3V9ZMQkEJoKcQ5qWgt7z
        0pfXjZzwu8byQY0+Q4MElzMRvpcYX10JrVqw4BVV9yrg7TSOXwu4YJjImQc7qF1Gj540UEW+
        Jf6CU9tjiYt71cKFCztWMCDbxDiHpAzte+DF1s0kROU+diSnct68KnX1aqGdnOt+EPrYVuDK
        ioqOGTCTbFyZwrNY/JlM7Bi1h/IsFv/2c2okEilSrGtQTcuuoOelzUpX3cs3DTrrp6j8w3dj
        QhDhKzhcnA7ZOpun5s9/TnCvAkkxy+RHqNJX1bq6oqKiXZeTA76EVtC9FNW0+I4kHDmWuup8
        a9G8eb5sEZ3ODO2NzY8Ryn2dL6wkzs+Z0Gb6XnfRgidnuvBDvPS8aUFEpvXoE/9Uutrbp3Ul
        zm0IlZlpfz92oPwl6RxbHlYov/BiVU3bRpEI6xG9ZNH8+W8wTRpo5UcoL+N/mVwM/Jo5enI6
        5OtktHL+/GoR9zLQtHx0xUvcNKq8d79JtDMbb1dhjR49aZAKX0yXg51AreJev2j+/I55W2eb
        uzRIiEvxUxjBowm4kyksO9BB+QF5UFXvxPPiTh3VUsT6eiQSKUpLe/tygWxDuQl8FH1IDgWq
        wV/O+TFjxgxA5OtpNAxvV/TnlfPmvcAuBTVNtifqG67y2aYg9ES5qQvaswDc1qamBarcqnrw
        fOwdQVWDlsW3R40a1WZevTYVViQSCUjQvUiQgWkSogW4c9G8eU+QQi6cTqU3RyN8G3+BoIrw
        AvDgwVwK5s6d2+S2ttyu6FPpsAeIiIhyll1QcNrBj/ZJCf8GbkN9O5R2BAe4lyns8HOyBgIT
        VPWgDr4dxEX1b3m2/Xf2Hb+v8wJwC6m9sJ496296ACeu3KS6ujqusegfReRx0vBue8NXzrCC
        +W3astpUWFZBwQBBvtbe730I8WRrc+Mt+PeY7lxmaCkWPwTaLkZ6MJRa4JdMls0dObyqqmoz
        MbkakXW++tuve3rZal1KpoJXz5I4JdwDzEns4qUf5RXWsNCPUTsyYUI/VL6WjtVBIiilulX0
        prlz5+6/NJ0uLhYPoNyN/6WhjXAJpXwjJWGzxKJFi3bENT5dVdPipiGQj/CNSOT8/dKRtKWQ
        xFJrEsKIdHSu6FJx5JfV1dXJFyvLFiEuQBjv61zP0P5XtiVnKH7qqSeWqfJzVJMon942IiKI
        jho7duxxqbbVLmdJC3AjwtIMtN6IzV/8lu4KqDUGZGRaJBHZpjg3HDCudZI0YXEz3hLWrwIv
        AK5ntp6ZqNPYpXh6/vyVruj/oZqWjKmCfjKYFz9935/vp7BOHzOmt8CFpOfr7Ijw+2i0/q00
        tNU5PKaDES7Hn9+ZIizH4g987QBJ8tqhHudhkPmkZdksJa4VmHagHZeUmczbwG+BlJXsXijv
        JJIIJk1FRUXQEr0I0rK8iqL610Xz5x88tGmybMbhBmAt/mZaAhyC8Ase9xVrmW20bvPmKhX+
        hZfEILXGvBTO09hHR+2nsIoCgVMQjk+5Q88e81JrY+PfqqurU76ATmG6WgS4AvCbOL0R4VYm
        iS//sn/Pn7/TUbkVZb3P/vfEFpHJpYccku7Yz48QUaI8BDyctjaVGPAgE/2lkOnRo+9xIKen
        ydj+pmPLHXT0A3KBLE4kPvSbCVVQzkD4ETM0M5smGWTJkiUxN6o3axo2ZDxblp5z1rhxezkb
        76uwLEU+lx6/FdnuuvqLnA5m3pcTOA34Jn7r88E8dvKvVESoq9nwhqJ/TpND3mGW44xKQzvt
        M00acPklyhukI8OGxVt+U8hUVFQEraA1FUj5ZVelAVdve/qJJ5L7eLTyIMKfAL8faQG+RB7f
        yvX8WW1RVTVvqcIfEhttKaK9g1ZgrxjDvRRWZNy4QQKfSsPXyRVhYbyl8dkU2+k85mlv4Hq8
        paCfAgwfArcftPjCQViyZEks6sT+LiLL06C0bBFrYsZcHHZxPmuAn6IpLw1dlIdx+NDPyWVl
        ZT1cdKzn35kq+rQTa3kq6dOmSTPKHYDvQgtAIS7fJcRZPs/PKnHcWSCvpqGpAOi5kUhktyP0
        XgoriP0pVfql3I2yFXX+mov5q9slyhRgjM+zFeVeorySDlGeq6xcr6r3i6SeUleUUwIFBekO
        tN6nE1FKmYvwEP5nFgpswOURvylkrFDBcYIcmYYPbisqd1VVVfnLUDFZNuDyA4QN+FVawgCE
        m5ihqb+PnUz1/PnrVdx7SdErQEREVU4M5OfvXhbuVlgjR04NYXEeaUnOJ/O3BQIHzx2eK8zU
        Y7D4HpBUutYECrxOkN8zTdKVytkVJ/Z31LdD4m4UBqDWZ9Ih1AE5S+K43Afsn8O9YzgofyOG
        L9eOSCQSENxzSXH8eskk9dlYS8PTqbTDFHkD4XrEdxSDACcS5iZmaafVwEwTajvObFUvW2kq
        DYlQJFjjSeiq3Qqrf/+6XiCnpuHr1OS67j+WtOWzkot4WUS/hxfc7Ic64Necm1pBz32prKz8
        UIWZpP6VCgicHYlE/NjlkuyMs4Gevs5VNuHykO/ZlVXUV4WUnWUFmkAeSMvqoIiZwN2kFsXw
        WYRvcJdmbrc3AyxcuLBO1P1HWlYJQmTs2LFlsOeS0A4fL34dJRMkItmX4ETTsjTKPCr05TMo
        F+LP0O4C84jyRJoFA1DH4XHQVINLBeH4QKDYT9GHjjNDSxGm4i8ywEWYR5z3/HZvhTgMlTQs
        fWWF09q8KPV28HzVWvgDyiL827MKEK5MZLvtSrgW7hyUDjlPHxDlKAgOhF0Ka+pUG3E/Q+q+
        V3FXZcaiRYvS65eTKWbSG/gxXhCqH1YCtzItieIOSRDQ1ndQeTHlhpTeEnBTdlU5IGHGAH6d
        NTehPOB3dgVgWZwmfoPUP8JFmFNVVZX6S7aLabIem2vA31I3wUCk6+SD38WCBQtWq7Aw1WWh
        Ql/H0gpIKKxR27eXiUjKEeMisi3uxhaQiwUk9uUZDWBxCd4yws+uYAz4PVEy5hRbWVnZiOrj
        +DdkAyBCvlhyGulKD5zg/KtuK/vCD28/+sIf3zn2yI1LvjN42/uhgduX0WfnhxS11BFwWung
        UJhPK8kVydiDSCQSQEn9+lS3xOPqy2H1gEziA4TrvEIrPlGOIsDNPKGpKuVOxcWdjYiveNA9
        CIjIaYB4y6BQqC/K0FRyVSYqur5SXVKSsqG4U6jjRCy+jn+fqxeJ8nAqs4KO0IrzcojAOlJI
        qayqlggVI0eODKRa43H8FbeHy8riI9S1xws63kGHBp3WsuM+XFyiIIrgWgGigXx25JezqXQQ
        G8qG0BQqRqVNfVKHxT9SmaWGw+HernBkyr4MwtvitHyQajNtNKys1tkM4kTgKvxsDHipqafg
        sIQZekcaN3gyirZYr0seK4AKv214dnU9NhKJlFoANgxHJCWPaM+4pk/xyCO5H+B8u4axuAoY
        5rOFemx+xbQ2qhqnmeiOHZsVfSWVaXViI+Wo3r2HpZTm+qIf/aJvWbH7M1z7SYGbQM4WGCpQ
        bqlr2+oSUIeQE6U4WsehtSupWPMskQ9mc9jmNwnG97NjK0o1zaTks+Na1jB8FAfZTxjluaqq
        qvQlVNyTKyWKcBuQvG/XR+ShXEOQzDoDp5Gnn87fpC4pewwoMiBUWHho4pNnHauqKWUVVajB
        4qVUBcs8KgzmswgdqtLRBnHgbywhPYbZg7B48eIWVVlEistCVfqGw+pLQUemTw9Mu+G3k1QK
        n0HkGlUG0ZF7J4KoUtJcy4lrn+czS+fSs2EjeywTW4A/Mk1SioZQrJFpyIrbBO7TZNKc4WXv
        uBbhPd/9CP2wuIWZ6qeYRxZ4xAGqVDWl3UKBEhcOtwBLhZSd7QRd3dporUmljU5hBv2Ba1H8
        phF+B4c/+c0x7gOVuPuKSPLB1HsiIkHXdjtcsHIXFZfeFewXK7/ExvojKkcCliRTV1DEU1xA
        r4aNnL5iIX13rEO8qrIvU8oLycq0D5aIHI2fStJ7oOiaWLP4LtLaYV5nGS43pOifdQQWv2BG
        elI/ZxrXct8Bf7Ghu1DVPHEZaUUikQI09ZJTivy3undeWn2R0s4MDRHi68Cx+CuI0IJyJ1Po
        1Eo/TU07VkDqRSwF63CSmVVOn24N79UyRdCfgQxMSlG12T8UtezgpNXV9Krf0Ag8kEhT45uK
        igobdAQpVAtK2F/fra/fnPnd7eniUspclHsQ/F67DUwmyDeYoX7cSDqVqEiNiKYaahZAOMay
        Cgp6iqQWjqOqKqqv57z9KsBpiSyi/naTlHm08q+UCpP64MUXX6xX1FeZq71QRlRUTOqwN//n
        WkuPt4XfQWr2zb0QoaSlltOXL6g7/e3HU06X3bNnz5CoDCEFhSUirqv6+pIlSzonlOwsiRPl
        JtwU/PeEIBY/IJ8JaZQsIzRv2tSg+KspuQsREZSjAgGRXqpSlMqnU6BJcTOwu5JGntByaW29
        NtS0s2+osQ7LjeME84gWlBELl0DbO1gfIWwnxi+YlvIWrT+UtxEmk4KvnMIhZWVN+Xj55g/I
        RdNv6aUx68eq9EtrrW/w/CxiDf0GxZq+8+59q66vCw7xltfFCbtONPF3aeLvzUD5Hjaf5o/+
        vWXe1b17b1neN0URHScYeo8ZKuy6v1NRftLGkTcm+t6vwyQ/YtNkO3N0Ospw4Pi2WtwPdQlG
        dxJq3onlxHCC4Z7xvKKftD4aXclnwzmbc27JkiWxMeMmvpWGkPRBAdehl1gpxg8KtcTs9Fcc
        Th/24FcfvaigfkukdMsHEm7ajrgObiBEc1Eftgw9jc3Dz6ClsFd7iqsV5T4u8O8rlDKuLldb
        WlMyLov2sG27gA6UnXdbQmMtW0eR4jKwXVGQgCtclBeQYRThICgk/uShKEpLQjmUobiJ3ylK
        OPFvQVed9s2CXnN+WCbq4GuSpYoTCFlvjf2/LxPmnN19zEE5zusj0ZeL/H97Zx4fR3Xl+9/v
        VnW3urXLNtjYxrYkbxHBgAKJApgGyZZlY5I3M05CMmSZmZBMIAlDQpg3ybyYhExIJnte8t4E
        Xjbmk80JIcZW27JsGjvGEDAEAg7YkixjGy/yon3p7rrn/dFtkFdJXSWpJd3v52NLalXfuqq6
        ferec8/5ndTrgODRN/sAgYCiIf1eO9VO8vfJ36nUa6e+Jv+6gX07opHVeRSX7H4ckw48j6zO
        Y0mDZQfYmzOlrDdY+JXp1dW3b9y48TAyNAZSqBpIEbibCefaBKYwvXSK/r05SsZGZ+YxAGVl
        Zf5LZs56vzzz8H1KO0mZlVNThj4gq/MYCg7/FRc3/hG7Kz6C1mnnrGr2EgTfHemlYH+Eaj8F
        3aCr3bC8uFIDbjas+sTqHKVwGzzQlboQ1JIz/cTeyqM5M6DZb+J45lXu/zNPf11pBxQNF58D
        JPzZdsek2e866xxnPrvO1w+e47UzX+///VBGkWhMfu1ZzH36Z8g9kdrT6jflDbUftgRYIZb9
        ++rqFfds3Lh+2xBaHzEkrvfDzz6Xu7lKQfEipBc8mexI0pN2TGs9csU1B0k4HLanXTrndir1
        PWpnUnLgnDGqSBCC/KOv4vL6/0Te0d1Af9+goA0aX8O7vSkQkTZKHyfhUi+b2bZSA6Yh2YWF
        VwjlKnfnGkRvILiktRlZ8fT/LH9vW8pgpU88kIuELzML1ly0dwfKnvg+ck7se2PH9TTIlAwL
        rtEWfrpk2c0ZGqPVd5xIrwJSfxRFiuAypYHEsa6uroyLvLWDwbcpyl0AcpNhG+d5CidvOgJd
        x1H6zH/D1/fGZpGAeBRxbByhLp8XW+sOAK5yFgn4IdbAn0yRtxMjs2Ueincivyf9WE071u16
        ERTPyoW2hl/MYqgEupPj0d99EgNFHaWc0nOo8MXq6upz1vQbTU6ePNmNpLKJKxSSCpsuc8yk
        tb29PeN2CBXUB4HBZ/ATQNHBF1H4+ktI+SGOAPjWqDna+xGP+3sE4spgCeAjBhF/Rl4p4k0B
        3QHOA6UdFPQcR1pWRwRWzH3eedyfPfCmy0gjGhc3bkd264EBjdUpUiks1ySUrwZu1sjDwM6d
        O+OA+4pQSgPZbiVlRdAxZcqUjCqQWllZOQnEUgzFGJNQOo4p+/4EJuJx4Y1KiAAAG/hJREFU
        CL6J5/HS8PVy8PRlOTGKO1UIApaIDBjWICKz3cZcDYXsvnYwzRAdlXA/sXd8wQz7eAN2vAdT
        mp863T0xCETgV5R3hcNhD4Q4vUXgLqMBSEYJe/Ek7YtGo5m1O+HzTQcweehvJEJth8Qf63wK
        Fn46ghHtFySutQO6S29IhsvpC97v1atXK4Dpyu2khc+JpWmwBEq7L8ikrczTxrPivQh2HB2y
        HU1W/maJbdsZZ7AocO3nViLuJUco1Miw7VRLqaAIhx6zRMLf23Yi5+Se72Aljw1D19LCbm8X
        EffGU6kLz6ZXA6eWwyPGqXiG9N/t8vyeB5q5h04Cyknv+SREKBAIZNgaFxC3uyMAFL0oNa5g
        I8Mm1TrGdhJp3fFg+6G/LFz33ajHXXJFXl4eSfdln0SpC9/v1as1xb1zdCjErUD6RsMD35MH
        nyPP0bYfji+dEgMARNpaW62MqwVKD4ozK1ropcv4IhEGw+FwRhmsRKJrvwia03kvHXnuj+vj
        GaWaqrW24TJejqSWhAzs9KE0iYzcLKsjK//s7fpBQU9296xELMPWB4Djz0Jn0ax0uqVBPt/b
        ezDjKlaJ0K2iBhS0uIztAUCd09IyJaOmoMkCrrJuqLIWItJGOutTshgZQzcQgPsb7mAQqg9C
        7oS7wgmDQwSOstEWmox0J+iOB64aK96DTLNYjhXAkTnvhChrqI73LoqzNrkrl1GQdF/NWoFs
        g7ieExdmFfdmXiBLgg+DGHTScCqb/FE4ztPD2Ku08CkVEndR7oBIXGTgPEKVwFMu5E+GRGcg
        D23BNFV/SSR8rh/a8PV1AjqzDBao0DL77Wi7eAGGsIevAdTFenoeH76OpUdZWZkPQtexfUoL
        joEuZX4FFwVP6ozbldi0ad0eiLoLIo2DkLZwSETpxD9XV1fnftbpNdrOx2BiqC6AkL3Kko6B
        jjvZxZcgrnWqBtMf7C8qQZ+dvtFJZOWkuZx8E19vO5STcYkacHxB7Fr8CbRNmYdBKLNoEdQr
        nfhsJhYwnjp1ai7gukgIbAW0QCQBMi2DQ5ICmcTsRJoewuGlICfrj21t3R+kjQcgcpUAof5i
        hSIiII8D8gdH9Fe31NUdHc3+ng9LYfKggj4viHTFHWfAWJjI9z/Vd+vnv/dzQCrhwSA7H5rW
        ydcLSp5JLntSGXfJTKnk93LGz6f+73esKF82qC4DJG2XhL+vU/t725t6fcHkMvjNc6BfP5Lf
        n/r/1O/P/B3Oej35vTrHe+SsVs96f1fhLPx18R0sfeZhTH7tuRBE554htqkh0grwdw6cr23a
        sKE53eswnFhWaAo8WBLagNMCWjEAaSdTEZgScOwCAG5r6HnOmqRG15Ph5cvfYxM1SlQ1BAsF
        kkWileALIvxtvKfzyaTfK0PRzqWwGHK3Gcs2FfcNKvi0tR1PFORhrQg+OBxBpAL0KSR+dNzB
        l9EK4GIAbanzTAHQnvpQd4AoAtCJZBGvztQxvuTXGS/8thSQKNI15iTsvo7YvO3/9zMvVn8x
        qcahQMRT51H9vsbB034GAKvfsae+DyBp9BL9jk30ey/7HZ9I/fMBSIDwp772O7ajqISNl/0N
        C/a/ON0nsWqBlFGYK5BWAi8AOtLR2hrdsWPHsJSb8wKxEpcSrgPeHNsROWZBet1Nq1kolp4F
        pF8Ic7iJ1tYeBvATAD+pqakJ9PT0+Do6Ovoy0Dl5bmwuEA2/m9tEyHGtfYNa7ka+/6n2VV/4
        /n0W9DUiWOC90ZItfb3xb+GDU10tvwvCK/ciiFbQxexTxJq27085L452gvsFaAeQckw9AsCq
        qamxI5FIHPAgLGn4IWgtFBFXSuwiOK5iIi1u64aJiF8ppltEc8SJRCJ90Wi0c8wYK4DQfKtb
        3X0R7g8G+wb9FF5z/yebHeo7Cez1NMxBuIOCf/39N+5xvfzu6zvWBbqrjk3S0sLLw+Fw5m0c
        nRsnEon0YWwYK4TD4QBFLnfdENGkEu3trW7LoZMkyEXl5eWZl+MwDqisrCwi3FdJoZLG1FN5
        sMgauy2qibtBvAKXHxABEoDsFB2/45f/8WlXkrmnCAQCcQH2udELFxESvBxARvphxzy5uTkA
        F7psRUPkVbVjx44eCBtcd0pwWVFRkevacIazUX7/AiEvdt2Q1q9iqEZn9Wr96698eq1ycBuA
        zUDaITC9gKyhI+/51QOfeX7IksLnIRqNakJeJdNPW0qpHCz0+/PHVFXlsYIVj18CoMTlCiEB
        4C/JnRXRL8Ht9JKYqZV/yGWkDAOiSGuxa1VYoNsBdqX5XvnFA5/emfDZf6O13AngT8DAFV9E
        IBDpAmQLtL7V6db/+IsH/qUpzT6cDy3AX8RloKsA02HFrvCqU4Y3UUpdA6YjRPAmAnQDKmmw
        tMVdEHG1Q0agQClc56YNw9lce+212YAsFkl/2z7FQaenx5Xu/prVd3QuDLT9l4rzbx3BhwD8
        TCDPCWS/AC0AjgNyVEReE+ApUH4ggvejN/HeX371X/6w5tt3D8suluNYrwLu1FhJ+gTqhjHk
        xxoTlNbUBAC1GG5FQkVakZC9NgAkEolmn2UfZlLML11sgJVlq1Z97eU1azJOfXSskp1dNF0g
        V7rZpZOkk2ZXR0eH64DY1atXawAHAPxm1arf/C4xa98kv99/kYjOt2DZgI45cNp8On7oF1l9
        bUgeP6z4EGsW8R1x+xQHea0TCExBBobnjFUuBWYA8ja32ggC7iNjr9sAEA8Ejvjizisg3Dl2
        iUWXdHVd/jLwrKt2DKeg2FJNwG1dwIQIduzcudPTDP41a97jADia+jdqbNy48eSS5SueJ9zt
        VFNkYQD2VQDWe9S1CY9FXk9wltt2CHmmrq6uSwHA9rVru0g+5b5R5ECsW8y02hsqKyuLKLIC
        bh9PZJcIn0amZfh6h1Dw5FAT3c9qBMhTCu+Ca8lwA5AsAkPw3SLiKuFTgB5SngLevDE6kdDb
        4dZxKWKRcovf7884EfyxiGUFrhLySg+aOqR0LF2H+5iAFncScCW4mBTrRGXVihWzPerWhMbK
        ynoLwHe6jR+k4GBM65eAfk+SHjovAdLoquFkx8pE2RlaamhMYcFS74PIJA/aeqqurq7Fg3Yy
        lkRPT6OArquPE5xB4buRYYKUY41wOGwrqPcB8GLy8oL09h4E+hmsQF9fu05G/7t1ktqg+nA4
        vNKdA3SCc1P1ykWA1Lh9OgHSRcFGjN/lIABg8+bNJ0m92W07IuIj5COVlZVmleACvz93JpR6
        n9vdbUnuGG04lef7RmPRaDRBjY0Qd6WkAICQdwRCzk1u25mohMNh27bkQyBcB+IKsI86vtOL
        fmU42tFqM4AB5XMuRKp+5QIGArfA+LLSIhwO21o57yUwy/UDlzyu4Ww99eNpN6SXegfoQQIo
        mSfgR2tqatyESUxY/H5/KURuBeh684Lk9gN5ea950a9Mx+m1/yoiL7pJ00lhK+FHlyxZMtWT
        jk0wrFCoWFH9PVwafBERCp5yurvfGL+nNbgtEmkR0WvhQVKlgNfGoT7gtp2JRjgczhHbd6+k
        VaLsdESkF6LWTJS4uGj00XaQawi4l7cmr4bt/zDMLGtIrFq1ylJQd4BwmzuIlJz3r/oLEp51
        M7TmOogccX0ykSxFfuqmm2+e7rqtCYQdClVScIt7ZQYRgs87fV3PedW3MYBGHLWgJ+XZbJIf
        rqqpWeRBWxOG1s7O6yiyCh4Yegpek0TfaXLPZzXqV/oFEH9yfTKSIjLf0vqOcDhssuAHwfXV
        1dMo6i6Qrh2+JBwoeWTz5s0jWrJrtNm0aV0jgC0eLAsBoJhUd5u4wsGxdOnSbNC6F14k6gOO
        ptRu2rTptHSyswxWJBJp15CHAfdVWlNVaD/mD4Wq3LY1AWCW8t1F4p1eNCbgEd3X9xt4sTwa
        W2it5ecAT3jQlkVwlT8r++9gloYXJBwO22L7P0ygGp5cKzmkFX915qvnbDjRbT0ByNNePKUE
        KBRR/+vGZcuMksP5YWX18mpAPgb3qgwA4FBkTX19fcYqaA4nPR3Wk6R4UkRDRPwgVy9Zvty9
        AN04xs7Kuo6Ce+GRYRdwg+7sfPHM18/ZeDT62AmCP0VSg8YVKa2hK21lf768vNxlEYXxyY3L
        ls1Til+Gu+TzNxDIAUecX2Ccx16dj+3b13ZoyMMicK3RnyqyMk+B/1ZZWenFUmfccdPy5bNI
        +wsCmeFRkych/O9zVf85nzXUTqz3EQCveHF2kjaB9xZeNPV24w84nYrq6iKb1moA5e6DRJNQ
        sLa1peXPXrQ1VrEc53GvZllJo8VbVCBo/FlnULZqld8S9UVAFnsxflOrugidvnMKKJy31n1T
        U1NfSencHoBVpPtliogoAhW2L7DvqisX7dq1a9eEfPr3p6KiIpgdyn5AkR8g3cdcAYAAe4Vy
        z/atWye0REpjY2NPccn8w6S814t4NgA2IVdatr9t5ozpzzU3N48JPfXhJBwOZxUI7wVwJ0lv
        5NHJNsfhx+vrIueMHbzgejPe272OwJPwYGnBJPmg3Heiq6sGEzxXKxwOZ+UWFn6awg/CG78V
        kNS9/umhfftc59SNB17fH9wGYAM8KtYggiCAfw+EQu+a6DOtsrIyfyCYcxuAuwF4dS0SAH67
        JS/rhfMdcEGDFY1Gj2nqHwrgqqrO6bDEEvWNpUtXVGCCGq2ysjK/LxT6e0D9GwnXxSWB1FRa
        ZK/SiQdffvnlCREoOhAvv7wmJqK+nVJDdU2q2MoUgfpPO5BdjQk6fgFw+qVzVgnxJZL5Xrky
        ANkn4vwQyVqi5+S8S8JTFOYt2J+VLZeQvNqbTgECmQSFquLSBc82NeyeUDtZZWVl/ukzZ91B
        8KsgvUxd6hbyf27aENnmYZtjnqaG3ftLSudOIvEOgF6FJhRSYXFxyfy9TQ27PfHzjiHUkmXL
        PwTy26RrYcn+xATyQH0k8uiFDhrQYB06tDs+t6T4VVHqZggKvLCmqTbyqeS60tIF+2fOuKRh
        IvgEKioqgpMunnYvlboXZIGHTWuCj7XDeeBgQ4Pr+LlxhhTPntcExQoSXu1iQQS5ULyxZN7c
        fcErrmho2bVr3Me7lZevDF22qPQjJL8OoMi7mRUAyKY4cH/znj0X3Nkd0GABQGNj48nSknlx
        kjfAAwc8kPJpgZMEUqH8vpOFeXkvHzp0aNwarXB45eRQbtbnQN5DINfLtgXYqwX3bNtQ60rP
        bLzS1LSntbik9CTJ5d6OX+QAXJzbm+gsLZm9q7GxcawU5h0yVVVV+dn59l0kvwDSM2OVVI9h
        q4j+5JZIZECRyUEZLAAoKZ6zSyz1Fgje4qVlJVlAoCqUnSfz5pa80DAOZwjV1dWlKsBvEvgo
        yYCXbYtInIIvFuaG1pqd1/Mzf15pk4DTQF4FD6PWCeSQcgOUNWnmjOk7mpubByx/Nta4vqZm
        is/2fZfgP8Pjhy3JOES+uylS+zMMYnNv0AarsbExPqe0dJeCqgAxzVUvz0AEPhLXa7CsZN7c
        V5v27DnsZfujRVlZmX/RNdcsI6z/l5ydctDXe5A4BH8d6+36Sm1t7bgz9F7S0NDglJYUPweq
        xQJM93Q5Q/oFKLd8gbfPLpn3yt7G3YcxDoJ2w+GwPW/hW8M2+BDJagCeVnZPJejXUSc+19jY
        2D2Y9wzpA7S3oeF4cem8oySWikiWZ4GOyXYskvMoXDxn3vzWaRdNad6/f/+Y3e0K19TMKMgv
        /CTB+wGZTXrm8AXwxs1+yaG+8/FNmyZ0zNVgaWxs7JxdMvcAlVpMIN/LtpP3V+ZY5OKSuXMT
        M2dMbxjLs61wODzZF8y+g5QvAyjzevwCAMlXNXj3pg21ewb7nqE+8SUYWNSUm+9kAXLtMPwR
        CsQUiizzB4OXXFpSvLu5oeG4x+cYblRV9YpKi+o7AD5AMs9b5+Qp2EI4n6mPRLZ73/b4ZdbM
        6c2Wz+8QuDFZNMVT9wZBTBbyJtvnX3hp8ZyXmxsbj2Nszbasm6pvvtr2+79D8h8BTvJ6/Kbq
        ZHYTcs+myPohyXen1ZGKiopgbuGkhwC8B94FjZ2NyGFR6kGH8l9b1q17HRl841etWmWd6Oi4
        SinrEwRuBbz1VZ2OdAn42U216x7ExFNjcE1FRUUwt6DoSyDvxjCqMIjgOCE/cSgPbq6t3T1c
        5/EIVi1ffhnBO1LjdzjVgmMAVh8/cugbO3fuHNJGRdqWs6pqRbHy8f+AqMIw3fTUDkJcILtE
        y89h8Q/169c3w6PIZS8Ih8NZvlBoAYX/IOS7CEzH0Geug0ZE4iS/2dV28j+2b9/uSr98IlNR
        XV2Ua/l+BmAZhvGhKyJxEHsJ+YkDPNJ65MjeoX5Ih5OysjL/tFmz5lO4isBtIGZ4lMp0PmIQ
        /jLWk3VnNLpmyMnprqZ6N1VXX2Vbvh+LyOXDs+w5jRgEr4D4VVwnHskimyORyGg5mrl06dKQ
        VoErCXkfKDeTnIlh1kxKDf7HbNEfiUQi7cN5ronAjcuWzbdpP5TSIBvue5cg+YoI11LpX8a6
        uhqi0WgfRmfVwPLylcHJk7FAlL5NyBUEijGMD9oUWiARialP1Nc/lladAddG5qbqlVfZlvwe
        wEwv2hsEIsBRCh4H8GiPjm/dtnHjiOzKlJeX+wqnTi1VDm6Ewt9BcA3I7OE+bwoNwfoeHf/Y
        to0bjZPdI5YsX34FwYcAlo/E+U7FHQHYQsHaPklsjW7YsA8jY7iscHX1HL+ybxLiFoLXi0ju
        CEw2AAAiEnWg/2lLJJJ2vKAnHa2qXlFFhR+QnOdFe4NBRCQlUn8IkKcBbiXlGae398Dhw4dP
        epFPV1FREQwWFl5Eh8VK8WpSlgj4VgKFIuIbwRstANeJkrvq169vGolzTiBYVVNzBal+TvAt
        GCFl0ZSMSh/I4xDZATKqNZ6LSbx5al7e8TUeFA4Jh8NZSuVMsrN0iUC9DYIbSLkaYJGI+Edq
        /CLpwnk2Ic773RgrwLsZkaquXlGjLXwLgrkjeCEA9Pd1oQWQAwB3i9a7AO7WNg/oePwELKsT
        3VYCsBK23Sk+n0/i8Th7AwFFrW2fZfklkcjxaXWx2JilyLlaUAZgLsBpBAq83lUaJAkItuq4
        fLS+3hirYYJVy1ZeS6V/SLAMoyOHHANwApCDSFaw/qsGdys4+ySuTvSqeKfV548nEtrJyurT
        /cev3aUsn6/Xr32+HIucLCKzCDVfIAsBziVkhiTT6jyNoxokDiBPa9F31kciz7ttzMsPn6pc
        seIGS+PH4kUBRW9wAHRD0CGUNgg7QekhGEuZOQUgACAbSdWEPAB5TL6WCRreWgT1DvXtW2pr
        9412Z8Y7S5eueKfY+AHBK0a7Lyk0BN2AdABsF0gHiW4RxknRIlRJrToJCZALMD+V9pWFzBi/
        AGSbo507N2/YcJbccTp4bVS4ZMnyRbDVj0iUI2Mu2thDROIEHo5RPh+trR0Xkf9jgZQj/gck
        boQZv25IALI+JvrOaCRywKtGPd8VaGrac3hOafHTCupSgcyh9+ko4x4RdBL4QQ/0fVsjkaOj
        3Z+JRHNDw4nZ80qfIDALgjleKcFOMLpA/KLHSXxm64YNrw98+OAZFmOyt6HhyPTi2X/0KatI
        gMsAqAxZImY0KV/cMUC+1tl64oHtjz/uoXCiYbDs3bOnrXTOnCiUHSLkrSC9UoQd16Qi2DsA
        frO7Xb78x8cjnggn9mfYZj/7GhvbswL+DXn5BZ0gFyWlOAwXhHhBNO6o37D+4QMHDmRMcOFE
        pLGxsSsYWLQlNzfWTIV3iCDHPHTPT+ph2ywaH4v3dP1469ZNg0pmHirDulxraWlxCvLznglm
        h/4MqDkkpsP4Bc5GpAvg7x3oj2/eULsTGRTJP5FpadnlNDXuebm4tHQHoGanBACNi+MMRKRX
        wPUC5476DbVbh1OMc9gv/qFDh3RTQ0NTafHsx2FZOSJSCiBgnlYAkkUj9gnw9Z4O3P/EltqM
        zpecoEhTQ8P+4tnzo1BaE1gogGdKJWMcDUELgK8nKPdviUQahvuEI3rRy8rK/FMvnfM/FHAv
        IFdM5JsuInGAEUfH79uyceOfYWZVGU84HLatUKhKifoSiaswgWdbqfG7jdT31dXWbsMIPWhH
        w2Dw+urqqVnK/jjBfxLItAlmuBwIXtDU//ukZf1652OPDcta3zB81NTUTHHID0P4MQGKJ9j4
        1QJ5FZDvxru7fx2NRltH8uSj8oR4rbGxMxjwP5mTV7RDEQEBpgMSHOc3PiGCg4B8T2nr3zdt
        WBc9tHv3mBUonMg0NDR0F+TlPRMI5W+hkmAqEyKE8V32y4HI6wI8TFt9tiAUqq+tre0Z6U6M
        +gUuX7kyVBjX1yuFz4rgOowj/1YqXwwATwjkd0rhR3Xr1z8Ps/wbN5TW1ATmiHUdiI+DWAEP
        lXgzgdQY7gaxhsSDxw8ffmY05XEy5sKWl5f7iqZMW0yFf4DIMgEKx/iNdwC8JiKPaMqPNtfW
        NsAYqvGMVbns5muUktspWCbAxWN5/KbCFPYDsk6L9VB9ZO2fkQEbQhl3QcPhcI4dDF5GWrdC
        pApJnZ4xMet6M3AOL4ngETrx9QcPHmwylZgnDuUrV4byY7EFlrL/lsQtAItFxoa7I2WkOiHY
        I5BHEzrxiPT1NUaj0YzRps/YixgOh22fL2cOfLyBot8D8goA+SMp6zJINERiAA4DslUr/kF6
        re2bN689igx4IhlGDVVVtWI2bVkM8haC14IoyLTxmzJSMYicEOAJgo/CsZ6sq/vDAWTg+M2Y
        C3chysvLfZMmTZ0vttwAUdUAyklcjFHaNOgnZ9MEyFMCtYnx3uimZPWajLvJhlHHunHZslJb
        qTDASgDXEJyO4ayHMABJ9VruB+RJatTrBLbV16/fiwwfv2PCYPWDFRUVWcHCwotsUZcL5B0E
        rhZyFoCLCOSKiKd5i/2MUzuBgxDZI8CzWuPJmNKvnHjttTaz5DMMEobD4YDP5yuCFbiCCtcA
        KIdgLoiLUuqfnhuxVMxUOyBHCO4WyDOi8SdJWH/Z54+3NkQiMWS4oTrFWDNYZ6Kuu25FfjDI
        yUrJDEdhgSLmQjgHxCUQmQQgJKAfEBugRUJJv7+bEA1QC+AQiAsQI9AhxDFoOSAiDVTYTbIR
        8fh+ACfq6uq6MUZusCGjUW+vqcnJBqYosWZS6VIK5wtRDOElICZRJEeSwns2kysKJf3S25jc
        yNGS3ORJQBADpZOCFiEOQrCXgr9qOI1K64OxWKwlGo12YYyO37FusM7NqlXWtX19IV88nk+t
        8xV9eZbSORoIKVFZIuKDUqSIFiUxLdJjiXQntNVJS7eir6+tNRTq2PnYYz0YozfWMKaxwuFw
        0Ofz5WnbLiCQR7GyRXQOLASo6T81frXWcZK9pO6kZXVKjO09jLUFRdrr6up6YHamDQaDwWAw
        GAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPB
        YDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwG
        g8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgOAf/H+njL/vHmcusAAAAAElFTkSuQmCC
      </shape>
    </shapes>
  </external>
</workbook>
